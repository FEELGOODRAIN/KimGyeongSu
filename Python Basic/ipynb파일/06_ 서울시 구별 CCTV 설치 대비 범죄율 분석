{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO6jO8CiKu5NqSsinqpC04i"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":138,"metadata":{"id":"3YhlmdcD1cyA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696983083154,"user_tz":-540,"elapsed":3669,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"9df4fde8-75e2-4783-8ec3-b07c0025c529"},"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","fonts-nanum is already the newest version (20200506-1).\n","0 upgraded, 0 newly installed, 0 to remove and 18 not upgraded.\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 12 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n"]}],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import matplotlib.font_manager as fm\n","!sudo apt-get install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf\n","\n","plt.rc('font' , family = 'NanumGothic')\n","mpl.rcParams['axes.unicode_minus'] = False"]},{"cell_type":"code","source":["import matplotlib as mpl\n","%config InlineBackend.figure_format = 'retina'\n","\n","!apt -qq -y install fonts-nanum\n","\n","import matplotlib.font_manager as fm\n","fontpath = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf'\n","font = fm.FontProperties(fname=fontpath, size=9)\n","plt.rc('font', family='NanumBarunGothic')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bf-J7fco88sr","executionInfo":{"status":"ok","timestamp":1696982636689,"user_tz":-540,"elapsed":1008,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"cfc9fde0-b7ea-45c2-d107-a6616f45d8ef"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["fonts-nanum is already the newest version (20200506-1).\n","0 upgraded, 0 newly installed, 0 to remove and 18 not upgraded.\n"]}]},{"cell_type":"code","source":["CCTV_Seoul = pd.read_csv('CCTV_in_Seoul.csv')"],"metadata":{"id":"3kJFFTJUI5zb","executionInfo":{"status":"ok","timestamp":1696982637135,"user_tz":-540,"elapsed":447,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["CCTV_Seoul.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"52ludsOw9sjt","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":65,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"5ea31f8d-53e2-4abe-8d00-a501d28aa8dd"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 25 entries, 0 to 24\n","Data columns (total 6 columns):\n"," #   Column     Non-Null Count  Dtype \n","---  ------     --------------  ----- \n"," 0   기관명        25 non-null     object\n"," 1   소계         25 non-null     int64 \n"," 2   2013년도 이전  25 non-null     int64 \n"," 3   2014년      25 non-null     int64 \n"," 4   2015년      25 non-null     int64 \n"," 5   2016년      25 non-null     int64 \n","dtypes: int64(5), object(1)\n","memory usage: 1.3+ KB\n"]}]},{"cell_type":"code","source":["CCTV_Seoul.columns[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"rVZTfyUz9tqS","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":61,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"87b768fe-a9db-4272-e79a-738028c9f8c2"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'기관명'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["CCTV_Seoul.rename(columns = {CCTV_Seoul.columns[0]:'구별'}, inplace = True)\n","CCTV_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"sDIHkGZk9vXA","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":59,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"f69b7861-e0fe-4dc8-e450-52bb846bc0c8"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별    소계  2013년도 이전  2014년  2015년  2016년\n","0  강남구  2780       1292    430    584    932\n","1  강동구   773        379     99    155    377\n","2  강북구   748        369    120    138    204\n","3  강서구   884        388    258    184     81\n","4  관악구  1496        846    260    390    613"],"text/html":["\n","  <div id=\"df-415de778-e594-4cba-95ff-7350ed91c2b3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>소계</th>\n","      <th>2013년도 이전</th>\n","      <th>2014년</th>\n","      <th>2015년</th>\n","      <th>2016년</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>강남구</td>\n","      <td>2780</td>\n","      <td>1292</td>\n","      <td>430</td>\n","      <td>584</td>\n","      <td>932</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>강동구</td>\n","      <td>773</td>\n","      <td>379</td>\n","      <td>99</td>\n","      <td>155</td>\n","      <td>377</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강북구</td>\n","      <td>748</td>\n","      <td>369</td>\n","      <td>120</td>\n","      <td>138</td>\n","      <td>204</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>강서구</td>\n","      <td>884</td>\n","      <td>388</td>\n","      <td>258</td>\n","      <td>184</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>관악구</td>\n","      <td>1496</td>\n","      <td>846</td>\n","      <td>260</td>\n","      <td>390</td>\n","      <td>613</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-415de778-e594-4cba-95ff-7350ed91c2b3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-415de778-e594-4cba-95ff-7350ed91c2b3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-415de778-e594-4cba-95ff-7350ed91c2b3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1b4c96f6-270e-459f-8f12-e5de44e66037\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1b4c96f6-270e-459f-8f12-e5de44e66037')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1b4c96f6-270e-459f-8f12-e5de44e66037 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["pop_Seoul = pd.read_excel('population_in_Seoul.xls' , header = 2 , usecols = 'B,D,G,J,N')\n","pop_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZZ-zRLFC-YMT","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":58,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"3b123162-3c89-4a29-97f2-007e1804c841"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   자치구           계        계.1       계.2   65세이상고령자\n","0   합계  10197604.0  9926968.0  270636.0  1321458.0\n","1  종로구    162820.0   153589.0    9231.0    25425.0\n","2   중구    133240.0   124312.0    8928.0    20764.0\n","3  용산구    244203.0   229456.0   14747.0    36231.0\n","4  성동구    311244.0   303380.0    7864.0    39997.0"],"text/html":["\n","  <div id=\"df-099550fd-e43d-4ad5-93b6-f115ab7f416d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>자치구</th>\n","      <th>계</th>\n","      <th>계.1</th>\n","      <th>계.2</th>\n","      <th>65세이상고령자</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>합계</td>\n","      <td>10197604.0</td>\n","      <td>9926968.0</td>\n","      <td>270636.0</td>\n","      <td>1321458.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>종로구</td>\n","      <td>162820.0</td>\n","      <td>153589.0</td>\n","      <td>9231.0</td>\n","      <td>25425.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>중구</td>\n","      <td>133240.0</td>\n","      <td>124312.0</td>\n","      <td>8928.0</td>\n","      <td>20764.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>용산구</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>성동구</td>\n","      <td>311244.0</td>\n","      <td>303380.0</td>\n","      <td>7864.0</td>\n","      <td>39997.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-099550fd-e43d-4ad5-93b6-f115ab7f416d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-099550fd-e43d-4ad5-93b6-f115ab7f416d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-099550fd-e43d-4ad5-93b6-f115ab7f416d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-236629c6-de7c-4afd-a1c0-4e15483334f0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-236629c6-de7c-4afd-a1c0-4e15483334f0')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-236629c6-de7c-4afd-a1c0-4e15483334f0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["pop_Seoul.rename(columns = {pop_Seoul.columns[0] : '구별' , pop_Seoul.columns[1] : '인구수', pop_Seoul.columns[2] : '한국인', pop_Seoul.columns[3] : '외국인' , pop_Seoul.columns[4] : '고령자'} , inplace = True)\n","pop_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"tFnx9FbH-vyO","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":57,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"21f2a6a6-ca12-4847-ac41-72498eb8e20b"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별         인구수        한국인       외국인        고령자\n","0   합계  10197604.0  9926968.0  270636.0  1321458.0\n","1  종로구    162820.0   153589.0    9231.0    25425.0\n","2   중구    133240.0   124312.0    8928.0    20764.0\n","3  용산구    244203.0   229456.0   14747.0    36231.0\n","4  성동구    311244.0   303380.0    7864.0    39997.0"],"text/html":["\n","  <div id=\"df-eae7ca1b-cd9d-40b7-96dd-b6a7db646d6c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>합계</td>\n","      <td>10197604.0</td>\n","      <td>9926968.0</td>\n","      <td>270636.0</td>\n","      <td>1321458.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>종로구</td>\n","      <td>162820.0</td>\n","      <td>153589.0</td>\n","      <td>9231.0</td>\n","      <td>25425.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>중구</td>\n","      <td>133240.0</td>\n","      <td>124312.0</td>\n","      <td>8928.0</td>\n","      <td>20764.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>용산구</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>성동구</td>\n","      <td>311244.0</td>\n","      <td>303380.0</td>\n","      <td>7864.0</td>\n","      <td>39997.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eae7ca1b-cd9d-40b7-96dd-b6a7db646d6c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eae7ca1b-cd9d-40b7-96dd-b6a7db646d6c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eae7ca1b-cd9d-40b7-96dd-b6a7db646d6c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f2f38a15-7a71-4051-8dfc-639e10be715b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f2f38a15-7a71-4051-8dfc-639e10be715b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f2f38a15-7a71-4051-8dfc-639e10be715b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["dates = pd.date_range('20230101' , periods = 6)\n","dates"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7eqKO8OQAIHH","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":56,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"73f4e030-832a-4068-912e-3c61b42c317d"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DatetimeIndex(['2023-01-01', '2023-01-02', '2023-01-03', '2023-01-04',\n","               '2023-01-05', '2023-01-06'],\n","              dtype='datetime64[ns]', freq='D')"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df = pd.DataFrame(np.random.randn(6,4) , index = dates , columns = ['A','B','C','D'])\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"UJigojpfCCYY","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":54,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"c1ba8777-1b47-4dec-d41c-09e3e9383ecb"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   A         B         C         D\n","2023-01-01  0.669056 -1.220908 -0.874330  1.584892\n","2023-01-02 -0.426797  2.413544  1.630355  1.835696\n","2023-01-03  0.566786 -0.574304  0.015255 -0.226062\n","2023-01-04  0.431755  0.425127  0.832632  1.454567\n","2023-01-05  0.852845  0.042331 -0.819495  0.844144\n","2023-01-06  0.660511  0.431541 -1.260764  1.595353"],"text/html":["\n","  <div id=\"df-cbff0481-4ac0-41bc-ba5c-0202f7586b71\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2023-01-01</th>\n","      <td>0.669056</td>\n","      <td>-1.220908</td>\n","      <td>-0.874330</td>\n","      <td>1.584892</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-02</th>\n","      <td>-0.426797</td>\n","      <td>2.413544</td>\n","      <td>1.630355</td>\n","      <td>1.835696</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-03</th>\n","      <td>0.566786</td>\n","      <td>-0.574304</td>\n","      <td>0.015255</td>\n","      <td>-0.226062</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-04</th>\n","      <td>0.431755</td>\n","      <td>0.425127</td>\n","      <td>0.832632</td>\n","      <td>1.454567</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-05</th>\n","      <td>0.852845</td>\n","      <td>0.042331</td>\n","      <td>-0.819495</td>\n","      <td>0.844144</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-06</th>\n","      <td>0.660511</td>\n","      <td>0.431541</td>\n","      <td>-1.260764</td>\n","      <td>1.595353</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cbff0481-4ac0-41bc-ba5c-0202f7586b71')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cbff0481-4ac0-41bc-ba5c-0202f7586b71 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cbff0481-4ac0-41bc-ba5c-0202f7586b71');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-17862f77-241a-4109-8e85-277eb4b4e4e0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-17862f77-241a-4109-8e85-277eb4b4e4e0')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-17862f77-241a-4109-8e85-277eb4b4e4e0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["#sort_index , sort_values\n","df.sort_values(by='B')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"nnLUnXFpCdHl","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":53,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"754f7701-3b5e-4a81-eb4e-b8b6682f13df"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   A         B         C         D\n","2023-01-01  0.669056 -1.220908 -0.874330  1.584892\n","2023-01-03  0.566786 -0.574304  0.015255 -0.226062\n","2023-01-05  0.852845  0.042331 -0.819495  0.844144\n","2023-01-04  0.431755  0.425127  0.832632  1.454567\n","2023-01-06  0.660511  0.431541 -1.260764  1.595353\n","2023-01-02 -0.426797  2.413544  1.630355  1.835696"],"text/html":["\n","  <div id=\"df-0cc670d3-4ce1-49b0-b753-cfa7e69cb394\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2023-01-01</th>\n","      <td>0.669056</td>\n","      <td>-1.220908</td>\n","      <td>-0.874330</td>\n","      <td>1.584892</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-03</th>\n","      <td>0.566786</td>\n","      <td>-0.574304</td>\n","      <td>0.015255</td>\n","      <td>-0.226062</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-05</th>\n","      <td>0.852845</td>\n","      <td>0.042331</td>\n","      <td>-0.819495</td>\n","      <td>0.844144</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-04</th>\n","      <td>0.431755</td>\n","      <td>0.425127</td>\n","      <td>0.832632</td>\n","      <td>1.454567</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-06</th>\n","      <td>0.660511</td>\n","      <td>0.431541</td>\n","      <td>-1.260764</td>\n","      <td>1.595353</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-02</th>\n","      <td>-0.426797</td>\n","      <td>2.413544</td>\n","      <td>1.630355</td>\n","      <td>1.835696</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0cc670d3-4ce1-49b0-b753-cfa7e69cb394')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0cc670d3-4ce1-49b0-b753-cfa7e69cb394 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0cc670d3-4ce1-49b0-b753-cfa7e69cb394');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f8913234-dc79-464d-97bf-210fb25438d6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f8913234-dc79-464d-97bf-210fb25438d6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f8913234-dc79-464d-97bf-210fb25438d6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df[0:3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"HJHZMMQSDa8W","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":53,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"de7295e4-004b-440f-b63d-c44a885faa1d"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   A         B         C         D\n","2023-01-01  0.669056 -1.220908 -0.874330  1.584892\n","2023-01-02 -0.426797  2.413544  1.630355  1.835696\n","2023-01-03  0.566786 -0.574304  0.015255 -0.226062"],"text/html":["\n","  <div id=\"df-7a4eab66-d53d-46a8-af17-cca430228b11\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2023-01-01</th>\n","      <td>0.669056</td>\n","      <td>-1.220908</td>\n","      <td>-0.874330</td>\n","      <td>1.584892</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-02</th>\n","      <td>-0.426797</td>\n","      <td>2.413544</td>\n","      <td>1.630355</td>\n","      <td>1.835696</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-03</th>\n","      <td>0.566786</td>\n","      <td>-0.574304</td>\n","      <td>0.015255</td>\n","      <td>-0.226062</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a4eab66-d53d-46a8-af17-cca430228b11')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a4eab66-d53d-46a8-af17-cca430228b11 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a4eab66-d53d-46a8-af17-cca430228b11');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-86aa2287-03b0-4aaf-9c48-9d8b8d0099ce\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-86aa2287-03b0-4aaf-9c48-9d8b8d0099ce')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-86aa2287-03b0-4aaf-9c48-9d8b8d0099ce button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df['20230101' :'2023.01.03']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"QkBbXlYUEBeo","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":52,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"19d203af-c028-42a2-cdb2-ea59c44878d4"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   A         B         C         D\n","2023-01-01  0.669056 -1.220908 -0.874330  1.584892\n","2023-01-02 -0.426797  2.413544  1.630355  1.835696\n","2023-01-03  0.566786 -0.574304  0.015255 -0.226062"],"text/html":["\n","  <div id=\"df-23125519-d26e-49ab-baef-5c7cc96c72ba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2023-01-01</th>\n","      <td>0.669056</td>\n","      <td>-1.220908</td>\n","      <td>-0.874330</td>\n","      <td>1.584892</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-02</th>\n","      <td>-0.426797</td>\n","      <td>2.413544</td>\n","      <td>1.630355</td>\n","      <td>1.835696</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-03</th>\n","      <td>0.566786</td>\n","      <td>-0.574304</td>\n","      <td>0.015255</td>\n","      <td>-0.226062</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23125519-d26e-49ab-baef-5c7cc96c72ba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-23125519-d26e-49ab-baef-5c7cc96c72ba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-23125519-d26e-49ab-baef-5c7cc96c72ba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7410e903-d7e1-4618-8535-8fbb359f66d9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7410e903-d7e1-4618-8535-8fbb359f66d9')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7410e903-d7e1-4618-8535-8fbb359f66d9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df.loc['20230101',:]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AY96WlvSEFJ2","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":52,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"b1300e37-6b36-42e8-8cf1-91a770dd83ab"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["A    0.669056\n","B   -1.220908\n","C   -0.874330\n","D    1.584892\n","Name: 2023-01-01 00:00:00, dtype: float64"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df.loc[:,['A','B']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"3K9hKUZNEZL6","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":50,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"61c28b15-f504-4002-a432-ad2b648ee9e1"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   A         B\n","2023-01-01  0.669056 -1.220908\n","2023-01-02 -0.426797  2.413544\n","2023-01-03  0.566786 -0.574304\n","2023-01-04  0.431755  0.425127\n","2023-01-05  0.852845  0.042331\n","2023-01-06  0.660511  0.431541"],"text/html":["\n","  <div id=\"df-8d3727c0-11b0-4400-9492-af2f9f8dc69a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2023-01-01</th>\n","      <td>0.669056</td>\n","      <td>-1.220908</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-02</th>\n","      <td>-0.426797</td>\n","      <td>2.413544</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-03</th>\n","      <td>0.566786</td>\n","      <td>-0.574304</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-04</th>\n","      <td>0.431755</td>\n","      <td>0.425127</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-05</th>\n","      <td>0.852845</td>\n","      <td>0.042331</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-06</th>\n","      <td>0.660511</td>\n","      <td>0.431541</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d3727c0-11b0-4400-9492-af2f9f8dc69a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8d3727c0-11b0-4400-9492-af2f9f8dc69a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8d3727c0-11b0-4400-9492-af2f9f8dc69a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-db1b7350-5acc-4411-90d6-e0d2be82d0e8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db1b7350-5acc-4411-90d6-e0d2be82d0e8')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-db1b7350-5acc-4411-90d6-e0d2be82d0e8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df[['A','B']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"Ih3018ypE2rk","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":49,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"409b74a8-c313-4a2c-d13f-aca28f7d10dc"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   A         B\n","2023-01-01  0.669056 -1.220908\n","2023-01-02 -0.426797  2.413544\n","2023-01-03  0.566786 -0.574304\n","2023-01-04  0.431755  0.425127\n","2023-01-05  0.852845  0.042331\n","2023-01-06  0.660511  0.431541"],"text/html":["\n","  <div id=\"df-88d3fbbd-d7a2-4e70-8a1e-4e7a09b8d32f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2023-01-01</th>\n","      <td>0.669056</td>\n","      <td>-1.220908</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-02</th>\n","      <td>-0.426797</td>\n","      <td>2.413544</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-03</th>\n","      <td>0.566786</td>\n","      <td>-0.574304</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-04</th>\n","      <td>0.431755</td>\n","      <td>0.425127</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-05</th>\n","      <td>0.852845</td>\n","      <td>0.042331</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-06</th>\n","      <td>0.660511</td>\n","      <td>0.431541</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-88d3fbbd-d7a2-4e70-8a1e-4e7a09b8d32f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-88d3fbbd-d7a2-4e70-8a1e-4e7a09b8d32f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-88d3fbbd-d7a2-4e70-8a1e-4e7a09b8d32f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-03aa884b-848f-438d-99f7-2b86438d1c5a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-03aa884b-848f-438d-99f7-2b86438d1c5a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-03aa884b-848f-438d-99f7-2b86438d1c5a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df.iloc[2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D-TMtp78E4f5","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":49,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"0c788226-645a-4ac4-d42d-e970e059670a"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["A    0.566786\n","B   -0.574304\n","C    0.015255\n","D   -0.226062\n","Name: 2023-01-03 00:00:00, dtype: float64"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["df2 = df.copy()"],"metadata":{"id":"tRze5ltiFkXU","executionInfo":{"status":"ok","timestamp":1696982637136,"user_tz":-540,"elapsed":47,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["df.apply(np.cumsum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"KtPVmwA8HX5M","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":48,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"80d87566-ead2-440e-c651-458947c6835a"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   A         B         C         D\n","2023-01-01  0.669056 -1.220908 -0.874330  1.584892\n","2023-01-02  0.242259  1.192637  0.756025  3.420588\n","2023-01-03  0.809045  0.618333  0.771279  3.194526\n","2023-01-04  1.240800  1.043460  1.603911  4.649093\n","2023-01-05  2.093646  1.085790  0.784416  5.493237\n","2023-01-06  2.754157  1.517331 -0.476348  7.088590"],"text/html":["\n","  <div id=\"df-bec1beab-5429-49aa-84ae-4712829bf59d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2023-01-01</th>\n","      <td>0.669056</td>\n","      <td>-1.220908</td>\n","      <td>-0.874330</td>\n","      <td>1.584892</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-02</th>\n","      <td>0.242259</td>\n","      <td>1.192637</td>\n","      <td>0.756025</td>\n","      <td>3.420588</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-03</th>\n","      <td>0.809045</td>\n","      <td>0.618333</td>\n","      <td>0.771279</td>\n","      <td>3.194526</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-04</th>\n","      <td>1.240800</td>\n","      <td>1.043460</td>\n","      <td>1.603911</td>\n","      <td>4.649093</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-05</th>\n","      <td>2.093646</td>\n","      <td>1.085790</td>\n","      <td>0.784416</td>\n","      <td>5.493237</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-06</th>\n","      <td>2.754157</td>\n","      <td>1.517331</td>\n","      <td>-0.476348</td>\n","      <td>7.088590</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bec1beab-5429-49aa-84ae-4712829bf59d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bec1beab-5429-49aa-84ae-4712829bf59d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bec1beab-5429-49aa-84ae-4712829bf59d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d479f89a-e644-4305-8480-b90f47f21915\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d479f89a-e644-4305-8480-b90f47f21915')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d479f89a-e644-4305-8480-b90f47f21915 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"yN8yAL1SMQTX","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":47,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"85eff33d-9213-4342-f7b2-d75b2ca9d662"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   A         B         C         D\n","2023-01-01  0.669056 -1.220908 -0.874330  1.584892\n","2023-01-02 -0.426797  2.413544  1.630355  1.835696\n","2023-01-03  0.566786 -0.574304  0.015255 -0.226062\n","2023-01-04  0.431755  0.425127  0.832632  1.454567\n","2023-01-05  0.852845  0.042331 -0.819495  0.844144\n","2023-01-06  0.660511  0.431541 -1.260764  1.595353"],"text/html":["\n","  <div id=\"df-f8c7b4b9-61bf-43ea-98b2-d3b6fe632805\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2023-01-01</th>\n","      <td>0.669056</td>\n","      <td>-1.220908</td>\n","      <td>-0.874330</td>\n","      <td>1.584892</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-02</th>\n","      <td>-0.426797</td>\n","      <td>2.413544</td>\n","      <td>1.630355</td>\n","      <td>1.835696</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-03</th>\n","      <td>0.566786</td>\n","      <td>-0.574304</td>\n","      <td>0.015255</td>\n","      <td>-0.226062</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-04</th>\n","      <td>0.431755</td>\n","      <td>0.425127</td>\n","      <td>0.832632</td>\n","      <td>1.454567</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-05</th>\n","      <td>0.852845</td>\n","      <td>0.042331</td>\n","      <td>-0.819495</td>\n","      <td>0.844144</td>\n","    </tr>\n","    <tr>\n","      <th>2023-01-06</th>\n","      <td>0.660511</td>\n","      <td>0.431541</td>\n","      <td>-1.260764</td>\n","      <td>1.595353</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8c7b4b9-61bf-43ea-98b2-d3b6fe632805')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f8c7b4b9-61bf-43ea-98b2-d3b6fe632805 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f8c7b4b9-61bf-43ea-98b2-d3b6fe632805');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a90ef979-138c-4f3c-b8e7-60e720b6c0a7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a90ef979-138c-4f3c-b8e7-60e720b6c0a7')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a90ef979-138c-4f3c-b8e7-60e720b6c0a7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["np.cumsum([1,2,3,4,5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wh2U_36eMRQD","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":45,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"15b893c1-da05-4412-f51e-a73578bd547f"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1,  3,  6, 10, 15])"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["df.apply(lambda x : np.max(x) - np.min(x))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nIbkWxE-Mdxm","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":43,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"2288cc0f-a204-4e8f-bb46-28cb7cb50a18"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["A    1.279642\n","B    3.634452\n","C    2.891119\n","D    2.061758\n","dtype: float64"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["CCTV_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"4y6XSRFfM5Bu","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":41,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"81b186be-8fb0-403e-ad8d-2c9830424dce"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별    소계  2013년도 이전  2014년  2015년  2016년\n","0  강남구  2780       1292    430    584    932\n","1  강동구   773        379     99    155    377\n","2  강북구   748        369    120    138    204\n","3  강서구   884        388    258    184     81\n","4  관악구  1496        846    260    390    613"],"text/html":["\n","  <div id=\"df-94f58138-d645-46e4-93cd-f80a8f807fec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>소계</th>\n","      <th>2013년도 이전</th>\n","      <th>2014년</th>\n","      <th>2015년</th>\n","      <th>2016년</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>강남구</td>\n","      <td>2780</td>\n","      <td>1292</td>\n","      <td>430</td>\n","      <td>584</td>\n","      <td>932</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>강동구</td>\n","      <td>773</td>\n","      <td>379</td>\n","      <td>99</td>\n","      <td>155</td>\n","      <td>377</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강북구</td>\n","      <td>748</td>\n","      <td>369</td>\n","      <td>120</td>\n","      <td>138</td>\n","      <td>204</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>강서구</td>\n","      <td>884</td>\n","      <td>388</td>\n","      <td>258</td>\n","      <td>184</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>관악구</td>\n","      <td>1496</td>\n","      <td>846</td>\n","      <td>260</td>\n","      <td>390</td>\n","      <td>613</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94f58138-d645-46e4-93cd-f80a8f807fec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-94f58138-d645-46e4-93cd-f80a8f807fec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-94f58138-d645-46e4-93cd-f80a8f807fec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-21e26d2c-c1bd-4ee4-a82b-e3d11f0a11b9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-21e26d2c-c1bd-4ee4-a82b-e3d11f0a11b9')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-21e26d2c-c1bd-4ee4-a82b-e3d11f0a11b9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["CCTV_Seoul.sort_values(by = '소계' , ascending = True).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"cNFus4fQNU8g","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":41,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"e2c414a3-6c40-4dbe-ab57-4735759d8016"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     구별   소계  2013년도 이전  2014년  2015년  2016년\n","9   도봉구  485        238    159     42    386\n","12  마포구  574        314    118    169    379\n","17  송파구  618        529     21     68    463\n","24  중랑구  660        509    121    177    109\n","23   중구  671        413    190     72    348"],"text/html":["\n","  <div id=\"df-febee710-de26-4215-a8e3-74403724c47d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>소계</th>\n","      <th>2013년도 이전</th>\n","      <th>2014년</th>\n","      <th>2015년</th>\n","      <th>2016년</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9</th>\n","      <td>도봉구</td>\n","      <td>485</td>\n","      <td>238</td>\n","      <td>159</td>\n","      <td>42</td>\n","      <td>386</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>마포구</td>\n","      <td>574</td>\n","      <td>314</td>\n","      <td>118</td>\n","      <td>169</td>\n","      <td>379</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>송파구</td>\n","      <td>618</td>\n","      <td>529</td>\n","      <td>21</td>\n","      <td>68</td>\n","      <td>463</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>중랑구</td>\n","      <td>660</td>\n","      <td>509</td>\n","      <td>121</td>\n","      <td>177</td>\n","      <td>109</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>중구</td>\n","      <td>671</td>\n","      <td>413</td>\n","      <td>190</td>\n","      <td>72</td>\n","      <td>348</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-febee710-de26-4215-a8e3-74403724c47d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-febee710-de26-4215-a8e3-74403724c47d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-febee710-de26-4215-a8e3-74403724c47d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d20b62ad-943e-4988-94d0-6e6f0f9b31bd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d20b62ad-943e-4988-94d0-6e6f0f9b31bd')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d20b62ad-943e-4988-94d0-6e6f0f9b31bd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["CCTV_Seoul['최근증가율'] = ((CCTV_Seoul['2014년'] + CCTV_Seoul['2015년'] + CCTV_Seoul['2016년'])/CCTV_Seoul['2013년도 이전'])*100\n","CCTV_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"2ffw6A-1NsdI","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":40,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"3bc3876c-7b73-4283-d7ad-0bdf4fb72fc3"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별    소계  2013년도 이전  2014년  2015년  2016년       최근증가율\n","0  강남구  2780       1292    430    584    932  150.619195\n","1  강동구   773        379     99    155    377  166.490765\n","2  강북구   748        369    120    138    204  125.203252\n","3  강서구   884        388    258    184     81  134.793814\n","4  관악구  1496        846    260    390    613  149.290780"],"text/html":["\n","  <div id=\"df-a18bb844-8123-4071-b6c1-9b23f6d07a35\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>소계</th>\n","      <th>2013년도 이전</th>\n","      <th>2014년</th>\n","      <th>2015년</th>\n","      <th>2016년</th>\n","      <th>최근증가율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>강남구</td>\n","      <td>2780</td>\n","      <td>1292</td>\n","      <td>430</td>\n","      <td>584</td>\n","      <td>932</td>\n","      <td>150.619195</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>강동구</td>\n","      <td>773</td>\n","      <td>379</td>\n","      <td>99</td>\n","      <td>155</td>\n","      <td>377</td>\n","      <td>166.490765</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강북구</td>\n","      <td>748</td>\n","      <td>369</td>\n","      <td>120</td>\n","      <td>138</td>\n","      <td>204</td>\n","      <td>125.203252</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>강서구</td>\n","      <td>884</td>\n","      <td>388</td>\n","      <td>258</td>\n","      <td>184</td>\n","      <td>81</td>\n","      <td>134.793814</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>관악구</td>\n","      <td>1496</td>\n","      <td>846</td>\n","      <td>260</td>\n","      <td>390</td>\n","      <td>613</td>\n","      <td>149.290780</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a18bb844-8123-4071-b6c1-9b23f6d07a35')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a18bb844-8123-4071-b6c1-9b23f6d07a35 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a18bb844-8123-4071-b6c1-9b23f6d07a35');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0bdf64f9-78f3-4316-b1b7-ff0b2bf6b203\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0bdf64f9-78f3-4316-b1b7-ff0b2bf6b203')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0bdf64f9-78f3-4316-b1b7-ff0b2bf6b203 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["CCTV_Seoul.sort_values(by = '최근증가율' , ascending = False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"zVkX3eVGPBQU","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":39,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"1e4c88ee-0c5c-4605-cede-3a2d572532b2"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     구별    소계  2013년도 이전  2014년  2015년  2016년       최근증가율\n","22  종로구  1002        464    314    211    630  248.922414\n","9   도봉구   485        238    159     42    386  246.638655\n","12  마포구   574        314    118    169    379  212.101911\n","8   노원구  1265        542     57    451    516  188.929889\n","1   강동구   773        379     99    155    377  166.490765"],"text/html":["\n","  <div id=\"df-2649e7e4-71f1-46bc-b5d5-4949713a4103\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>소계</th>\n","      <th>2013년도 이전</th>\n","      <th>2014년</th>\n","      <th>2015년</th>\n","      <th>2016년</th>\n","      <th>최근증가율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>22</th>\n","      <td>종로구</td>\n","      <td>1002</td>\n","      <td>464</td>\n","      <td>314</td>\n","      <td>211</td>\n","      <td>630</td>\n","      <td>248.922414</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>도봉구</td>\n","      <td>485</td>\n","      <td>238</td>\n","      <td>159</td>\n","      <td>42</td>\n","      <td>386</td>\n","      <td>246.638655</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>마포구</td>\n","      <td>574</td>\n","      <td>314</td>\n","      <td>118</td>\n","      <td>169</td>\n","      <td>379</td>\n","      <td>212.101911</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>노원구</td>\n","      <td>1265</td>\n","      <td>542</td>\n","      <td>57</td>\n","      <td>451</td>\n","      <td>516</td>\n","      <td>188.929889</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>강동구</td>\n","      <td>773</td>\n","      <td>379</td>\n","      <td>99</td>\n","      <td>155</td>\n","      <td>377</td>\n","      <td>166.490765</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2649e7e4-71f1-46bc-b5d5-4949713a4103')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2649e7e4-71f1-46bc-b5d5-4949713a4103 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2649e7e4-71f1-46bc-b5d5-4949713a4103');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-22947f1c-627e-4ca0-ae84-f660626840e2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-22947f1c-627e-4ca0-ae84-f660626840e2')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-22947f1c-627e-4ca0-ae84-f660626840e2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["pop_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"PVag1mnTPYIa","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":39,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"b4d267ef-8b89-4e16-f205-1ce921e578cd"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별         인구수        한국인       외국인        고령자\n","0   합계  10197604.0  9926968.0  270636.0  1321458.0\n","1  종로구    162820.0   153589.0    9231.0    25425.0\n","2   중구    133240.0   124312.0    8928.0    20764.0\n","3  용산구    244203.0   229456.0   14747.0    36231.0\n","4  성동구    311244.0   303380.0    7864.0    39997.0"],"text/html":["\n","  <div id=\"df-a52f4d33-478d-485b-b5ab-cc759eed4a50\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>합계</td>\n","      <td>10197604.0</td>\n","      <td>9926968.0</td>\n","      <td>270636.0</td>\n","      <td>1321458.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>종로구</td>\n","      <td>162820.0</td>\n","      <td>153589.0</td>\n","      <td>9231.0</td>\n","      <td>25425.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>중구</td>\n","      <td>133240.0</td>\n","      <td>124312.0</td>\n","      <td>8928.0</td>\n","      <td>20764.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>용산구</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>성동구</td>\n","      <td>311244.0</td>\n","      <td>303380.0</td>\n","      <td>7864.0</td>\n","      <td>39997.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a52f4d33-478d-485b-b5ab-cc759eed4a50')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a52f4d33-478d-485b-b5ab-cc759eed4a50 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a52f4d33-478d-485b-b5ab-cc759eed4a50');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9adc1e1e-0e4b-42c7-8750-12b9ef80038c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9adc1e1e-0e4b-42c7-8750-12b9ef80038c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9adc1e1e-0e4b-42c7-8750-12b9ef80038c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["pop_Seoul.drop([0] , inplace = True)\n","pop_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"pKtrKdxMP9ur","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":38,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"c75de46f-dedb-4bfa-89c5-b5cc70ee3d44"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별       인구수       한국인      외국인      고령자\n","1  종로구  162820.0  153589.0   9231.0  25425.0\n","2   중구  133240.0  124312.0   8928.0  20764.0\n","3  용산구  244203.0  229456.0  14747.0  36231.0\n","4  성동구  311244.0  303380.0   7864.0  39997.0\n","5  광진구  372164.0  357211.0  14953.0  42214.0"],"text/html":["\n","  <div id=\"df-b62d673f-e354-4e02-afdb-df1570553c12\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>종로구</td>\n","      <td>162820.0</td>\n","      <td>153589.0</td>\n","      <td>9231.0</td>\n","      <td>25425.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>중구</td>\n","      <td>133240.0</td>\n","      <td>124312.0</td>\n","      <td>8928.0</td>\n","      <td>20764.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>용산구</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>성동구</td>\n","      <td>311244.0</td>\n","      <td>303380.0</td>\n","      <td>7864.0</td>\n","      <td>39997.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>광진구</td>\n","      <td>372164.0</td>\n","      <td>357211.0</td>\n","      <td>14953.0</td>\n","      <td>42214.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b62d673f-e354-4e02-afdb-df1570553c12')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b62d673f-e354-4e02-afdb-df1570553c12 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b62d673f-e354-4e02-afdb-df1570553c12');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6bd82b58-6830-493f-b5b3-32d7cb4f6987\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6bd82b58-6830-493f-b5b3-32d7cb4f6987')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6bd82b58-6830-493f-b5b3-32d7cb4f6987 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["CCTV_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"UaUmSjMFQDh7","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":38,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"17a7b61f-edef-4dbf-a109-82122e9da8df"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별    소계  2013년도 이전  2014년  2015년  2016년       최근증가율\n","0  강남구  2780       1292    430    584    932  150.619195\n","1  강동구   773        379     99    155    377  166.490765\n","2  강북구   748        369    120    138    204  125.203252\n","3  강서구   884        388    258    184     81  134.793814\n","4  관악구  1496        846    260    390    613  149.290780"],"text/html":["\n","  <div id=\"df-e6924292-7328-4312-a957-5e190f6fe981\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>소계</th>\n","      <th>2013년도 이전</th>\n","      <th>2014년</th>\n","      <th>2015년</th>\n","      <th>2016년</th>\n","      <th>최근증가율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>강남구</td>\n","      <td>2780</td>\n","      <td>1292</td>\n","      <td>430</td>\n","      <td>584</td>\n","      <td>932</td>\n","      <td>150.619195</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>강동구</td>\n","      <td>773</td>\n","      <td>379</td>\n","      <td>99</td>\n","      <td>155</td>\n","      <td>377</td>\n","      <td>166.490765</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강북구</td>\n","      <td>748</td>\n","      <td>369</td>\n","      <td>120</td>\n","      <td>138</td>\n","      <td>204</td>\n","      <td>125.203252</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>강서구</td>\n","      <td>884</td>\n","      <td>388</td>\n","      <td>258</td>\n","      <td>184</td>\n","      <td>81</td>\n","      <td>134.793814</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>관악구</td>\n","      <td>1496</td>\n","      <td>846</td>\n","      <td>260</td>\n","      <td>390</td>\n","      <td>613</td>\n","      <td>149.290780</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6924292-7328-4312-a957-5e190f6fe981')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e6924292-7328-4312-a957-5e190f6fe981 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e6924292-7328-4312-a957-5e190f6fe981');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c94faf8f-11a5-4639-8713-8ac34acb1c1b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c94faf8f-11a5-4639-8713-8ac34acb1c1b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c94faf8f-11a5-4639-8713-8ac34acb1c1b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["CCTV_Seoul['구별'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gIj4fm4yQJoP","executionInfo":{"status":"ok","timestamp":1696982637137,"user_tz":-540,"elapsed":37,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"85702b2f-a2c7-458f-9a8b-a6f45858b01d"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['강남구', '강동구', '강북구', '강서구', '관악구', '광진구', '구로구', '금천구', '노원구',\n","       '도봉구', '동대문구', '동작구', '마포구', '서대문구', '서초구', '성동구', '성북구', '송파구',\n","       '양천구', '영등포구', '용산구', '은평구', '종로구', '중구', '중랑구'], dtype=object)"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["pop_Seoul['구별'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RE3YS4iNQNL4","executionInfo":{"status":"ok","timestamp":1696982637530,"user_tz":-540,"elapsed":427,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"4fc04366-d6d2-4c0e-d17b-1c4eb9b0b43f"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['종로구', '중구', '용산구', '성동구', '광진구', '동대문구', '중랑구', '성북구', '강북구',\n","       '도봉구', '노원구', '은평구', '서대문구', '마포구', '양천구', '강서구', '구로구', '금천구',\n","       '영등포구', '동작구', '관악구', '서초구', '강남구', '송파구', '강동구', nan],\n","      dtype=object)"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["pop_Seoul[pop_Seoul['구별'].isnull()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"1j7bLy2-QOk6","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":62,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"eafcea3d-47b4-48fb-c431-0ab65d3f2725"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     구별  인구수  한국인  외국인  고령자\n","26  NaN  NaN  NaN  NaN  NaN"],"text/html":["\n","  <div id=\"df-0033cabd-f728-465b-b42a-9c67afa921ce\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>26</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0033cabd-f728-465b-b42a-9c67afa921ce')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0033cabd-f728-465b-b42a-9c67afa921ce button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0033cabd-f728-465b-b42a-9c67afa921ce');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["pop_Seoul.drop([26] , inplace = True)\n","pop_Seoul"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":833},"id":"8hZsZV6_QoBU","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":61,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"f705b3f1-1493-4144-e1ed-bbd885bbeb5a"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      구별       인구수       한국인      외국인      고령자\n","1    종로구  162820.0  153589.0   9231.0  25425.0\n","2     중구  133240.0  124312.0   8928.0  20764.0\n","3    용산구  244203.0  229456.0  14747.0  36231.0\n","4    성동구  311244.0  303380.0   7864.0  39997.0\n","5    광진구  372164.0  357211.0  14953.0  42214.0\n","6   동대문구  369496.0  354079.0  15417.0  54173.0\n","7    중랑구  414503.0  409882.0   4621.0  56774.0\n","8    성북구  461260.0  449773.0  11487.0  64692.0\n","9    강북구  330192.0  326686.0   3506.0  54813.0\n","10   도봉구  348646.0  346629.0   2017.0  51312.0\n","11   노원구  569384.0  565565.0   3819.0  71941.0\n","12   은평구  494388.0  489943.0   4445.0  72334.0\n","13  서대문구  327163.0  314982.0  12181.0  48161.0\n","14   마포구  389649.0  378566.0  11083.0  48765.0\n","15   양천구  479978.0  475949.0   4029.0  52975.0\n","16   강서구  603772.0  597248.0   6524.0  72548.0\n","17   구로구  447874.0  416487.0  31387.0  56833.0\n","18   금천구  255082.0  236353.0  18729.0  32970.0\n","19  영등포구  402985.0  368072.0  34913.0  52413.0\n","20   동작구  412520.0  400456.0  12064.0  56013.0\n","21   관악구  525515.0  507203.0  18312.0  68082.0\n","22   서초구  450310.0  445994.0   4316.0  51733.0\n","23   강남구  570500.0  565550.0   4950.0  63167.0\n","24   송파구  667483.0  660584.0   6899.0  72506.0\n","25   강동구  453233.0  449019.0   4214.0  54622.0"],"text/html":["\n","  <div id=\"df-c818f15f-39ee-4fe3-8d16-7f3cdfb394db\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>종로구</td>\n","      <td>162820.0</td>\n","      <td>153589.0</td>\n","      <td>9231.0</td>\n","      <td>25425.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>중구</td>\n","      <td>133240.0</td>\n","      <td>124312.0</td>\n","      <td>8928.0</td>\n","      <td>20764.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>용산구</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>성동구</td>\n","      <td>311244.0</td>\n","      <td>303380.0</td>\n","      <td>7864.0</td>\n","      <td>39997.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>광진구</td>\n","      <td>372164.0</td>\n","      <td>357211.0</td>\n","      <td>14953.0</td>\n","      <td>42214.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>동대문구</td>\n","      <td>369496.0</td>\n","      <td>354079.0</td>\n","      <td>15417.0</td>\n","      <td>54173.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>중랑구</td>\n","      <td>414503.0</td>\n","      <td>409882.0</td>\n","      <td>4621.0</td>\n","      <td>56774.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>성북구</td>\n","      <td>461260.0</td>\n","      <td>449773.0</td>\n","      <td>11487.0</td>\n","      <td>64692.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>강북구</td>\n","      <td>330192.0</td>\n","      <td>326686.0</td>\n","      <td>3506.0</td>\n","      <td>54813.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>도봉구</td>\n","      <td>348646.0</td>\n","      <td>346629.0</td>\n","      <td>2017.0</td>\n","      <td>51312.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>노원구</td>\n","      <td>569384.0</td>\n","      <td>565565.0</td>\n","      <td>3819.0</td>\n","      <td>71941.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>은평구</td>\n","      <td>494388.0</td>\n","      <td>489943.0</td>\n","      <td>4445.0</td>\n","      <td>72334.0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>서대문구</td>\n","      <td>327163.0</td>\n","      <td>314982.0</td>\n","      <td>12181.0</td>\n","      <td>48161.0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>마포구</td>\n","      <td>389649.0</td>\n","      <td>378566.0</td>\n","      <td>11083.0</td>\n","      <td>48765.0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>양천구</td>\n","      <td>479978.0</td>\n","      <td>475949.0</td>\n","      <td>4029.0</td>\n","      <td>52975.0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>강서구</td>\n","      <td>603772.0</td>\n","      <td>597248.0</td>\n","      <td>6524.0</td>\n","      <td>72548.0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>구로구</td>\n","      <td>447874.0</td>\n","      <td>416487.0</td>\n","      <td>31387.0</td>\n","      <td>56833.0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>금천구</td>\n","      <td>255082.0</td>\n","      <td>236353.0</td>\n","      <td>18729.0</td>\n","      <td>32970.0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>영등포구</td>\n","      <td>402985.0</td>\n","      <td>368072.0</td>\n","      <td>34913.0</td>\n","      <td>52413.0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>동작구</td>\n","      <td>412520.0</td>\n","      <td>400456.0</td>\n","      <td>12064.0</td>\n","      <td>56013.0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>관악구</td>\n","      <td>525515.0</td>\n","      <td>507203.0</td>\n","      <td>18312.0</td>\n","      <td>68082.0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>서초구</td>\n","      <td>450310.0</td>\n","      <td>445994.0</td>\n","      <td>4316.0</td>\n","      <td>51733.0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>강남구</td>\n","      <td>570500.0</td>\n","      <td>565550.0</td>\n","      <td>4950.0</td>\n","      <td>63167.0</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>송파구</td>\n","      <td>667483.0</td>\n","      <td>660584.0</td>\n","      <td>6899.0</td>\n","      <td>72506.0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>강동구</td>\n","      <td>453233.0</td>\n","      <td>449019.0</td>\n","      <td>4214.0</td>\n","      <td>54622.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c818f15f-39ee-4fe3-8d16-7f3cdfb394db')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c818f15f-39ee-4fe3-8d16-7f3cdfb394db button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c818f15f-39ee-4fe3-8d16-7f3cdfb394db');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6049342a-a7fc-4254-a530-b2bf25e40805\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6049342a-a7fc-4254-a530-b2bf25e40805')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6049342a-a7fc-4254-a530-b2bf25e40805 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["pop_Seoul['외국인비율'] = (pop_Seoul['외국인'])/pop_Seoul['인구수'] * 100\n","pop_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"oE9mDlE4Qya9","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":61,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"e4179ec8-6f6f-48d1-8d63-72b421cc7a31"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별       인구수       한국인      외국인      고령자     외국인비율\n","1  종로구  162820.0  153589.0   9231.0  25425.0  5.669451\n","2   중구  133240.0  124312.0   8928.0  20764.0  6.700690\n","3  용산구  244203.0  229456.0  14747.0  36231.0  6.038828\n","4  성동구  311244.0  303380.0   7864.0  39997.0  2.526635\n","5  광진구  372164.0  357211.0  14953.0  42214.0  4.017852"],"text/html":["\n","  <div id=\"df-ad272df5-b826-402d-8620-72f6ccb83efe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>종로구</td>\n","      <td>162820.0</td>\n","      <td>153589.0</td>\n","      <td>9231.0</td>\n","      <td>25425.0</td>\n","      <td>5.669451</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>중구</td>\n","      <td>133240.0</td>\n","      <td>124312.0</td>\n","      <td>8928.0</td>\n","      <td>20764.0</td>\n","      <td>6.700690</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>용산구</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","      <td>6.038828</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>성동구</td>\n","      <td>311244.0</td>\n","      <td>303380.0</td>\n","      <td>7864.0</td>\n","      <td>39997.0</td>\n","      <td>2.526635</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>광진구</td>\n","      <td>372164.0</td>\n","      <td>357211.0</td>\n","      <td>14953.0</td>\n","      <td>42214.0</td>\n","      <td>4.017852</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ad272df5-b826-402d-8620-72f6ccb83efe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ad272df5-b826-402d-8620-72f6ccb83efe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ad272df5-b826-402d-8620-72f6ccb83efe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d219efb5-e95d-43d4-beda-4a34af56c80c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d219efb5-e95d-43d4-beda-4a34af56c80c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d219efb5-e95d-43d4-beda-4a34af56c80c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["pop_Seoul['고령자비율'] = (pop_Seoul['고령자'])/pop_Seoul['인구수'] * 100\n","pop_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"mBklg9K1RJVL","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":60,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"888b67a1-fbe5-495c-c43b-59f10996fb1f"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별       인구수       한국인      외국인      고령자     외국인비율      고령자비율\n","1  종로구  162820.0  153589.0   9231.0  25425.0  5.669451  15.615404\n","2   중구  133240.0  124312.0   8928.0  20764.0  6.700690  15.583909\n","3  용산구  244203.0  229456.0  14747.0  36231.0  6.038828  14.836427\n","4  성동구  311244.0  303380.0   7864.0  39997.0  2.526635  12.850689\n","5  광진구  372164.0  357211.0  14953.0  42214.0  4.017852  11.342849"],"text/html":["\n","  <div id=\"df-e97e53a1-3d81-4b5e-931a-b599fafd165c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>종로구</td>\n","      <td>162820.0</td>\n","      <td>153589.0</td>\n","      <td>9231.0</td>\n","      <td>25425.0</td>\n","      <td>5.669451</td>\n","      <td>15.615404</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>중구</td>\n","      <td>133240.0</td>\n","      <td>124312.0</td>\n","      <td>8928.0</td>\n","      <td>20764.0</td>\n","      <td>6.700690</td>\n","      <td>15.583909</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>용산구</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","      <td>6.038828</td>\n","      <td>14.836427</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>성동구</td>\n","      <td>311244.0</td>\n","      <td>303380.0</td>\n","      <td>7864.0</td>\n","      <td>39997.0</td>\n","      <td>2.526635</td>\n","      <td>12.850689</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>광진구</td>\n","      <td>372164.0</td>\n","      <td>357211.0</td>\n","      <td>14953.0</td>\n","      <td>42214.0</td>\n","      <td>4.017852</td>\n","      <td>11.342849</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e97e53a1-3d81-4b5e-931a-b599fafd165c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e97e53a1-3d81-4b5e-931a-b599fafd165c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e97e53a1-3d81-4b5e-931a-b599fafd165c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c43869a1-85d5-4bf8-b1a7-cc143c27c1f4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c43869a1-85d5-4bf8-b1a7-cc143c27c1f4')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c43869a1-85d5-4bf8-b1a7-cc143c27c1f4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["pop_Seoul.sort_values('인구수' , ascending = False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"YfE8LqpKROOK","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":59,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"71ddda4d-81bf-417e-d7a5-d821a4b033e7"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     구별       인구수       한국인      외국인      고령자     외국인비율      고령자비율\n","24  송파구  667483.0  660584.0   6899.0  72506.0  1.033584  10.862599\n","16  강서구  603772.0  597248.0   6524.0  72548.0  1.080540  12.015794\n","23  강남구  570500.0  565550.0   4950.0  63167.0  0.867660  11.072217\n","11  노원구  569384.0  565565.0   3819.0  71941.0  0.670725  12.634883\n","21  관악구  525515.0  507203.0  18312.0  68082.0  3.484582  12.955291"],"text/html":["\n","  <div id=\"df-fdadd60f-9c98-4103-8858-1a6aa6236ec0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>송파구</td>\n","      <td>667483.0</td>\n","      <td>660584.0</td>\n","      <td>6899.0</td>\n","      <td>72506.0</td>\n","      <td>1.033584</td>\n","      <td>10.862599</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>강서구</td>\n","      <td>603772.0</td>\n","      <td>597248.0</td>\n","      <td>6524.0</td>\n","      <td>72548.0</td>\n","      <td>1.080540</td>\n","      <td>12.015794</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>강남구</td>\n","      <td>570500.0</td>\n","      <td>565550.0</td>\n","      <td>4950.0</td>\n","      <td>63167.0</td>\n","      <td>0.867660</td>\n","      <td>11.072217</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>노원구</td>\n","      <td>569384.0</td>\n","      <td>565565.0</td>\n","      <td>3819.0</td>\n","      <td>71941.0</td>\n","      <td>0.670725</td>\n","      <td>12.634883</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>관악구</td>\n","      <td>525515.0</td>\n","      <td>507203.0</td>\n","      <td>18312.0</td>\n","      <td>68082.0</td>\n","      <td>3.484582</td>\n","      <td>12.955291</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fdadd60f-9c98-4103-8858-1a6aa6236ec0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fdadd60f-9c98-4103-8858-1a6aa6236ec0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fdadd60f-9c98-4103-8858-1a6aa6236ec0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-71be450c-4f68-47db-9dbc-e1c93060c2be\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71be450c-4f68-47db-9dbc-e1c93060c2be')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-71be450c-4f68-47db-9dbc-e1c93060c2be button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["pop_Seoul.sort_values('외국인' , ascending = False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"UvzHCMW2RZ8V","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":58,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"fec42ddb-34b0-4c97-e7cd-14f4c1d6db63"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      구별       인구수       한국인      외국인      고령자     외국인비율      고령자비율\n","19  영등포구  402985.0  368072.0  34913.0  52413.0  8.663598  13.006191\n","17   구로구  447874.0  416487.0  31387.0  56833.0  7.007998  12.689506\n","18   금천구  255082.0  236353.0  18729.0  32970.0  7.342345  12.925255\n","21   관악구  525515.0  507203.0  18312.0  68082.0  3.484582  12.955291\n","6   동대문구  369496.0  354079.0  15417.0  54173.0  4.172440  14.661322"],"text/html":["\n","  <div id=\"df-7a358185-23cf-4207-b2f0-d7a84cb7a749\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>19</th>\n","      <td>영등포구</td>\n","      <td>402985.0</td>\n","      <td>368072.0</td>\n","      <td>34913.0</td>\n","      <td>52413.0</td>\n","      <td>8.663598</td>\n","      <td>13.006191</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>구로구</td>\n","      <td>447874.0</td>\n","      <td>416487.0</td>\n","      <td>31387.0</td>\n","      <td>56833.0</td>\n","      <td>7.007998</td>\n","      <td>12.689506</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>금천구</td>\n","      <td>255082.0</td>\n","      <td>236353.0</td>\n","      <td>18729.0</td>\n","      <td>32970.0</td>\n","      <td>7.342345</td>\n","      <td>12.925255</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>관악구</td>\n","      <td>525515.0</td>\n","      <td>507203.0</td>\n","      <td>18312.0</td>\n","      <td>68082.0</td>\n","      <td>3.484582</td>\n","      <td>12.955291</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>동대문구</td>\n","      <td>369496.0</td>\n","      <td>354079.0</td>\n","      <td>15417.0</td>\n","      <td>54173.0</td>\n","      <td>4.172440</td>\n","      <td>14.661322</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a358185-23cf-4207-b2f0-d7a84cb7a749')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a358185-23cf-4207-b2f0-d7a84cb7a749 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a358185-23cf-4207-b2f0-d7a84cb7a749');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b1a2914e-5b74-439b-9aa2-65b0080df4fd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b1a2914e-5b74-439b-9aa2-65b0080df4fd')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b1a2914e-5b74-439b-9aa2-65b0080df4fd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["CCTV_Seoul.sort_values('소계' , ascending = False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"tY1QMt7rSEFs","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":56,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"aa21db63-6041-4261-a613-369922cde8bf"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     구별    소계  2013년도 이전  2014년  2015년  2016년       최근증가율\n","0   강남구  2780       1292    430    584    932  150.619195\n","18  양천구  2034       1843    142     30    467   34.671731\n","14  서초구  1930       1406    157    336    398   63.371266\n","21  은평구  1873       1138    224    278    468   85.237258\n","20  용산구  1624       1368    218    112    398   53.216374"],"text/html":["\n","  <div id=\"df-0ce349fc-3b8a-4250-a2a7-1195e10c5cb5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>소계</th>\n","      <th>2013년도 이전</th>\n","      <th>2014년</th>\n","      <th>2015년</th>\n","      <th>2016년</th>\n","      <th>최근증가율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>강남구</td>\n","      <td>2780</td>\n","      <td>1292</td>\n","      <td>430</td>\n","      <td>584</td>\n","      <td>932</td>\n","      <td>150.619195</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>양천구</td>\n","      <td>2034</td>\n","      <td>1843</td>\n","      <td>142</td>\n","      <td>30</td>\n","      <td>467</td>\n","      <td>34.671731</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>서초구</td>\n","      <td>1930</td>\n","      <td>1406</td>\n","      <td>157</td>\n","      <td>336</td>\n","      <td>398</td>\n","      <td>63.371266</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>은평구</td>\n","      <td>1873</td>\n","      <td>1138</td>\n","      <td>224</td>\n","      <td>278</td>\n","      <td>468</td>\n","      <td>85.237258</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>용산구</td>\n","      <td>1624</td>\n","      <td>1368</td>\n","      <td>218</td>\n","      <td>112</td>\n","      <td>398</td>\n","      <td>53.216374</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ce349fc-3b8a-4250-a2a7-1195e10c5cb5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0ce349fc-3b8a-4250-a2a7-1195e10c5cb5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0ce349fc-3b8a-4250-a2a7-1195e10c5cb5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f7ddfa68-a6e2-4869-9702-64b185b5e45a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f7ddfa68-a6e2-4869-9702-64b185b5e45a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f7ddfa68-a6e2-4869-9702-64b185b5e45a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["pop_Seoul.sort_values('외국인비율' , ascending = False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"1si93l9hSR1H","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":55,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"9490d8d5-727e-4ba9-bcff-cf13a09987c9"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      구별       인구수       한국인      외국인      고령자     외국인비율      고령자비율\n","19  영등포구  402985.0  368072.0  34913.0  52413.0  8.663598  13.006191\n","18   금천구  255082.0  236353.0  18729.0  32970.0  7.342345  12.925255\n","17   구로구  447874.0  416487.0  31387.0  56833.0  7.007998  12.689506\n","2     중구  133240.0  124312.0   8928.0  20764.0  6.700690  15.583909\n","3    용산구  244203.0  229456.0  14747.0  36231.0  6.038828  14.836427"],"text/html":["\n","  <div id=\"df-78cb40d8-280d-457c-8b51-32031205600f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>19</th>\n","      <td>영등포구</td>\n","      <td>402985.0</td>\n","      <td>368072.0</td>\n","      <td>34913.0</td>\n","      <td>52413.0</td>\n","      <td>8.663598</td>\n","      <td>13.006191</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>금천구</td>\n","      <td>255082.0</td>\n","      <td>236353.0</td>\n","      <td>18729.0</td>\n","      <td>32970.0</td>\n","      <td>7.342345</td>\n","      <td>12.925255</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>구로구</td>\n","      <td>447874.0</td>\n","      <td>416487.0</td>\n","      <td>31387.0</td>\n","      <td>56833.0</td>\n","      <td>7.007998</td>\n","      <td>12.689506</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>중구</td>\n","      <td>133240.0</td>\n","      <td>124312.0</td>\n","      <td>8928.0</td>\n","      <td>20764.0</td>\n","      <td>6.700690</td>\n","      <td>15.583909</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>용산구</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","      <td>6.038828</td>\n","      <td>14.836427</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78cb40d8-280d-457c-8b51-32031205600f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-78cb40d8-280d-457c-8b51-32031205600f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-78cb40d8-280d-457c-8b51-32031205600f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1364e19c-dd3a-4f8d-83a0-00371c5cb9e6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1364e19c-dd3a-4f8d-83a0-00371c5cb9e6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1364e19c-dd3a-4f8d-83a0-00371c5cb9e6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["pop_Seoul.sort_values('고령자' , ascending = False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"YYlYUlROSURz","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":53,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"36d36963-6cf1-475d-d04c-bd48ef4c5847"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     구별       인구수       한국인      외국인      고령자     외국인비율      고령자비율\n","16  강서구  603772.0  597248.0   6524.0  72548.0  1.080540  12.015794\n","24  송파구  667483.0  660584.0   6899.0  72506.0  1.033584  10.862599\n","12  은평구  494388.0  489943.0   4445.0  72334.0  0.899091  14.631019\n","11  노원구  569384.0  565565.0   3819.0  71941.0  0.670725  12.634883\n","21  관악구  525515.0  507203.0  18312.0  68082.0  3.484582  12.955291"],"text/html":["\n","  <div id=\"df-121ae4ef-cb82-42e2-9e46-58a10701ba14\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>16</th>\n","      <td>강서구</td>\n","      <td>603772.0</td>\n","      <td>597248.0</td>\n","      <td>6524.0</td>\n","      <td>72548.0</td>\n","      <td>1.080540</td>\n","      <td>12.015794</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>송파구</td>\n","      <td>667483.0</td>\n","      <td>660584.0</td>\n","      <td>6899.0</td>\n","      <td>72506.0</td>\n","      <td>1.033584</td>\n","      <td>10.862599</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>은평구</td>\n","      <td>494388.0</td>\n","      <td>489943.0</td>\n","      <td>4445.0</td>\n","      <td>72334.0</td>\n","      <td>0.899091</td>\n","      <td>14.631019</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>노원구</td>\n","      <td>569384.0</td>\n","      <td>565565.0</td>\n","      <td>3819.0</td>\n","      <td>71941.0</td>\n","      <td>0.670725</td>\n","      <td>12.634883</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>관악구</td>\n","      <td>525515.0</td>\n","      <td>507203.0</td>\n","      <td>18312.0</td>\n","      <td>68082.0</td>\n","      <td>3.484582</td>\n","      <td>12.955291</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-121ae4ef-cb82-42e2-9e46-58a10701ba14')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-121ae4ef-cb82-42e2-9e46-58a10701ba14 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-121ae4ef-cb82-42e2-9e46-58a10701ba14');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1f549b2c-2f83-40f5-afbd-d80faee57540\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1f549b2c-2f83-40f5-afbd-d80faee57540')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1f549b2c-2f83-40f5-afbd-d80faee57540 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["pop_Seoul.sort_values('고령자비율' , ascending = False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"VAT8SS4nSpns","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":52,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"646f73d1-5783-46c0-ad20-889d4002e880"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      구별       인구수       한국인      외국인      고령자     외국인비율      고령자비율\n","9    강북구  330192.0  326686.0   3506.0  54813.0  1.061806  16.600342\n","1    종로구  162820.0  153589.0   9231.0  25425.0  5.669451  15.615404\n","2     중구  133240.0  124312.0   8928.0  20764.0  6.700690  15.583909\n","3    용산구  244203.0  229456.0  14747.0  36231.0  6.038828  14.836427\n","13  서대문구  327163.0  314982.0  12181.0  48161.0  3.723221  14.720797"],"text/html":["\n","  <div id=\"df-0817ac42-b3d3-4276-8577-b6db2ec37a0e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9</th>\n","      <td>강북구</td>\n","      <td>330192.0</td>\n","      <td>326686.0</td>\n","      <td>3506.0</td>\n","      <td>54813.0</td>\n","      <td>1.061806</td>\n","      <td>16.600342</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>종로구</td>\n","      <td>162820.0</td>\n","      <td>153589.0</td>\n","      <td>9231.0</td>\n","      <td>25425.0</td>\n","      <td>5.669451</td>\n","      <td>15.615404</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>중구</td>\n","      <td>133240.0</td>\n","      <td>124312.0</td>\n","      <td>8928.0</td>\n","      <td>20764.0</td>\n","      <td>6.700690</td>\n","      <td>15.583909</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>용산구</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","      <td>6.038828</td>\n","      <td>14.836427</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>서대문구</td>\n","      <td>327163.0</td>\n","      <td>314982.0</td>\n","      <td>12181.0</td>\n","      <td>48161.0</td>\n","      <td>3.723221</td>\n","      <td>14.720797</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0817ac42-b3d3-4276-8577-b6db2ec37a0e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0817ac42-b3d3-4276-8577-b6db2ec37a0e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0817ac42-b3d3-4276-8577-b6db2ec37a0e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d5afae6b-e911-436d-abe4-f715bcaf55a5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5afae6b-e911-436d-abe4-f715bcaf55a5')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d5afae6b-e911-436d-abe4-f715bcaf55a5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["df1 = pd.DataFrame({'A' : ['A0','A1','A2','A3'] , 'B' : ['B0','B1','B2','B3'] , 'C' : ['C0','C1','C2','C3'] , 'D' : ['D0','D1','D2','D3']} , index = [0,1,2,3])\n","df2 = pd.DataFrame({'A' : ['A4','A5','A6','A7'] , 'B' : ['B4','B5','B6','B7'] , 'C' : ['C4','C5','C6','C7'] , 'D' : ['D4','D5','D6','D7']} , index = [4,5,6,7])\n","df3 = pd.DataFrame({'A' : ['A8','A9','A10','A11'] , 'B' : ['B8','B9','B10','B11'] , 'C' : ['C8','C9','C10','C11'] , 'D' : ['D8','D9','D10','D11']} , index = [8,9,10,11])"],"metadata":{"id":"EfetlyxVTMSh","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":51,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["df1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"OPceFfoFUHYJ","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":51,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"2ef293b3-180c-4126-edaf-9748c56ed732"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    A   B   C   D\n","0  A0  B0  C0  D0\n","1  A1  B1  C1  D1\n","2  A2  B2  C2  D2\n","3  A3  B3  C3  D3"],"text/html":["\n","  <div id=\"df-0c608399-4e0e-4022-8dac-5522dce0e71c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A0</td>\n","      <td>B0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A1</td>\n","      <td>B1</td>\n","      <td>C1</td>\n","      <td>D1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c608399-4e0e-4022-8dac-5522dce0e71c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c608399-4e0e-4022-8dac-5522dce0e71c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c608399-4e0e-4022-8dac-5522dce0e71c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d7e5cbe7-07a8-4bb2-8ebb-51690e559ad0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d7e5cbe7-07a8-4bb2-8ebb-51690e559ad0')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d7e5cbe7-07a8-4bb2-8ebb-51690e559ad0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"6zGIup61WRb9","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":51,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"d613c019-c246-4ee3-b868-74ab797eb3d8"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    A   B   C   D\n","4  A4  B4  C4  D4\n","5  A5  B5  C5  D5\n","6  A6  B6  C6  D6\n","7  A7  B7  C7  D7"],"text/html":["\n","  <div id=\"df-1098b494-22b5-4b96-81c3-2c15c4c95a24\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>A4</td>\n","      <td>B4</td>\n","      <td>C4</td>\n","      <td>D4</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>A5</td>\n","      <td>B5</td>\n","      <td>C5</td>\n","      <td>D5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>A6</td>\n","      <td>B6</td>\n","      <td>C6</td>\n","      <td>D6</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>A7</td>\n","      <td>B7</td>\n","      <td>C7</td>\n","      <td>D7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1098b494-22b5-4b96-81c3-2c15c4c95a24')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1098b494-22b5-4b96-81c3-2c15c4c95a24 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1098b494-22b5-4b96-81c3-2c15c4c95a24');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-90a7fdc5-a563-4535-bff2-a788c1479df9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-90a7fdc5-a563-4535-bff2-a788c1479df9')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-90a7fdc5-a563-4535-bff2-a788c1479df9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"ECn--uGRWRnw","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":50,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"c94719ca-ca79-4ae1-b983-e24f067d9e13"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      A    B    C    D\n","8    A8   B8   C8   D8\n","9    A9   B9   C9   D9\n","10  A10  B10  C10  D10\n","11  A11  B11  C11  D11"],"text/html":["\n","  <div id=\"df-6242e548-6579-4608-beb6-173d95014c93\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>A8</td>\n","      <td>B8</td>\n","      <td>C8</td>\n","      <td>D8</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>A9</td>\n","      <td>B9</td>\n","      <td>C9</td>\n","      <td>D9</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>A10</td>\n","      <td>B10</td>\n","      <td>C10</td>\n","      <td>D10</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>A11</td>\n","      <td>B11</td>\n","      <td>C11</td>\n","      <td>D11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6242e548-6579-4608-beb6-173d95014c93')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6242e548-6579-4608-beb6-173d95014c93 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6242e548-6579-4608-beb6-173d95014c93');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5e5f94d8-8770-4af1-8032-10f041fbe5e3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e5f94d8-8770-4af1-8032-10f041fbe5e3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5e5f94d8-8770-4af1-8032-10f041fbe5e3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["#concat , join\n","result = pd.concat([df1 , df2 , df3])\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"5sOJ6qThWRzb","executionInfo":{"status":"ok","timestamp":1696982637531,"user_tz":-540,"elapsed":50,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"b3574076-0263-4489-e125-2c0a2ed74e55"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      A    B    C    D\n","0    A0   B0   C0   D0\n","1    A1   B1   C1   D1\n","2    A2   B2   C2   D2\n","3    A3   B3   C3   D3\n","4    A4   B4   C4   D4\n","5    A5   B5   C5   D5\n","6    A6   B6   C6   D6\n","7    A7   B7   C7   D7\n","8    A8   B8   C8   D8\n","9    A9   B9   C9   D9\n","10  A10  B10  C10  D10\n","11  A11  B11  C11  D11"],"text/html":["\n","  <div id=\"df-698cfac7-5e31-483f-9307-130fa23684c5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A0</td>\n","      <td>B0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A1</td>\n","      <td>B1</td>\n","      <td>C1</td>\n","      <td>D1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A4</td>\n","      <td>B4</td>\n","      <td>C4</td>\n","      <td>D4</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>A5</td>\n","      <td>B5</td>\n","      <td>C5</td>\n","      <td>D5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>A6</td>\n","      <td>B6</td>\n","      <td>C6</td>\n","      <td>D6</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>A7</td>\n","      <td>B7</td>\n","      <td>C7</td>\n","      <td>D7</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>A8</td>\n","      <td>B8</td>\n","      <td>C8</td>\n","      <td>D8</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>A9</td>\n","      <td>B9</td>\n","      <td>C9</td>\n","      <td>D9</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>A10</td>\n","      <td>B10</td>\n","      <td>C10</td>\n","      <td>D10</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>A11</td>\n","      <td>B11</td>\n","      <td>C11</td>\n","      <td>D11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-698cfac7-5e31-483f-9307-130fa23684c5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-698cfac7-5e31-483f-9307-130fa23684c5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-698cfac7-5e31-483f-9307-130fa23684c5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fefbe42f-acd8-4b19-92cf-4ea267341996\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fefbe42f-acd8-4b19-92cf-4ea267341996')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fefbe42f-acd8-4b19-92cf-4ea267341996 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["result = pd.concat([df1 , df2 , df3] , keys = ['x','y','z'])\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"qxsLiUQMWew-","executionInfo":{"status":"ok","timestamp":1696982637532,"user_tz":-540,"elapsed":50,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"4dd004df-2dc3-4b3d-8205-136e16efb8a7"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        A    B    C    D\n","x 0    A0   B0   C0   D0\n","  1    A1   B1   C1   D1\n","  2    A2   B2   C2   D2\n","  3    A3   B3   C3   D3\n","y 4    A4   B4   C4   D4\n","  5    A5   B5   C5   D5\n","  6    A6   B6   C6   D6\n","  7    A7   B7   C7   D7\n","z 8    A8   B8   C8   D8\n","  9    A9   B9   C9   D9\n","  10  A10  B10  C10  D10\n","  11  A11  B11  C11  D11"],"text/html":["\n","  <div id=\"df-3ed3d25d-77e9-4eef-92d4-b24bfbebbeee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">x</th>\n","      <th>0</th>\n","      <td>A0</td>\n","      <td>B0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A1</td>\n","      <td>B1</td>\n","      <td>C1</td>\n","      <td>D1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">y</th>\n","      <th>4</th>\n","      <td>A4</td>\n","      <td>B4</td>\n","      <td>C4</td>\n","      <td>D4</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>A5</td>\n","      <td>B5</td>\n","      <td>C5</td>\n","      <td>D5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>A6</td>\n","      <td>B6</td>\n","      <td>C6</td>\n","      <td>D6</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>A7</td>\n","      <td>B7</td>\n","      <td>C7</td>\n","      <td>D7</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">z</th>\n","      <th>8</th>\n","      <td>A8</td>\n","      <td>B8</td>\n","      <td>C8</td>\n","      <td>D8</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>A9</td>\n","      <td>B9</td>\n","      <td>C9</td>\n","      <td>D9</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>A10</td>\n","      <td>B10</td>\n","      <td>C10</td>\n","      <td>D10</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>A11</td>\n","      <td>B11</td>\n","      <td>C11</td>\n","      <td>D11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ed3d25d-77e9-4eef-92d4-b24bfbebbeee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3ed3d25d-77e9-4eef-92d4-b24bfbebbeee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3ed3d25d-77e9-4eef-92d4-b24bfbebbeee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf09b8bb-4281-4f58-8425-2cada87162a2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf09b8bb-4281-4f58-8425-2cada87162a2')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf09b8bb-4281-4f58-8425-2cada87162a2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["result.index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HkZHVcKxW3h4","executionInfo":{"status":"ok","timestamp":1696982637532,"user_tz":-540,"elapsed":50,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"fbc33cc7-cb1f-4d2d-925f-edcb8043723e"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MultiIndex([('x',  0),\n","            ('x',  1),\n","            ('x',  2),\n","            ('x',  3),\n","            ('y',  4),\n","            ('y',  5),\n","            ('y',  6),\n","            ('y',  7),\n","            ('z',  8),\n","            ('z',  9),\n","            ('z', 10),\n","            ('z', 11)],\n","           )"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["result.index.get_level_values(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rKt1s8C7XFaS","executionInfo":{"status":"ok","timestamp":1696982637532,"user_tz":-540,"elapsed":44,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"6785beaa-cadc-4619-c17c-e9f0fdb448b1"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Int64Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], dtype='int64')"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["df4 = pd.DataFrame({'B' : ['B2','B3','B6','B7'] , 'D' : ['D2','D3','D6','D7'] , 'F' : ['F2','F3','F6','F7']} , index = [2,3,6,7])\n","df4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"YL3S91ypXUI2","executionInfo":{"status":"ok","timestamp":1696982637532,"user_tz":-540,"elapsed":42,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"6f680f5f-403e-4b1b-f262-2855b19c9340"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    B   D   F\n","2  B2  D2  F2\n","3  B3  D3  F3\n","6  B6  D6  F6\n","7  B7  D7  F7"],"text/html":["\n","  <div id=\"df-80901659-872a-4b6e-ac2b-1e3a6194969a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>B</th>\n","      <th>D</th>\n","      <th>F</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>B2</td>\n","      <td>D2</td>\n","      <td>F2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>B3</td>\n","      <td>D3</td>\n","      <td>F3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>B6</td>\n","      <td>D6</td>\n","      <td>F6</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>B7</td>\n","      <td>D7</td>\n","      <td>F7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80901659-872a-4b6e-ac2b-1e3a6194969a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-80901659-872a-4b6e-ac2b-1e3a6194969a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-80901659-872a-4b6e-ac2b-1e3a6194969a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-955ac1d8-44f4-458a-9e9e-17705c7f3d5b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-955ac1d8-44f4-458a-9e9e-17705c7f3d5b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-955ac1d8-44f4-458a-9e9e-17705c7f3d5b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["result = pd.concat([df1 , df4] , axis = 1 , join = 'inner')\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"HeEzP5Z_Xz7h","executionInfo":{"status":"ok","timestamp":1696982637532,"user_tz":-540,"elapsed":30,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"3ab184cf-8c4d-47dc-940c-236bbd898f7a"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    A   B   C   D   B   D   F\n","2  A2  B2  C2  D2  B2  D2  F2\n","3  A3  B3  C3  D3  B3  D3  F3"],"text/html":["\n","  <div id=\"df-73a2480a-7a15-41a2-8201-60f0ea89be44\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>B</th>\n","      <th>D</th>\n","      <th>F</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","      <td>B2</td>\n","      <td>D2</td>\n","      <td>F2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","      <td>B3</td>\n","      <td>D3</td>\n","      <td>F3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73a2480a-7a15-41a2-8201-60f0ea89be44')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-73a2480a-7a15-41a2-8201-60f0ea89be44 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-73a2480a-7a15-41a2-8201-60f0ea89be44');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab8910f3-b682-4cb7-86b0-836ae4850b7e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab8910f3-b682-4cb7-86b0-836ae4850b7e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab8910f3-b682-4cb7-86b0-836ae4850b7e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["result = pd.concat([df1 , df4] , axis = 1).reindex(df1.index)\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"_bOMcg_MYF4A","executionInfo":{"status":"ok","timestamp":1696982637532,"user_tz":-540,"elapsed":29,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"ba5fe22d-e7f4-4193-e7b1-e727202e9bc9"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    A   B   C   D    B    D    F\n","0  A0  B0  C0  D0  NaN  NaN  NaN\n","1  A1  B1  C1  D1  NaN  NaN  NaN\n","2  A2  B2  C2  D2   B2   D2   F2\n","3  A3  B3  C3  D3   B3   D3   F3"],"text/html":["\n","  <div id=\"df-d582b22a-8ab0-4811-8011-5e498eb3cc99\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>B</th>\n","      <th>D</th>\n","      <th>F</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A0</td>\n","      <td>B0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A1</td>\n","      <td>B1</td>\n","      <td>C1</td>\n","      <td>D1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","      <td>B2</td>\n","      <td>D2</td>\n","      <td>F2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","      <td>B3</td>\n","      <td>D3</td>\n","      <td>F3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d582b22a-8ab0-4811-8011-5e498eb3cc99')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d582b22a-8ab0-4811-8011-5e498eb3cc99 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d582b22a-8ab0-4811-8011-5e498eb3cc99');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-74966bbf-2255-4d87-b53a-14115911c36e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-74966bbf-2255-4d87-b53a-14115911c36e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-74966bbf-2255-4d87-b53a-14115911c36e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["#merge"],"metadata":{"id":"RJVKolWbafOZ","executionInfo":{"status":"ok","timestamp":1696982637532,"user_tz":-540,"elapsed":28,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["result = pd.concat([df1 , df4] , ignore_index = True , axis = 1)\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"b3eGO1h-ZAx3","executionInfo":{"status":"ok","timestamp":1696982637922,"user_tz":-540,"elapsed":417,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"8b824f30-ff62-4384-bf3a-d534142bddae"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     0    1    2    3    4    5    6\n","0   A0   B0   C0   D0  NaN  NaN  NaN\n","1   A1   B1   C1   D1  NaN  NaN  NaN\n","2   A2   B2   C2   D2   B2   D2   F2\n","3   A3   B3   C3   D3   B3   D3   F3\n","6  NaN  NaN  NaN  NaN   B6   D6   F6\n","7  NaN  NaN  NaN  NaN   B7   D7   F7"],"text/html":["\n","  <div id=\"df-f9b889cd-cf80-4a6d-9d92-07b77a036d94\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A0</td>\n","      <td>B0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A1</td>\n","      <td>B1</td>\n","      <td>C1</td>\n","      <td>D1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","      <td>B2</td>\n","      <td>D2</td>\n","      <td>F2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","      <td>B3</td>\n","      <td>D3</td>\n","      <td>F3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>B6</td>\n","      <td>D6</td>\n","      <td>F6</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>B7</td>\n","      <td>D7</td>\n","      <td>F7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9b889cd-cf80-4a6d-9d92-07b77a036d94')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f9b889cd-cf80-4a6d-9d92-07b77a036d94 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f9b889cd-cf80-4a6d-9d92-07b77a036d94');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d527b0f1-0e67-4e25-b65c-4005cfb929f3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d527b0f1-0e67-4e25-b65c-4005cfb929f3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d527b0f1-0e67-4e25-b65c-4005cfb929f3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["left = pd.DataFrame({'key' : ['K0','K4','K2','K3'] , 'A' : ['A0','A1','A2','A3'] , 'B' : ['B0','B1','B2','B3']})\n","right = pd.DataFrame({'key' : ['K0','K1','K2','K3'] , 'C' : ['C0','C1','C2','C3'] , 'D' : ['D0','D1','D2','D3']})"],"metadata":{"id":"dDaZbtNjZsK1","executionInfo":{"status":"ok","timestamp":1696982637923,"user_tz":-540,"elapsed":56,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["left"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"I80UrorpaUH1","executionInfo":{"status":"ok","timestamp":1696982637924,"user_tz":-540,"elapsed":56,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"2b029f80-e5b9-41d2-8f28-de1c7a5633bd"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  key   A   B\n","0  K0  A0  B0\n","1  K4  A1  B1\n","2  K2  A2  B2\n","3  K3  A3  B3"],"text/html":["\n","  <div id=\"df-5413343c-a72e-4793-8a21-e4a7b5e3041f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key</th>\n","      <th>A</th>\n","      <th>B</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>K0</td>\n","      <td>A0</td>\n","      <td>B0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>K4</td>\n","      <td>A1</td>\n","      <td>B1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>K2</td>\n","      <td>A2</td>\n","      <td>B2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>K3</td>\n","      <td>A3</td>\n","      <td>B3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5413343c-a72e-4793-8a21-e4a7b5e3041f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5413343c-a72e-4793-8a21-e4a7b5e3041f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5413343c-a72e-4793-8a21-e4a7b5e3041f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fdfd1d28-5a8e-4b34-b2ac-b6293a8e1d62\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdfd1d28-5a8e-4b34-b2ac-b6293a8e1d62')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fdfd1d28-5a8e-4b34-b2ac-b6293a8e1d62 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["right"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"oyZC3v47aeHN","executionInfo":{"status":"ok","timestamp":1696982637925,"user_tz":-540,"elapsed":56,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"2f379bc4-32df-4253-9375-3ea6762b4a9a"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  key   C   D\n","0  K0  C0  D0\n","1  K1  C1  D1\n","2  K2  C2  D2\n","3  K3  C3  D3"],"text/html":["\n","  <div id=\"df-65debecb-d041-42dc-9e62-39df348506a8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>K0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>K1</td>\n","      <td>C1</td>\n","      <td>D1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>K2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>K3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-65debecb-d041-42dc-9e62-39df348506a8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-65debecb-d041-42dc-9e62-39df348506a8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-65debecb-d041-42dc-9e62-39df348506a8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9451e203-4fa1-4ec6-8e32-9134c713c7c4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9451e203-4fa1-4ec6-8e32-9134c713c7c4')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9451e203-4fa1-4ec6-8e32-9134c713c7c4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["pd.merge(left , right , on = 'key')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"0F4mSjYZaeV_","executionInfo":{"status":"ok","timestamp":1696982637925,"user_tz":-540,"elapsed":55,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"abcc5604-0f00-4389-fce6-c405331c1624"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  key   A   B   C   D\n","0  K0  A0  B0  C0  D0\n","1  K2  A2  B2  C2  D2\n","2  K3  A3  B3  C3  D3"],"text/html":["\n","  <div id=\"df-2e392440-a1c6-43b7-bd36-a242dd94e488\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>K0</td>\n","      <td>A0</td>\n","      <td>B0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>K2</td>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>K3</td>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e392440-a1c6-43b7-bd36-a242dd94e488')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2e392440-a1c6-43b7-bd36-a242dd94e488 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2e392440-a1c6-43b7-bd36-a242dd94e488');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7ba41a35-0b01-4838-a436-5ee1539a0d04\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ba41a35-0b01-4838-a436-5ee1539a0d04')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7ba41a35-0b01-4838-a436-5ee1539a0d04 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["pd.merge(left , right , on = 'key' , how = 'left')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"bDPVhP0narUT","executionInfo":{"status":"ok","timestamp":1696982637925,"user_tz":-540,"elapsed":55,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"703ed5bf-79ff-43f9-fafa-f6743d0c2d6d"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  key   A   B    C    D\n","0  K0  A0  B0   C0   D0\n","1  K4  A1  B1  NaN  NaN\n","2  K2  A2  B2   C2   D2\n","3  K3  A3  B3   C3   D3"],"text/html":["\n","  <div id=\"df-7a4c8f04-4a6c-4707-b1cb-de2aae7e13f8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>K0</td>\n","      <td>A0</td>\n","      <td>B0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>K4</td>\n","      <td>A1</td>\n","      <td>B1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>K2</td>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>K3</td>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a4c8f04-4a6c-4707-b1cb-de2aae7e13f8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7a4c8f04-4a6c-4707-b1cb-de2aae7e13f8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7a4c8f04-4a6c-4707-b1cb-de2aae7e13f8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-40b02361-1704-401c-8a54-97d779f58c4f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-40b02361-1704-401c-8a54-97d779f58c4f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-40b02361-1704-401c-8a54-97d779f58c4f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["pd.merge(left , right , on = 'key' , how = 'right')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"Bc-EsudMa9_b","executionInfo":{"status":"ok","timestamp":1696982637925,"user_tz":-540,"elapsed":54,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"a18a0f2d-d731-4502-fd68-b3345ef75535"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  key    A    B   C   D\n","0  K0   A0   B0  C0  D0\n","1  K1  NaN  NaN  C1  D1\n","2  K2   A2   B2  C2  D2\n","3  K3   A3   B3  C3  D3"],"text/html":["\n","  <div id=\"df-ca7fa94f-8cec-4cb4-8d61-a6ce4c499956\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>K0</td>\n","      <td>A0</td>\n","      <td>B0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>K1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>C1</td>\n","      <td>D1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>K2</td>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>K3</td>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca7fa94f-8cec-4cb4-8d61-a6ce4c499956')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ca7fa94f-8cec-4cb4-8d61-a6ce4c499956 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ca7fa94f-8cec-4cb4-8d61-a6ce4c499956');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4c0ce711-8ab5-4c6c-b06b-0f131bafda0b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4c0ce711-8ab5-4c6c-b06b-0f131bafda0b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4c0ce711-8ab5-4c6c-b06b-0f131bafda0b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["pd.merge(left , right , on = 'key' , how = 'outer')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"0KDvxP_TbXV4","executionInfo":{"status":"ok","timestamp":1696982637925,"user_tz":-540,"elapsed":54,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"37d739a6-fba5-495e-b6cf-81f66a551e4b"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  key    A    B    C    D\n","0  K0   A0   B0   C0   D0\n","1  K4   A1   B1  NaN  NaN\n","2  K2   A2   B2   C2   D2\n","3  K3   A3   B3   C3   D3\n","4  K1  NaN  NaN   C1   D1"],"text/html":["\n","  <div id=\"df-a47a6fd5-201d-4e8f-bb22-c53ad3b44845\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>K0</td>\n","      <td>A0</td>\n","      <td>B0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>K4</td>\n","      <td>A1</td>\n","      <td>B1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>K2</td>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>K3</td>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>K1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>C1</td>\n","      <td>D1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a47a6fd5-201d-4e8f-bb22-c53ad3b44845')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a47a6fd5-201d-4e8f-bb22-c53ad3b44845 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a47a6fd5-201d-4e8f-bb22-c53ad3b44845');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d4cbc684-efff-494f-abd6-d44aa49106da\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d4cbc684-efff-494f-abd6-d44aa49106da')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d4cbc684-efff-494f-abd6-d44aa49106da button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["pd.merge(left , right , on = 'key' , how = 'inner')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"PGO3ASLkbaHO","executionInfo":{"status":"ok","timestamp":1696982637925,"user_tz":-540,"elapsed":53,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"dd6e1d03-2c4b-48ad-cb85-899473ecb9ec"},"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  key   A   B   C   D\n","0  K0  A0  B0  C0  D0\n","1  K2  A2  B2  C2  D2\n","2  K3  A3  B3  C3  D3"],"text/html":["\n","  <div id=\"df-394d96f3-8721-4348-8d78-7ba0c093280a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>K0</td>\n","      <td>A0</td>\n","      <td>B0</td>\n","      <td>C0</td>\n","      <td>D0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>K2</td>\n","      <td>A2</td>\n","      <td>B2</td>\n","      <td>C2</td>\n","      <td>D2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>K3</td>\n","      <td>A3</td>\n","      <td>B3</td>\n","      <td>C3</td>\n","      <td>D3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-394d96f3-8721-4348-8d78-7ba0c093280a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-394d96f3-8721-4348-8d78-7ba0c093280a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-394d96f3-8721-4348-8d78-7ba0c093280a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6165d1c5-7cd5-400a-aa40-5dd9a4192c91\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6165d1c5-7cd5-400a-aa40-5dd9a4192c91')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6165d1c5-7cd5-400a-aa40-5dd9a4192c91 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["CCTV_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"KOU5q7ZQbxjM","executionInfo":{"status":"ok","timestamp":1696982637925,"user_tz":-540,"elapsed":53,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"637bcbf5-c790-47d3-8160-df3219e059da"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별    소계  2013년도 이전  2014년  2015년  2016년       최근증가율\n","0  강남구  2780       1292    430    584    932  150.619195\n","1  강동구   773        379     99    155    377  166.490765\n","2  강북구   748        369    120    138    204  125.203252\n","3  강서구   884        388    258    184     81  134.793814\n","4  관악구  1496        846    260    390    613  149.290780"],"text/html":["\n","  <div id=\"df-5a1806c5-5efe-45cc-ab80-6d1693e17b64\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>소계</th>\n","      <th>2013년도 이전</th>\n","      <th>2014년</th>\n","      <th>2015년</th>\n","      <th>2016년</th>\n","      <th>최근증가율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>강남구</td>\n","      <td>2780</td>\n","      <td>1292</td>\n","      <td>430</td>\n","      <td>584</td>\n","      <td>932</td>\n","      <td>150.619195</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>강동구</td>\n","      <td>773</td>\n","      <td>379</td>\n","      <td>99</td>\n","      <td>155</td>\n","      <td>377</td>\n","      <td>166.490765</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강북구</td>\n","      <td>748</td>\n","      <td>369</td>\n","      <td>120</td>\n","      <td>138</td>\n","      <td>204</td>\n","      <td>125.203252</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>강서구</td>\n","      <td>884</td>\n","      <td>388</td>\n","      <td>258</td>\n","      <td>184</td>\n","      <td>81</td>\n","      <td>134.793814</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>관악구</td>\n","      <td>1496</td>\n","      <td>846</td>\n","      <td>260</td>\n","      <td>390</td>\n","      <td>613</td>\n","      <td>149.290780</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a1806c5-5efe-45cc-ab80-6d1693e17b64')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5a1806c5-5efe-45cc-ab80-6d1693e17b64 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5a1806c5-5efe-45cc-ab80-6d1693e17b64');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-087b53bc-fdf3-41b8-af79-bdac7b0f1719\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-087b53bc-fdf3-41b8-af79-bdac7b0f1719')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-087b53bc-fdf3-41b8-af79-bdac7b0f1719 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["pop_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"3mcWATZ0cGFM","executionInfo":{"status":"ok","timestamp":1696982637925,"user_tz":-540,"elapsed":50,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"65f376a5-c141-4c27-ca72-d0381c055b3e"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별       인구수       한국인      외국인      고령자     외국인비율      고령자비율\n","1  종로구  162820.0  153589.0   9231.0  25425.0  5.669451  15.615404\n","2   중구  133240.0  124312.0   8928.0  20764.0  6.700690  15.583909\n","3  용산구  244203.0  229456.0  14747.0  36231.0  6.038828  14.836427\n","4  성동구  311244.0  303380.0   7864.0  39997.0  2.526635  12.850689\n","5  광진구  372164.0  357211.0  14953.0  42214.0  4.017852  11.342849"],"text/html":["\n","  <div id=\"df-3744f1d1-8ed0-436a-8bf7-4e3235ab21bf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>종로구</td>\n","      <td>162820.0</td>\n","      <td>153589.0</td>\n","      <td>9231.0</td>\n","      <td>25425.0</td>\n","      <td>5.669451</td>\n","      <td>15.615404</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>중구</td>\n","      <td>133240.0</td>\n","      <td>124312.0</td>\n","      <td>8928.0</td>\n","      <td>20764.0</td>\n","      <td>6.700690</td>\n","      <td>15.583909</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>용산구</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","      <td>6.038828</td>\n","      <td>14.836427</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>성동구</td>\n","      <td>311244.0</td>\n","      <td>303380.0</td>\n","      <td>7864.0</td>\n","      <td>39997.0</td>\n","      <td>2.526635</td>\n","      <td>12.850689</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>광진구</td>\n","      <td>372164.0</td>\n","      <td>357211.0</td>\n","      <td>14953.0</td>\n","      <td>42214.0</td>\n","      <td>4.017852</td>\n","      <td>11.342849</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3744f1d1-8ed0-436a-8bf7-4e3235ab21bf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3744f1d1-8ed0-436a-8bf7-4e3235ab21bf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3744f1d1-8ed0-436a-8bf7-4e3235ab21bf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-179e86a8-a3f1-459d-ace3-f7f3f04f5a79\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-179e86a8-a3f1-459d-ace3-f7f3f04f5a79')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-179e86a8-a3f1-459d-ace3-f7f3f04f5a79 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["data_result = pd.merge(CCTV_Seoul , pop_Seoul , on = '구별')\n","data_result.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"RueQbZy6cG6P","executionInfo":{"status":"ok","timestamp":1696982637925,"user_tz":-540,"elapsed":37,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"1a0a590a-b2d5-473d-bc78-e812f28e63e9"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별    소계  2013년도 이전  2014년  2015년  2016년       최근증가율       인구수       한국인  \\\n","0  강남구  2780       1292    430    584    932  150.619195  570500.0  565550.0   \n","1  강동구   773        379     99    155    377  166.490765  453233.0  449019.0   \n","2  강북구   748        369    120    138    204  125.203252  330192.0  326686.0   \n","3  강서구   884        388    258    184     81  134.793814  603772.0  597248.0   \n","4  관악구  1496        846    260    390    613  149.290780  525515.0  507203.0   \n","\n","       외국인      고령자     외국인비율      고령자비율  \n","0   4950.0  63167.0  0.867660  11.072217  \n","1   4214.0  54622.0  0.929765  12.051638  \n","2   3506.0  54813.0  1.061806  16.600342  \n","3   6524.0  72548.0  1.080540  12.015794  \n","4  18312.0  68082.0  3.484582  12.955291  "],"text/html":["\n","  <div id=\"df-fe471099-8121-4b52-9749-0ee363ada434\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>소계</th>\n","      <th>2013년도 이전</th>\n","      <th>2014년</th>\n","      <th>2015년</th>\n","      <th>2016년</th>\n","      <th>최근증가율</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>강남구</td>\n","      <td>2780</td>\n","      <td>1292</td>\n","      <td>430</td>\n","      <td>584</td>\n","      <td>932</td>\n","      <td>150.619195</td>\n","      <td>570500.0</td>\n","      <td>565550.0</td>\n","      <td>4950.0</td>\n","      <td>63167.0</td>\n","      <td>0.867660</td>\n","      <td>11.072217</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>강동구</td>\n","      <td>773</td>\n","      <td>379</td>\n","      <td>99</td>\n","      <td>155</td>\n","      <td>377</td>\n","      <td>166.490765</td>\n","      <td>453233.0</td>\n","      <td>449019.0</td>\n","      <td>4214.0</td>\n","      <td>54622.0</td>\n","      <td>0.929765</td>\n","      <td>12.051638</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강북구</td>\n","      <td>748</td>\n","      <td>369</td>\n","      <td>120</td>\n","      <td>138</td>\n","      <td>204</td>\n","      <td>125.203252</td>\n","      <td>330192.0</td>\n","      <td>326686.0</td>\n","      <td>3506.0</td>\n","      <td>54813.0</td>\n","      <td>1.061806</td>\n","      <td>16.600342</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>강서구</td>\n","      <td>884</td>\n","      <td>388</td>\n","      <td>258</td>\n","      <td>184</td>\n","      <td>81</td>\n","      <td>134.793814</td>\n","      <td>603772.0</td>\n","      <td>597248.0</td>\n","      <td>6524.0</td>\n","      <td>72548.0</td>\n","      <td>1.080540</td>\n","      <td>12.015794</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>관악구</td>\n","      <td>1496</td>\n","      <td>846</td>\n","      <td>260</td>\n","      <td>390</td>\n","      <td>613</td>\n","      <td>149.290780</td>\n","      <td>525515.0</td>\n","      <td>507203.0</td>\n","      <td>18312.0</td>\n","      <td>68082.0</td>\n","      <td>3.484582</td>\n","      <td>12.955291</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe471099-8121-4b52-9749-0ee363ada434')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fe471099-8121-4b52-9749-0ee363ada434 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fe471099-8121-4b52-9749-0ee363ada434');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-58f590c8-4fa8-40e8-a97d-c158e3a65d0c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-58f590c8-4fa8-40e8-a97d-c158e3a65d0c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-58f590c8-4fa8-40e8-a97d-c158e3a65d0c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["del data_result['2013년도 이전']\n","del data_result['2014년']\n","del data_result['2015년']\n","del data_result['2016년']\n","data_result.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"tHi_SjvucKIw","executionInfo":{"status":"ok","timestamp":1696982637925,"user_tz":-540,"elapsed":36,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"b3b54c3d-4be2-4ae8-b0cd-80b9a712a253"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    구별    소계       최근증가율       인구수       한국인      외국인      고령자     외국인비율  \\\n","0  강남구  2780  150.619195  570500.0  565550.0   4950.0  63167.0  0.867660   \n","1  강동구   773  166.490765  453233.0  449019.0   4214.0  54622.0  0.929765   \n","2  강북구   748  125.203252  330192.0  326686.0   3506.0  54813.0  1.061806   \n","3  강서구   884  134.793814  603772.0  597248.0   6524.0  72548.0  1.080540   \n","4  관악구  1496  149.290780  525515.0  507203.0  18312.0  68082.0  3.484582   \n","\n","       고령자비율  \n","0  11.072217  \n","1  12.051638  \n","2  16.600342  \n","3  12.015794  \n","4  12.955291  "],"text/html":["\n","  <div id=\"df-f5338e88-d3e8-4287-bac7-93e22a9e1e4d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>구별</th>\n","      <th>소계</th>\n","      <th>최근증가율</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>강남구</td>\n","      <td>2780</td>\n","      <td>150.619195</td>\n","      <td>570500.0</td>\n","      <td>565550.0</td>\n","      <td>4950.0</td>\n","      <td>63167.0</td>\n","      <td>0.867660</td>\n","      <td>11.072217</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>강동구</td>\n","      <td>773</td>\n","      <td>166.490765</td>\n","      <td>453233.0</td>\n","      <td>449019.0</td>\n","      <td>4214.0</td>\n","      <td>54622.0</td>\n","      <td>0.929765</td>\n","      <td>12.051638</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>강북구</td>\n","      <td>748</td>\n","      <td>125.203252</td>\n","      <td>330192.0</td>\n","      <td>326686.0</td>\n","      <td>3506.0</td>\n","      <td>54813.0</td>\n","      <td>1.061806</td>\n","      <td>16.600342</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>강서구</td>\n","      <td>884</td>\n","      <td>134.793814</td>\n","      <td>603772.0</td>\n","      <td>597248.0</td>\n","      <td>6524.0</td>\n","      <td>72548.0</td>\n","      <td>1.080540</td>\n","      <td>12.015794</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>관악구</td>\n","      <td>1496</td>\n","      <td>149.290780</td>\n","      <td>525515.0</td>\n","      <td>507203.0</td>\n","      <td>18312.0</td>\n","      <td>68082.0</td>\n","      <td>3.484582</td>\n","      <td>12.955291</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f5338e88-d3e8-4287-bac7-93e22a9e1e4d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f5338e88-d3e8-4287-bac7-93e22a9e1e4d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f5338e88-d3e8-4287-bac7-93e22a9e1e4d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c58a82b3-ea86-4c5c-8914-379f402c02f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c58a82b3-ea86-4c5c-8914-379f402c02f7')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c58a82b3-ea86-4c5c-8914-379f402c02f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["#set_index\n","data_result.set_index('구별' , inplace = True)\n","data_result.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"TBikgBoAc5mK","executionInfo":{"status":"ok","timestamp":1696982637926,"user_tz":-540,"elapsed":33,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"114ec57f-5422-4562-cf08-ea81913877d4"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       소계       최근증가율       인구수       한국인      외국인      고령자     외국인비율  \\\n","구별                                                                      \n","강남구  2780  150.619195  570500.0  565550.0   4950.0  63167.0  0.867660   \n","강동구   773  166.490765  453233.0  449019.0   4214.0  54622.0  0.929765   \n","강북구   748  125.203252  330192.0  326686.0   3506.0  54813.0  1.061806   \n","강서구   884  134.793814  603772.0  597248.0   6524.0  72548.0  1.080540   \n","관악구  1496  149.290780  525515.0  507203.0  18312.0  68082.0  3.484582   \n","\n","         고령자비율  \n","구별              \n","강남구  11.072217  \n","강동구  12.051638  \n","강북구  16.600342  \n","강서구  12.015794  \n","관악구  12.955291  "],"text/html":["\n","  <div id=\"df-e4284b11-c2ba-4279-ab65-02e6c146f4bf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>소계</th>\n","      <th>최근증가율</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>강남구</th>\n","      <td>2780</td>\n","      <td>150.619195</td>\n","      <td>570500.0</td>\n","      <td>565550.0</td>\n","      <td>4950.0</td>\n","      <td>63167.0</td>\n","      <td>0.867660</td>\n","      <td>11.072217</td>\n","    </tr>\n","    <tr>\n","      <th>강동구</th>\n","      <td>773</td>\n","      <td>166.490765</td>\n","      <td>453233.0</td>\n","      <td>449019.0</td>\n","      <td>4214.0</td>\n","      <td>54622.0</td>\n","      <td>0.929765</td>\n","      <td>12.051638</td>\n","    </tr>\n","    <tr>\n","      <th>강북구</th>\n","      <td>748</td>\n","      <td>125.203252</td>\n","      <td>330192.0</td>\n","      <td>326686.0</td>\n","      <td>3506.0</td>\n","      <td>54813.0</td>\n","      <td>1.061806</td>\n","      <td>16.600342</td>\n","    </tr>\n","    <tr>\n","      <th>강서구</th>\n","      <td>884</td>\n","      <td>134.793814</td>\n","      <td>603772.0</td>\n","      <td>597248.0</td>\n","      <td>6524.0</td>\n","      <td>72548.0</td>\n","      <td>1.080540</td>\n","      <td>12.015794</td>\n","    </tr>\n","    <tr>\n","      <th>관악구</th>\n","      <td>1496</td>\n","      <td>149.290780</td>\n","      <td>525515.0</td>\n","      <td>507203.0</td>\n","      <td>18312.0</td>\n","      <td>68082.0</td>\n","      <td>3.484582</td>\n","      <td>12.955291</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4284b11-c2ba-4279-ab65-02e6c146f4bf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4284b11-c2ba-4279-ab65-02e6c146f4bf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4284b11-c2ba-4279-ab65-02e6c146f4bf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6444f482-1eea-498e-825f-72fbccca9654\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6444f482-1eea-498e-825f-72fbccca9654')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6444f482-1eea-498e-825f-72fbccca9654 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["np.corrcoef(data_result['소계'] , data_result['고령자비율'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u3RLY811dKs4","executionInfo":{"status":"ok","timestamp":1696982637926,"user_tz":-540,"elapsed":31,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"5de318db-33f8-4eef-8042-0a8047d2f5e2"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.        , -0.28078554],\n","       [-0.28078554,  1.        ]])"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["np.corrcoef(data_result['소계'] , data_result['외국인비율'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gC8C4yQOdq_U","executionInfo":{"status":"ok","timestamp":1696982637926,"user_tz":-540,"elapsed":25,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"e049b45f-72d5-4167-da06-bd3980830c95"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.        , -0.13607433],\n","       [-0.13607433,  1.        ]])"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["np.corrcoef(data_result['소계'] , data_result['인구수'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AG9v2C3veXNx","executionInfo":{"status":"ok","timestamp":1696982637926,"user_tz":-540,"elapsed":24,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"23a599ff-b1a5-4ce9-ecb5-d0553ee42676"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1.        , 0.30634228],\n","       [0.30634228, 1.        ]])"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["import seaborn as sns"],"metadata":{"id":"Z6wvClXhebEn","executionInfo":{"status":"ok","timestamp":1696982638971,"user_tz":-540,"elapsed":1068,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":74,"outputs":[]},{"cell_type":"code","source":["data_result.sort_values(by = '인구수' , ascending = False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"gvqs_9Uge4qa","executionInfo":{"status":"ok","timestamp":1696982638971,"user_tz":-540,"elapsed":12,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"4a783fce-97f0-4696-8e6c-f6a647a362c6"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       소계       최근증가율       인구수       한국인      외국인      고령자     외국인비율  \\\n","구별                                                                      \n","송파구   618  104.347826  667483.0  660584.0   6899.0  72506.0  1.033584   \n","강서구   884  134.793814  603772.0  597248.0   6524.0  72548.0  1.080540   \n","강남구  2780  150.619195  570500.0  565550.0   4950.0  63167.0  0.867660   \n","노원구  1265  188.929889  569384.0  565565.0   3819.0  71941.0  0.670725   \n","관악구  1496  149.290780  525515.0  507203.0  18312.0  68082.0  3.484582   \n","\n","         고령자비율  \n","구별              \n","송파구  10.862599  \n","강서구  12.015794  \n","강남구  11.072217  \n","노원구  12.634883  \n","관악구  12.955291  "],"text/html":["\n","  <div id=\"df-6d0b82fd-3a9d-4e7a-ab08-0062dabcadbc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>소계</th>\n","      <th>최근증가율</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>송파구</th>\n","      <td>618</td>\n","      <td>104.347826</td>\n","      <td>667483.0</td>\n","      <td>660584.0</td>\n","      <td>6899.0</td>\n","      <td>72506.0</td>\n","      <td>1.033584</td>\n","      <td>10.862599</td>\n","    </tr>\n","    <tr>\n","      <th>강서구</th>\n","      <td>884</td>\n","      <td>134.793814</td>\n","      <td>603772.0</td>\n","      <td>597248.0</td>\n","      <td>6524.0</td>\n","      <td>72548.0</td>\n","      <td>1.080540</td>\n","      <td>12.015794</td>\n","    </tr>\n","    <tr>\n","      <th>강남구</th>\n","      <td>2780</td>\n","      <td>150.619195</td>\n","      <td>570500.0</td>\n","      <td>565550.0</td>\n","      <td>4950.0</td>\n","      <td>63167.0</td>\n","      <td>0.867660</td>\n","      <td>11.072217</td>\n","    </tr>\n","    <tr>\n","      <th>노원구</th>\n","      <td>1265</td>\n","      <td>188.929889</td>\n","      <td>569384.0</td>\n","      <td>565565.0</td>\n","      <td>3819.0</td>\n","      <td>71941.0</td>\n","      <td>0.670725</td>\n","      <td>12.634883</td>\n","    </tr>\n","    <tr>\n","      <th>관악구</th>\n","      <td>1496</td>\n","      <td>149.290780</td>\n","      <td>525515.0</td>\n","      <td>507203.0</td>\n","      <td>18312.0</td>\n","      <td>68082.0</td>\n","      <td>3.484582</td>\n","      <td>12.955291</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d0b82fd-3a9d-4e7a-ab08-0062dabcadbc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6d0b82fd-3a9d-4e7a-ab08-0062dabcadbc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6d0b82fd-3a9d-4e7a-ab08-0062dabcadbc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f3c4c242-7740-4fac-97d2-1e12c1d1ed4f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3c4c242-7740-4fac-97d2-1e12c1d1ed4f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f3c4c242-7740-4fac-97d2-1e12c1d1ed4f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["plt.rc('font' , family = 'NanumGothic')\n","mpl.rcParams['axes.unicode_minus'] = False\n","plt.plot(data_result['인구수'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"VMvPCQ9_fMKc","executionInfo":{"status":"ok","timestamp":1696983093980,"user_tz":-540,"elapsed":846,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"cc8aadbe-272f-4c4b-d19c-1ebc8d8fd65c"},"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f14bfccbbe0>]"]},"metadata":{},"execution_count":139},{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABIUAAAM6CAYAAAAfd/ODAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAB7CAAAewgFu0HU+AAEAAElEQVR4nOz9eZicZZk3/H9r66re906vWbpDErKRkA0IiMsoGIUQlgD6MsoIIirqM6OM/ODBmQd5eBh8R1+CiAjKPI5iAkhAIYM7IYGkk5BAVkK6O0mv6X1fart/f/RUp67rquq1qu6lvp/j4DjSd1fuvmnorqrzPs/vadM0TQMRERERERERESUVu94XQEREREREREREiceiEBERERERERFREmJRiIiIiIiIiIgoCbEoRERERERERESUhFgUIiIiIiIiIiJKQiwKERERERERERElIRaFiIiIiIiIiIiSEItCRERERERERERJiEUhIiIiIiIiIqIkxKIQEREREREREVESYlGIiIiIiIiIiCgJsShERERERERERJSEWBQiIiIiIiIiIkpCLAoRERERERERESUhFoWIiIiIiIiIiJIQi0JEREREREREREnIqfcFkLkNDw/j8OHDAIDCwkI4nfxfioiIiIiIiCjW/H4/2traAADLli2Dx+OZ8Tn5Dp5m5PDhw1i7dq3el0FERERERESUNKqrq7FmzZoZn4fjY0RERERERERESYidQjQjhYWFY3+urq5GSUmJjldDREREREREZE3Nzc1jkzrh78VngkUhmpHwDKGSkhKUl5freDVERERERERE1herPF+OjxERERERERERJSEWhYiIiIiIiIiIkhCLQkRERERERERESYhFISIiIiIiIiKiJMSiEBERERERERFREmJRiIiIiIiIiIgoCbEoRERERERERESUhFgUIiIiIiIiIiJKQiwKERERERERERElIRaFiIiIiIiIiIiSEItCRERERERERERJiEUhIiIiIiIiIqIkxKIQEREREREREVESYlGIiIiIiIiIiCgJsShERERERERERJSEWBQiIiIiIiIiIkpCLAoRERERERERESUhFoWIiIiIiIiIiJIQi0JEREREREREREmIRSEiIiIiIiIioiTEohARERERERERURJiUYiIiIiIiIiIKAmxKERERERERERElIRYFCIiIiIiIiIiSkIsChERERERERERJSEWhYiIiIiIiIiIkhCLQkRERERERERESYhFISIiIiIiIiKiJMSiEBERERERWdqwLwCvP6j3ZRARGY5T7wsgIiIiIiKKl/+z4wR+urMGeWkp2PK5lbisqkDvSyIiMgx2ChERERERkSWdau3HU2/WQNOAjgEvHnn9hN6XRERkKCwKERERERGRJb3f0C18fLSpB8O+gD4XQ0RkQCwKERERERGRJZ1uHxA+DmrA6Y6BKI8mIko+LAoREREREZEl1XUMKsdOtfbrcCVERMbEohAREREREVmS3CkEsChERBSORSEiIiIiIrIcTdNQx6IQEdG4WBQiIiIiIiLLae/3on/ErxyvaWOmEBFRCItCRERERERkOdECpWvb+hEIagm+GiIiY2JRiIiIiIiILCfS6BgAjPiDaOwaSvDVEBEZE4tCRERERERkOZFCpkNOtfUl8EqIiIyLRSEiIiIiIrKcaONjAMOmiYhCWBQiIiIiIiLLqWsfjPq5mlaGTRMRASwKERERERGRxWiahjPjdQq1sVOIiAhgUYiIiIiIiCymtW8Eg95A1M+fau2HpnEDGRERi0JERERERGQp0TaPhfQM+dDe703Q1RARGReLQkREREREZCny5rELijLgdopvfWo4QkZExKIQERERERFZS52UJ1RVmIHKwgzhGDeQERGxKERERERERBZT1yYWheYWpGN+EYtCREQyp94XQEREREREFEunpU6heQVp8Lg4PkZEJGNRiIiIiIiILCMY1HCmY1A4Njc/Helu8a0PO4WIiFgUIiIiIiIiC2nuHcaIPygcm1eQjuw0l/i4nmH0j/iR4eZbIiJKXswUIiIiIiIiy5A3j6WnOFCY6ca8gnTYbeJjazlCRkRJjkUhIiIiIiKyjDqpKDQnPx02mw1upwOz89KEz3GEjIiSHYtCRERERERkGXKn0LyC9LE/V3EtPRGRgEUhIiIiIiKyDHnz2NyC891BXEtPRCRiUYiIiIiIiCxDHh+bmx/WKSQVhbiWnoiSHYtCRERERERkCYGghvrOIeFY+PiY3Cl0pmMQvoC4qYyIKJmwKERERERERJbQ1D0Eb0BdRx8iZwr5gxrOSONmRETJhEUhIiIiIiKyBHl0LNPjRF56ytjH2akuFGa6hccwV4iIkhmLQkREREREZAlyUWheweg6+nDzC+VcIXYKEVHy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wj388MNjAdq33norvvvd72LXrl3YtWsXvvvd7+Jzn/scAKCwsBDf//73I57D5XJhy5YtsNvt6O3txfr16/HEE0+guroab7zxBm688UY8+eSTAEZHzW677baI54nV94bILFp6xcJnSfboJsGbVokB6rtOtaOxe/xQaiIiIjKXRG0eC1GKQhwfIyILsmmhua042rVrF2688UacOxd5pMNms+H+++/HQw89FPHzwWAQd955J37+859H/Rpf+tKX8PTTT4+Nd0XS3t6ODRs2CGvvw7ndbjzxxBO44447xvm3Afbu3Yvrrrsuah5QcXExtm/fjnXr1o17np/97Gf4+te/Dq/XG/Hza9euxWuvvTa2mS2SWH1vpquhoWEsOLu+vp4r7CmuVn//j2jvP//z8tzta/DRhUUY9gWw5uE/oW/4/FaQf/zkAnzjEyyEEhERWUEgqOHC//lf8AbObx974SuXYs3cvLh9zQNnOnHDT94Z+9jlsOHY/7oaLkfc76sTEUUUj/ffCfmNdvnll+Po0aP43ve+h4suughZWVnweDyYN28ebr/9dhw4cCBqQQgYzeZ59tln8dprr2Hjxo0oLS1FSkoKSktLsXHjRrz++ut45plnJix6FBQU4O2338aTTz6Jyy+/HPn5+fB4PKisrMSdd96JAwcOTFgQAoB169bh8OHDeOCBB7B06VJkZGQgIyMDy5YtwwMPPIAjR45MWBACMPY177zzTlRWVsLj8SA/Px+XX345fvKTn2D37t3jFoRi+b0hMroRf0AoCAFASfbo5jGPy4FrLyoVPvfCgXoEg3GveRMREVECNHUPCQUhIP7jY1XSWnpfQMPZzsjZpEREZpWQTiGyLnYKUaLUdw7iin/7q3Dsve99CtmpLgDAofpuXPfj3cLnf33nOlxWNX5hlYiIiIzvrQ/bcNuz1WMfZ7qdeP9fPhX3JSpyl/JPb1uFq5aomaFERIlg2k4hIqKZaukVQ6bTUhzI8pzP/rqoPBsLZol39F7c35CQayMiIqL4kjePzS2I3zr6cHK3EMOmichqWBQiIlOItHks/MWgzWbD5tVi4PTrR5rRO+xLyPURERFR/Cibx+IcMh0ih03XsChERBbDohARmUJLT+TNY+GuW1kGp/18oWjYF8Tv32uO+7URERFRfMmbx+blpyXk6ypFIW4gIyKLYVGIiExB6RTKSlUe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vPEGXnzxReUxL7zwAt544w0AwG233RZxxGzTpk2orKwEADzyyCOoqalRHvOd73wHXV1dY3+OJFbfG7IOuSh04ExXXFdeyuMUTrsNBSYcl7GCpWXii/ejUwyb/k21GDC9cnaO7uMm8lp6TQPq2o3bsWKFdfQhygayjuQrCmmahu+8+J6yRvz71y2N25uGWPi7xbPw2jeuUH4nAMDz1Wdxw0/eTpr/nvKNkbz0FFxQlLjgfJvNhoukoGYjh03LnULLGDKdtGZluZWC5tEp3mwyg3N9IwhINzfjsX0MAAoyWRQygkGvH33DfuEYx8dMUBRasGDBWFFk//79WL9+PbZu3Yr9+/dj69atWL9+Pfbv3w9gtHhywQUXRDzPF77whbERrB//+Me48cYb8cYbb6C6uhpPPPEELrvsMvT29sJut+Pxxx+H0xk5bunhhx9GYWEhAODWW2/Fd7/7XezatQu7du3Cd7/7XXzuc58DABQWFuL73/9+xHO4XC5s2bIFdrsdvb29WL9+PZ544glUV1fjjTfewI033ognn3wSwOio2W233RbX7w1Zx5q5YlFoyBdQXuTFklwUmpXlMdzd82Qhdwodb+mbdEGwqXsIb55sE47dukbfLiEASEtxKi/OjDxCZqWi0Jw8sSB3JkmKCOF+uecM3vqwXTj2meUluPaiUp2uaPIq8tLw4lcuw+fXqT/HR5t68dktb+GPx87pcGWJJReF1szNTXjH9IqKXOHjQ/VdCf36kzUw4ld+vy5lyHTSstlsWFyijpBZTZPUSehx2ZViWKyo42MsCulBHh0D2CkExDFoOpYefvhhtLa24uc//zkOHjyIW265RXnMl770pahFGABwOBzYvn07NmzYgH379uGll17CSy+9JDzG7XbjiSeewKc//emo56moqMDvfvc7XHfddWhpacGjjz6KRx99VHhMcXExtm/frmwvC7dhwwY89dRT+PrXv45z586NdfSEW7t2LV5++eWxbqBIYvG9IevIS0/BglkZOHnu/Au76rpOXDw7d5y/NX0tPeKTKfOE9CPnSXn9QZxq7ceFJRO3/2/bXy9szcpwO/HZi0pifYnTUlmYLox/GHkDmZXHx+o7Bw0dkBtrNW39+N+vHxeOFWW68fB1S03zPfC4HHh40zKsnpuL/99vj2AobGysd9iPO//vftx1ZSW+86mFcDoMf49w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TkVFRZo7d66uuuoqbdiwIeHzbNiwQVdddZXmzp2roqIijRs3TvPmzdNNN92kjo6OhM+TrOcGAHLNjGprKLS9vUc7R9ifz0whAADGJtXDphuauxS1zhpWXXl2VQpJ9lk4TW3MFBpOfbMZCmVfGJhpKZsptHTpUp199tkx72tsbNSLL76oF198UTfddJP++Mc/6sQTT4x7ruuuu04//elPFYns7kPdunWrnn/+eT3//PN68MEH9eijjyoYjP8PoLOzU1/5ylf09NNPW45/9tlnevDBB/XQQw/pxz/+sX7yk58M+XWtWbNGJ510kj755BPL8VWrVmnVqlW655579OCDD+rkk08e8jxPPfWUzj33XLW07P6B2NHRoWXLlmnZsmW65557tHjxYs2cOXPI8yTjuQGAXDW5okB5Po96w7uvFNc1temgonEJn8PWPkYoBADAiJiVQmsb29XVG1Ywz5eU85utY0UBn0oLsm98rlmNzLb0wzMrhWgfG7mUto9NnjxZ5513nm655RY99thjev311/Xqq6/q4Ycf1hlnnCGfz6empiZ9+ctf1vvvvx/zHL///e91/fXXKxKJaMaMGbr33nu1dOlSPfHEEzr22GMlSYsXL9Y3vvGNIdfyjW98YyAQOvbYY/XEE09o6dKluvfeezVjxgxFIhFdd911uuuuu+Keo7W1VV/84hcHAqGLL75YL7zwgl577TX97Gc/U3FxsVpaWvTVr35V7733XtzzvPvuu/rqV7+qlpYWFRcX62c/+5lee+01vfDCC7r44oslSatXr9YXv/hFtba2xj1Psp4bAMhVfp9XU8abc4USbyHrDoXV3NlrOUalEAAAIzO3tkQez+7b4UhUqxriv84ZKfs8oQJ5Bn/CLFFZQig0Uuag6QmEQiOWsvj02GOP1WeffRb3/jPPPFNPPPGEFi5cqJ6eHl1//fV67LHHLI/ZsWOHfvCDH0iS9thjD73xxhuqrNw9pf7kk0/WwoUL9dRTT+mhhx7SJZdcomOOOcb2uf7+97/rz3/+syTpS1/6kh5//HH5fH2p9Lx58/TlL39ZBx10kD777DP94Ac/0BlnnKGKigrbeW666SatXr1akvSLX/xCV1999cB9hx12mI455hgtWLBAHR0duvLKK/WPf/wj5td+xRVXqLOzU36/X88//7wOO+ywgfs+//nPa9asWbrmmmu0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/vrrQ87OefHFFyX1DVXuH2jdb968eQPDmPsfF0tPT4/eeOONgY/Jy8uz3H/kkUfaPl8sy5YtG6jwOeKII2z395+nvb1db7/99rBfU6zzJOu5AQC38Hk9ml5p7kA2dPutGQqVFeQp3++L82gAAJCIvSaYO5Alt1IoW7ej70elUGLM1rE8n0fjCnnzbjQyHgr95S9/Gfj7vvvua7nv1FNPlSS1tLTosccei/nxmzZt0t/+9jdJ0he+8AXLvB2pb/7OF77wBUnS3/72t7jtVo899phaWvp+IC1cuNB2/zHHHKOysjJJ0v/8z//EnUVx//33D/w91nn6vyZJWrRoUcxzRCIR/eEPf5DUN6T72GOPjXuesTw3AOAm081t6bcNHQrZdh5jnhAAAGNmzhVaMYZt6Tt6QtrZ0Ws5lv3tY8wUSkRDszUMrC4JypvFu85lUspCofvvv9+ydXosv/71r/X0009LkqZNm6ajjjrKcv9FF100EMRce+212r59u+X+cDisyy67TOFwWJJ09dVXx/w83//+9yX1tXZ961vfGnh8v6amJv3gBz+Q1BfCXHTRRbZzBAIBfec735EkrVy5Ur/85S9tj3n99dd17733SpIWLFigefPm2R4zf/78ga/z3nvv1euvv257zK9+9SutXLlSknTFFVfYqpak5D03AOAWM6qsc4XWNY2sfYwh0wAAjN3eE8sst9c1taujJ/5YjaGYVUKSNLE8u1uIzEqhHe3dCpt9UlAD29EnTcpCoeuuu06TJk3SJZdcoj/84Q969dVX9f777+uVV17RnXfeqSOPPFLf+973JPUFLnfdddfAnJx+48aN04033iipb97QIYccokWLFmnZsmV68skndfzxx+upp56SJJ199tk65phjYq7l85//vM466yxJGvi4J598UsuWLdOiRYt06KGH6rPPPpMk3XjjjaqoqIh5nquvvlqzZ8+WJF1zzTW69NJLtWTJEr3xxhu64YYbdMIJJygUCqmgoEC/+c1v4j43t9xyiwoKChQKhXTCCSfohhtu0BtvvKElS5bo0ksv1TXXXCOpb3bQVVddFfMcyXpuAMAtzFBo2PaxNkIhAACSbU5NiQYXdESj0qqG1vgfMARz57FxRQEVBvxjWV7Gmdcbkai0s4NqIVNDC0OmkyWl/2N27Nihu+++W3fffXfcx9TV1em+++7Tcccd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qKOjI+Z57r///oG/L1y40Hb/l7/8ZXm9fU/ZokWL4q67/zxer1df/vKXbfefeuqpMT/nYB0dHXrkkUck9VUFzZ4923J/sp4bAAAAAED2Cfi9KivIsxxras2+UIj2scxKWSjU09OjhQsX6tVXX5UkXXHFFfqv//qvEZ/nyiuvlM/XN2Tq29/+tm1L9c7OTn3729+WJPn9fl155ZUxz/P9739fkrRjxw5dc801tvvXrl2rG264QZI0c+bMmKFQbW2t/uVf/kWS9Nxzz+nRRx+1PeYvf/mLnnvuOUnS1772NdXW1toes3DhQk2fPl2SdMMNN2jt2rW2x1x99dXauXPnwN9jSdZzAwAAAADIPlUl1mqhbKwUMgdN15ax81g6pSwUOvvss/X8889Lkj7/+c/rwgsv1EcffRT3T3/blmn27NkDociyZct0xBFH6OGHH9ayZcv08MMP64gjjtCyZcsk9YUns2bNinme888/f6AF67e//a2+8pWv6LnnntPSpUt1++236/DDD1dLS4u8Xq9uvfVW+f3+mOf52c9+pqqqqoGv8dprr9Urr7yiV155Rddee63OOeccSVJVVVXcECwvL0+33XabvF6vWlpadMQRR+j222/X0qVL9dxzz+krX/mK7rjjDkl9rWZf+9rXUvrcAAAAAACyT2Wxda5QU1tPhlYyeuaW9LVlBRlaiTt5otFoSsaTj7RNacqUKfr0009j3heJRHTxxRfrvvvui/vxF154oe66666B9q5YmpqadNJJJ+mtt96KeX9+fr5uv/12XXTRRUOu9c0339Spp54adx5QbW2tnnjiCR1yyCFDnufuu+/W5Zdfrp6e2P9x58+fr8WLF6uysjLuOZL13IzWpk2bBgZnb9y40bZjGwAAAAAgNS7/0zv63w/qB27/6zEz9IN/mpvBFY1MdyisOT961nLsuSuP1pzakgytyNlS8fo7bVvSj4XX69W9996rxYsX65RTTtHEiRMVCAQ0ceJEnXLKKXr66ad1zz33DBt6VFZW6rXXXtMdd9yhI488UuPHj1cwGNT06dN18cUX6+233x42EJKkQw45RB9++KF+9KMfaZ999lFxcbGKi4u177776kc/+pE++uijYQMhSQOf8+KLL9b06dMVDAY1fvx4HXnkkbrzzjv16quvDhkIJfO5AQAAAABkF3Nb+mybKbStxb5eZgql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\n"},"metadata":{"image/png":{"width":578,"height":413}}}]},{"cell_type":"code","source":["plt.plot([1,2,3,4,5,6,7,8,9,8,7,6,5,4,3,2,1,0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"-pPgj5adfadi","executionInfo":{"status":"ok","timestamp":1696982641018,"user_tz":-540,"elapsed":919,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"67e66c46-c523-4bfc-9ac9-ef703ea33c02"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f14cbe4d780>]"]},"metadata":{},"execution_count":77},{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":540,"height":413}}}]},{"cell_type":"code","source":["x = np.arange(0 , 12 , 0.01)\n","y = np.sin(x)\n","plt.figure(figsize = (20,5))\n","plt.plot(x,y)\n","plt.xlabel('time' , size = 20)\n","plt.ylabel('sin' , size = 20)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"7xLGeHt9fzCH","executionInfo":{"status":"ok","timestamp":1696982641018,"user_tz":-540,"elapsed":19,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"81b06478-14ce-4823-a73c-d0cf88421f83"},"execution_count":78,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":1648,"height":461}}}]},{"cell_type":"code","source":["plt.subplot(2,1,1)\n","plt.plot(x,y)\n","plt.subplot(2,2,3)\n","plt.plot(x,y)\n","plt.subplot(2,2,4)\n","plt.plot(x,y)\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"X-1Bzvppf2fe","executionInfo":{"status":"ok","timestamp":1696982642107,"user_tz":-540,"elapsed":1099,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"78a83287-b602-4018-cfb1-5ab5211b73f3"},"execution_count":79,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 3 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":643,"height":470}}}]},{"cell_type":"code","source":["plt.figure(figsize = (10,6))\n","plt.plot(x,np.sin(x) , label = 'sin')\n","plt.plot(x,np.cos(x) , label = 'cos')\n","plt.grid()\n","plt.title('multipoint graph')\n","plt.xlabel('time')\n","plt.ylabel('data')\n","plt.legend(loc = 'lower left')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"qUlxf5BTgfNm","executionInfo":{"status":"ok","timestamp":1696982642107,"user_tz":-540,"elapsed":18,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"0a2b560e-2310-4d8c-c5b8-67332167ebc2"},"execution_count":80,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":860,"height":546}}}]},{"cell_type":"code","source":["plt.figure(figsize = (10,6))\n","plt.plot(x,np.sin(x) , label = 'sin' , lw = 3 , color = 'green')\n","plt.plot(x,np.cos(x) , label = 'cos' , lw = 3 , color = 'y')\n","plt.grid()\n","plt.title('multipoint graph')\n","plt.xlabel('time')\n","plt.ylabel('data')\n","plt.legend(loc = 'lower left')\n","plt.xlim(0, np.pi)\n","plt.ylim(-1.1 , 1.1)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"s8i-F2Rgg9q1","executionInfo":{"status":"ok","timestamp":1696982643037,"user_tz":-540,"elapsed":936,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"e00c21ee-0eb5-48fe-a6f5-63ad6de8ad0f"},"execution_count":81,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":860,"height":546}}}]},{"cell_type":"code","source":["t = np.arange(0,5,0.5)\n","plt.figure(figsize = (10,6))\n","plt.plot(t , t , 'r--')\n","plt.plot(t , t**2 , 'bs')\n","plt.plot(t , t**3 , 'g^')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"j9oxPnYniHCA","executionInfo":{"status":"ok","timestamp":1696982643038,"user_tz":-540,"elapsed":13,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"1ea5ccd8-d099-4322-bf81-0f551a6471fd"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"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ABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQm2AAAAAAAABQ2KsFm27ZtWbVqVd74xjfmwAMPzJQpUzJz5swcccQROeuss/L9739/SOvccsstOf300zN37txMmTIlc+fOzemnn55bbrmlxZ8AAAAAAACgddp6e3t7W/kG//Vf/5W3vOUtefDBB+ued/755+fzn/982tradntux44dOe+887J69eqarz/nnHPypS99KRMmjHyDWr9+febNm5ckWbduXebOnTvi7wEAAAAAAIwPregGLZ2wee6553aKNS9/+ctzzTXX5K677sqtt96aj33sY5kxY0aS5Kqrrsqll15adZ2LL764P9Yce+yxue6663LPPffkuuuuy7HHHpskWbVqVT7ykY+08uMAAAAAAAC0REsnbG644Ya8613vSpK86lWvyh133JGJEyfudM6PfvSjvOpVr8pzzz2XfffdNz//+c/T3t7e//zatWtz9NFHp6enJ4sWLcrtt9+eadOm9T//7LPP5uSTT05HR0fa29vz8MMP57DDDhvRz2HCBgAAAAAAqBh3EzYD701z0UUX7RZrkuS4447LaaedliT51a9+lYcffnin56+88sr09PQk6ZvCGRhrkmT69Om56qqrkiQ9PT254oorRvQzAAAAAAAAtFpLg822bdv6jw855JCa5x166KFVX9Pb25ubbropSbJw4cIsXry46usXL16cI444Ikly0003pcW35QEAAAAAABhRLQ02lYiSJI899ljN8x599NEkSVtbWw4//PD+xx9//PE8+eSTSZKTTz657ntVnt+wYUOeeOKJZrcMAAAAAAAw6loabM4444zss88+SZJLL70027dv3+2ce++9NzfffHOS5A//8A/7z0+Shx56qP944cKFdd9r4PO7XlZtMOvXr6/7tXHjxobWAwAAAAAAaER7Kxfff//987WvfS1nnHFG1qxZk+OPPz4XXnhhFixYkK6urqxZsyaXX355tm3blle+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AAAAChNsAAAAAAAAChNsAAAAAAAAChvVYPOzn/0sl1xySRYtWpQDDjggU6dOzbx58/LqV786H/vYx/LAAw/Uff0tt9yS008/PXPnzs2UKVMyd+7cnH766bnllltG6RMAAAAAAACMvPbReqOrrroqF110UTZv3rzT4+vXr8/69etz55135je/+U2uvPLK3V67Y8eOnHfeeVm9evVOj2/YsCEbNmzIt771rZxzzjn50pe+lAkTDA0BAAAAAADjy6gEm7/6q7/KRz/60STJggULcu655+b444/P8573vPziF7/IvffemxtvvLFmbLn44ov7Y82xxx6bD33oQzn00EPz6KOPZsWKFbn33nuzatWqHHDAAfn0pz89Gh8JAAAAAABgxLT19vb2tvINvvvd7+b1r399kuTMM8/MqlWrMmnSpKrnbtu2LZMnT97psbVr1+boo49OT09PFi1alNtvvz3Tpk3rf/7ZZ5/NySefnI6OjrS3t+fhhx/OYYcdNqKfYf369Zk3b16SZN26dZk7d+6Irg8AAAAAAIwfregGLb1+2I4dO/L+978/SXLMMcdk9erVNWNNkt1iTZJceeWV6enpSdJ3WbWBsSZJpk+fnquuuipJ0tPTkyuuuGKktg8AAAAAADAqWhpsbr311vz0pz9Nknz4wx9Oe3tjV2Dr7e3NTTfdlCRZuHBhFi9eXPW8xYsX54gjjkiS3HTTTWnx0BAAAAAAAMCIammw+eY3v5kkaWtry2mnndb/+KZNm/LTn/40mzZtqvv6xx9/PE8++WSS5OSTT657buX5DRs25IknnhjGrgEAAAAAAEZXYyMvDbr77ruTJAcffHBmzZqVf/iHf8hf//Vf54EHHug/Z8GCBTn33HNz/vnnZ8qUKTu9/qGHHuo/XrhwYd33Gvj8ww8/nPnz5w95n+vXr6/7/MaNG4e8FgAAAAAAQKNaFmx27NiRRx55JEmy//7754ILLsgXvvCF3c5bu3Ztli1blhtvvDE333xz9t133/7nBoaUwW7YU7m5T9J3g59GDHwtAAAAAADAaGvZJdF+/etfZ8eOHUmSn/zkJ/nCF76QAw88MH//93+fTZs25dlnn81tt93Wf1+a73//+/njP/7jndZ45pln+o9nzpxZ9/1mzJjRf9zV1TVSHwMAAAAAAKDlWjZhs3nz5v7jLVu2ZPr06fne976XI444ov/xk046Kf/+7/+eV73qVbn//vtz44035gc/+EF+53d+p/91FZMnT677fgMvp9bd3d3QXgebyNm4cWNOOOGEhtYEAAAAAAAYqpYFm6lTp+70z+ecc85OsaZi2rRp+dSnPpXTTjstSXL99df3B5uBa2zbtq3u+23dunWnNRsx2OXWAAAAAAAAWqlll0SbNWvWTv986qmn1jz3da97Xdrb+9rRD3/4w6prDHaZs4ETPYNdPg0AAAAAAGAsaVmwmTJlSg444ID+f543b17Nc6dOnZr9998/SfLzn/+8//GBky/r16+v+34DL2tW770AAAAAAADGmpYFmyQ5+uij+4+3b99e99zK85VJmyQ56qij+o8feeSRuq8f+PyRRx7Z0D4BAAAAAABKammwOemkk/qPH3vssZrn/eY3v8nTTz+dJDnooIP6H58/f37mzJmTJLntttvqvtftt9/e//qDDz642S0DAAAAAACMupYGm3e84x39xzfeeGPN82688cb09vYmSV796lf3P97W1palS5cm6Zugufvuu6u+/u677+6fsFm6dGna2tqGvXcAAAAAAIDR0tJg8/KXvzy/93u/lyS57rrr8t3vfne3czo7O/ORj3wkSTJ58uScddZZOz1/4YUXZuLEiUmS888/P93d3Ts9393dnfPPPz9J3+XULrzwwpH+GAAAAAAAAC3V0mCTJFdeeWX23Xff7NixI6eddlouuuii3HHHHeno6Mjf/u3f5vjjj8/69euTJJ/85Cd3uiRakixYsCDLli1LknR0dGTJkiW5/vrr09HRkeuvvz5LlixJR0dHkmTZsmU5/PDDW/2RAAAAAAAARlRbb+VaZC1055135p3vfGeeeuqp6ptoa8vFF1+cT37yk1Wf37FjR84999xcffXVNd/j7LPPzpe//OVMmDDyDWr9+vWZN29ekmTdunWZO3fuiL8HAAAAAAAwPrSiG7R8wiZJTjzxxDz44IO55JJLcswxx2SfffbJ1KlTM3/+/Jx11ln50Y9+VDPWJMmECROyevXq3HzzzVm6dGnmzJmTyZMnZ86cOVm6dGm+853vZNWqVS2JNQAAAAAAAK02KhM2450JGwAAAAAAoGLcTtgAAAAAAABQm2ADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAABQmGADAAAAAMN0f+f9pbcAwDgn2AAAAADAMHR2deaUa09JZ1dn6a0AMI4JNgAAAAAwDCvWrMim7k25bM1lpbcCwDgm2AAAAABAkzq7OrOyY2WSZGXHSlM2ADRNsAEAAACAJq1YsyJberYkSbp7uk3ZANA0wQYAAAAAmjBwuqbClA0AzRJsAAAAAKAJA6drKkzZANAswQYAAAAAGlRtuqbClA0AzRBsAAAAAKBB1aZrKkzZANAMwQYAAAAAGlBvuqbClA0AjRJsAAAAAKAB9aZrKkzZANAowQYAAAAAhmgo0zUVpmwAaIRgAwAAAABDNJTpmgpTNgA0QrABAAAAgCFoZLqmwpQNAEMl2AAAAADAEDQyXVNhygaAoRJsAAAAAGAQzUzXVJiyAWAoBBsAAAAAGEQz0zUVpmwAGArBBgAAAADqGM50TYUpGwAGI9gAAAAAQB3Dma6pMGUDwGAEGwAAAACoYSSmaypM2QBQT3vpDQAAAADAWHXNfddkv2n7jeh6y09cPmLrAbDnEGwAAAAAoIblJy4XWAAYFS6JBgAAAAAAUJhgAwAAAAAAUJhgAwAAAAAAUJhgAwAAAAAAUJhgAwAAAAAAUJhgAwAAAAAAUFiRYPPhD384bW1t/V//8R//Mehrbrnllpx++umZO3dupkyZkrlz5+b000/PLbfc0voNAwAAAAAAtFD7aL/hfffdl8997nNDPn/Hjh0577zzsnr16p0e37BhQzZs2JBvfetbOeecc/KlL30pEyYYGAIAAAAAAMafUS0clfjS09OTF77whUN6zcUXX9wfa4499thcd911ueeee3Ldddfl2GOPTZKsWrUqH/nIR1q2bwAAAAAAgFYa1WDzhS98IT/84Q+zcOHCnH322YOev3bt2nz2s59NkixatChr1qzJe97znhx//PF5z3vekzvvvDOLFi1Kklx22WX5z//8z5buHwAAAAAAoBVGLdj87Gc/y0c/+tEkyRe/+MVMnjx50NdceeWV6enpSZJcddVVmTZt2k7PT58+PVdddVWSpKenJ1dcccUI7xoAAAAAAKD1Ri3YfOADH0hXV1fe+9735uSTTx70/N7e3tx0001JkoULF2bx4sVVz1u8eHGOOOKIJMlNN92U3t7ekds0AAAAAADAKBiVYPONb3wj3/72t/OCF7yg/xJng3n88cfz5JNPJsmggafy/IYNG/LEE08Ma68AAAAAAACjreXB5le/+lUuuOCCJMmll16a/ffff0ive+ihh/qPFy5cWPfcgc8//PDDTewSAAAAAACgnPZWv8GHPvShdHZ2ZsmSJTn77LOH/Lr169f3H8+dO7fuufPmzes/XrduXcN7HPhe1WzcuLHhNQEAAAAAAIaqpcHmjjvuyKpVq9Le3p4vfvGLaWtrG/Jrn3nmmf7jmTNn1j13xowZ/cddXV0N73Ng8AEAAAAAABhtLbsk2rZt23Leeeelt7c3H/zgB/PSl760oddv2bKl/3jy5Ml1z50yZUr/cXd3d2MbBQAAAAAAKKxlEzaf/vSn88gjj+TFL35xLrnkkoZfP3Xq1P7jbdu21T1369at/cfTpk1r+L0Gu4zaxo0bc8IJJzS8LgAAAAAAwFC0JNg88sgj+eu//uskyVVXXbXTJcuGatasWf3Hg13mbPPmzf3Hg10+rZrB7pEDAAAAAADQSi0JNldccUW2bduWQw45JM8++2y+/vWv73bOAw880H/87//+7+ns7EySvPWtb82MGTN2iijr16+v+34DJ2TcjwYAAAAAABhvWhJsKpcoe+yxx3LGGWcMev4nP/nJ/uPHH388M2bMyFFHHdX/2COPPFL39QOfP/LIIxvdLgAAAAAAQFETSm+glvnz52fOnDlJkttuu63uubfffnuS5KCDDsrBBx/c6q0BAAAAAACMqJYEm2uuuSa9vb11vy655JL+87/3ve/1P14JLm1tbVm6dGmSvgmau+++u+p73X333f0TNkuXLk1bW1srPhIAAAAAAEDLjNkJmyS58MILM3HixCTJ+eefn+7u7p2e7+7uzvnnn58kaW9vz4UXXjjaWwQAAAAAABi2MR1sFixY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8MEHc/rpp6enpydTp07NN7/5zbzwhS+seu7UqVP7j7dt21Z33a1bt/YfT5s2raE9DXa5NQAAAAAAgFYa1UuiPf744zn11FPzy1/+MhMnTszXv/71nHTSSTXPnzVrVv/xYJc527x5c//xYJdPAwAAAAAAGEtGLdg8+eSTef3rX58nn3wybW1tufrqq7N06dK6rxk4+bJ+/fq65w68rNm8efOGt1kAAAAAAIBRNCrB5umnn84b3vCGPPbYY0mSq666KmeeeeagrzvqqKP6jx955JG65w58/sgjj2xypwAAAAAAAKOv5cHm17/+dd74xjfmoYceSpJ85jOfyQc+8IEhvXb+/PmZM2dOkuS2226re+7tt9+eJDnooINy8MEHN79hAAAAAACAUdbeysWfffbZvOUtb8mPf/zjJMnFF1+cD3/4w0N+fVtbW5YuXZqVK1fmkUceyd13353Fixfvdt7dd9/dP2GzdOnStLW1jcwHAAAAAACAPdjs2WNrnb1ZW29vb28rFt62bVve+ta35tZbb02SXHDBBbnyyisbXmft2rU56qijsn379ixatCi33357pk2b1v98d3d3TjrppHR0dKS9vT0PPfRQDj/88JH6GEn67p9TuS/OunXrdrq3DgAAAAAAsHdpRTdo2YTNGWec0R9rTjnllJx99tl54IEHap4/efLkLFiwYLfHFyxYkGXLluUzn/lMOjo6smTJknz4wx/OoYcemkcffTSXXnpp7r333iTJsmXLRjzWAAAAAAAAtFrLJmwavSzZS17ykjzxxBNVn9uxY0fOPffcXH311TVff/bZZ+fLX/5yJkwY+dvymLABAAAAAAAqWtENRr5utMCECROyevXq3HzzzVm6dGnmzJmTyZMnZ86cOVm6dGm+853vZNWqVS2JNQAAAAAAAK3WskuitWJw581vfnPe/OY3j/i6AAAAAAAAJRlJAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKEywAQAAAAAAKKy99AYAAAAAAPitRYuSzs7hrzN7dtLRMfx1gNEh2AAAAAAAjCGdncmGDaV3AYw2l0QD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\n"},"metadata":{"image/png":{"width":822,"height":505}}}]},{"cell_type":"code","source":["plt.figure(figsize = (20,10))\n","plt.subplot(2,1,1)\n","pl1 = plt.plot(t , t**2 , 'bs')\n","plt.subplot(2,1,2)\n","pl2 = plt.plot(t , t**3 , 'y*')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"3mA7sL7Yktbm","executionInfo":{"status":"ok","timestamp":1696982643924,"user_tz":-540,"elapsed":894,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"4d793e79-b2f6-45ec-c9cc-9bf59e750f13"},"execution_count":83,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":1610,"height":813}}}]},{"cell_type":"code","source":["t = [0,1,2,3,4,5,6]\n","y = [1,4,5,8,9,5,3]\n","\n","plt.figure(figsize = (10,6))\n","plt.plot(t,y , color = 'green')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"7MzTOdrGlW1Y","executionInfo":{"status":"ok","timestamp":1696982643925,"user_tz":-540,"elapsed":18,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"f3754383-ac02-4ffe-8d58-14f8091999b9"},"execution_count":84,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":813,"height":505}}}]},{"cell_type":"code","source":["plt.figure(figsize = (10,6))\n","plt.plot(t,y , color = 'green' , ls = '--')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"a2ENj1s3kYI9","executionInfo":{"status":"ok","timestamp":1696982644835,"user_tz":-540,"elapsed":921,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"20e968bb-d207-4f94-9ea5-b327ee8a4bae"},"execution_count":85,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":813,"height":505}}}]},{"cell_type":"code","source":["t = np.array(np.arange(10))\n","y = np.array(np.arange(10,0,-1))\n","\n","plt.scatter(t,y)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":871},"id":"wHajcCfylpyD","executionInfo":{"status":"ok","timestamp":1696982644835,"user_tz":-540,"elapsed":30,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"b7cf6042-7110-456c-a8c0-11d4da1db251"},"execution_count":86,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":543,"height":413}}}]},{"cell_type":"code","source":["plt.scatter(t,y , marker = '>')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":871},"id":"yviGZnzsmngx","executionInfo":{"status":"ok","timestamp":1696982644835,"user_tz":-540,"elapsed":21,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"2db94097-232b-4d4c-fd09-2437cc9d03d7"},"execution_count":87,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":543,"height":413}}}]},{"cell_type":"code","source":["color_map = t\n","plt.scatter(t,np.array([10,9,8,8,7,7,6,6,5,4]) , c = color_map)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"58LRK7xsm6xL","executionInfo":{"status":"ok","timestamp":1696982644835,"user_tz":-540,"elapsed":14,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"68db2dd0-dfde-4cf9-e569-ee5326e8c9db"},"execution_count":88,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":543,"height":413}}}]},{"cell_type":"code","source":["plt.figure(figsize = (10,6))\n","plt.subplot(221)\n","plt.subplot(222)\n","plt.subplot(212)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"75brqiOJnJvX","executionInfo":{"status":"ok","timestamp":1696982645599,"user_tz":-540,"elapsed":773,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"2dc254ce-5f47-46b8-c9ff-49900b1a4270"},"execution_count":89,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 3 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":837,"height":511}}}]},{"cell_type":"code","source":["plt.figure(figsize = (20,6))\n","plt.subplot(411)\n","plt.subplot(423)\n","plt.subplot(424)\n","plt.subplot(413)\n","plt.subplot(414)\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"TPswrlOspAqy","executionInfo":{"status":"ok","timestamp":1696982646465,"user_tz":-540,"elapsed":886,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"ab99449c-75aa-43b6-ad0e-14650b7ff619"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x600 with 5 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":1990,"height":589}}}]},{"cell_type":"code","source":["import platform\n","from matplotlib import font_manager , rc\n","\n","plt.rcParams['axes.unicode_minus'] = False\n","\n","if platform.system() == 'Darwin':\n","  rc('font' , family = 'AppleGothic')\n","elif platform.system() == 'Windows':\n","  path = 'C:/Windows/Fonts/malgun.ttf'\n","  font_name = font_manager.FontProperties(fname = path).get_name()\n","  rc('font' , family = font_name)\n","else:\n","  print('모름')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zek5r6CGpe9d","executionInfo":{"status":"ok","timestamp":1696982646465,"user_tz":-540,"elapsed":35,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"466c2d4f-e0c7-432f-d983-133a354483c0"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stdout","text":["모름\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"U_Zd4UuJ8jCY","executionInfo":{"status":"ok","timestamp":1696982646465,"user_tz":-540,"elapsed":31,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":91,"outputs":[]},{"cell_type":"code","source":["data_result.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"GsJqg74Wr3IH","executionInfo":{"status":"ok","timestamp":1696982646465,"user_tz":-540,"elapsed":30,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"1b96effc-59a3-4271-f556-9cb5b90e0a48"},"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       소계       최근증가율       인구수       한국인      외국인      고령자     외국인비율  \\\n","구별                                                                      \n","강남구  2780  150.619195  570500.0  565550.0   4950.0  63167.0  0.867660   \n","강동구   773  166.490765  453233.0  449019.0   4214.0  54622.0  0.929765   \n","강북구   748  125.203252  330192.0  326686.0   3506.0  54813.0  1.061806   \n","강서구   884  134.793814  603772.0  597248.0   6524.0  72548.0  1.080540   \n","관악구  1496  149.290780  525515.0  507203.0  18312.0  68082.0  3.484582   \n","\n","         고령자비율  \n","구별              \n","강남구  11.072217  \n","강동구  12.051638  \n","강북구  16.600342  \n","강서구  12.015794  \n","관악구  12.955291  "],"text/html":["\n","  <div id=\"df-8133c5d1-9ed4-411b-9c1b-b1549db072b6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>소계</th>\n","      <th>최근증가율</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>강남구</th>\n","      <td>2780</td>\n","      <td>150.619195</td>\n","      <td>570500.0</td>\n","      <td>565550.0</td>\n","      <td>4950.0</td>\n","      <td>63167.0</td>\n","      <td>0.867660</td>\n","      <td>11.072217</td>\n","    </tr>\n","    <tr>\n","      <th>강동구</th>\n","      <td>773</td>\n","      <td>166.490765</td>\n","      <td>453233.0</td>\n","      <td>449019.0</td>\n","      <td>4214.0</td>\n","      <td>54622.0</td>\n","      <td>0.929765</td>\n","      <td>12.051638</td>\n","    </tr>\n","    <tr>\n","      <th>강북구</th>\n","      <td>748</td>\n","      <td>125.203252</td>\n","      <td>330192.0</td>\n","      <td>326686.0</td>\n","      <td>3506.0</td>\n","      <td>54813.0</td>\n","      <td>1.061806</td>\n","      <td>16.600342</td>\n","    </tr>\n","    <tr>\n","      <th>강서구</th>\n","      <td>884</td>\n","      <td>134.793814</td>\n","      <td>603772.0</td>\n","      <td>597248.0</td>\n","      <td>6524.0</td>\n","      <td>72548.0</td>\n","      <td>1.080540</td>\n","      <td>12.015794</td>\n","    </tr>\n","    <tr>\n","      <th>관악구</th>\n","      <td>1496</td>\n","      <td>149.290780</td>\n","      <td>525515.0</td>\n","      <td>507203.0</td>\n","      <td>18312.0</td>\n","      <td>68082.0</td>\n","      <td>3.484582</td>\n","      <td>12.955291</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8133c5d1-9ed4-411b-9c1b-b1549db072b6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8133c5d1-9ed4-411b-9c1b-b1549db072b6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8133c5d1-9ed4-411b-9c1b-b1549db072b6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fc8f5e14-0a53-471b-a68d-1c7263a39483\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc8f5e14-0a53-471b-a68d-1c7263a39483')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fc8f5e14-0a53-471b-a68d-1c7263a39483 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["plt.figure(figsize = (10,6))\n","data_result['소계'].sort_values().plot(kind = 'barh' , grid = True , figsize = (10,10))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"uDikyBnpsDRN","executionInfo":{"status":"ok","timestamp":1696982647155,"user_tz":-540,"elapsed":718,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"16246094-3dea-4e80-b90e-888fab1ed021"},"execution_count":93,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 48393 (\\N{HANGUL SYLLABLE BONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 47560 (\\N{HANGUL SYLLABLE MA}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49569 (\\N{HANGUL SYLLABLE SONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54028 (\\N{HANGUL SYLLABLE PA}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51473 (\\N{HANGUL SYLLABLE JUNG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46993 (\\N{HANGUL SYLLABLE RANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51652 (\\N{HANGUL SYLLABLE JIN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46041 (\\N{HANGUL SYLLABLE DONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50689 (\\N{HANGUL SYLLABLE YEONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46321 (\\N{HANGUL SYLLABLE DEUNG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 47928 (\\N{HANGUL SYLLABLE MUN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 47196 (\\N{HANGUL SYLLABLE RO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44552 (\\N{HANGUL SYLLABLE GEUM}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49457 (\\N{HANGUL SYLLABLE SEONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51089 (\\N{HANGUL SYLLABLE JAG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 45432 (\\N{HANGUL SYLLABLE NO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44288 (\\N{HANGUL SYLLABLE GWAN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50501 (\\N{HANGUL SYLLABLE AG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50857 (\\N{HANGUL SYLLABLE YONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51008 (\\N{HANGUL SYLLABLE EUN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 52488 (\\N{HANGUL SYLLABLE CO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50577 (\\N{HANGUL SYLLABLE YANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":857,"height":813}}}]},{"cell_type":"code","source":["plt.plot(data_result['소계'].sort_values() , data_result.index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"bBwYKzphsegi","executionInfo":{"status":"ok","timestamp":1696982647920,"user_tz":-540,"elapsed":792,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"22fec12c-4714-439f-9480-bb898a48341e"},"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f14c1d20640>]"]},"metadata":{},"execution_count":94},{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 46041 (\\N{HANGUL SYLLABLE DONG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 44288 (\\N{HANGUL SYLLABLE GWAN}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 50501 (\\N{HANGUL SYLLABLE AG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 51652 (\\N{HANGUL SYLLABLE JIN}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 47196 (\\N{HANGUL SYLLABLE RO}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 44552 (\\N{HANGUL SYLLABLE GEUM}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 45432 (\\N{HANGUL SYLLABLE NO}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 48393 (\\N{HANGUL SYLLABLE BONG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 47928 (\\N{HANGUL SYLLABLE MUN}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 51089 (\\N{HANGUL SYLLABLE JAG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 47560 (\\N{HANGUL SYLLABLE MA}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 52488 (\\N{HANGUL SYLLABLE CO}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 49457 (\\N{HANGUL SYLLABLE SEONG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 49569 (\\N{HANGUL SYLLABLE SONG}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 54028 (\\N{HANGUL SYLLABLE PA}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 50577 (\\N{HANGUL SYLLABLE YANG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 50689 (\\N{HANGUL SYLLABLE YEONG}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 46321 (\\N{HANGUL SYLLABLE DEUNG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 50857 (\\N{HANGUL SYLLABLE YONG}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 51008 (\\N{HANGUL SYLLABLE EUN}) missing from current font.\n","  func(*args, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 51473 (\\N{HANGUL SYLLABLE JUNG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/events.py:89: UserWarning: Glyph 46993 (\\N{HANGUL SYLLABLE RANG}) missing from current font.\n","  func(*args, **kwargs)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":558,"height":413}}}]},{"cell_type":"code","source":["data_result['CCTV비율'] = ((data_result['소계'])/data_result['인구수']) * 100\n","data_result.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"9TWo1buntRx2","executionInfo":{"status":"ok","timestamp":1696982647921,"user_tz":-540,"elapsed":20,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"35a2841b-ad78-4247-ce29-ad2ba1ddab50"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       소계       최근증가율       인구수       한국인      외국인      고령자     외국인비율  \\\n","구별                                                                      \n","강남구  2780  150.619195  570500.0  565550.0   4950.0  63167.0  0.867660   \n","강동구   773  166.490765  453233.0  449019.0   4214.0  54622.0  0.929765   \n","강북구   748  125.203252  330192.0  326686.0   3506.0  54813.0  1.061806   \n","강서구   884  134.793814  603772.0  597248.0   6524.0  72548.0  1.080540   \n","관악구  1496  149.290780  525515.0  507203.0  18312.0  68082.0  3.484582   \n","\n","         고령자비율    CCTV비율  \n","구별                        \n","강남구  11.072217  0.487292  \n","강동구  12.051638  0.170552  \n","강북구  16.600342  0.226535  \n","강서구  12.015794  0.146413  \n","관악구  12.955291  0.284673  "],"text/html":["\n","  <div id=\"df-8f4e5f5d-e9ce-434a-8035-6a2f31908344\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>소계</th>\n","      <th>최근증가율</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","      <th>CCTV비율</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>강남구</th>\n","      <td>2780</td>\n","      <td>150.619195</td>\n","      <td>570500.0</td>\n","      <td>565550.0</td>\n","      <td>4950.0</td>\n","      <td>63167.0</td>\n","      <td>0.867660</td>\n","      <td>11.072217</td>\n","      <td>0.487292</td>\n","    </tr>\n","    <tr>\n","      <th>강동구</th>\n","      <td>773</td>\n","      <td>166.490765</td>\n","      <td>453233.0</td>\n","      <td>449019.0</td>\n","      <td>4214.0</td>\n","      <td>54622.0</td>\n","      <td>0.929765</td>\n","      <td>12.051638</td>\n","      <td>0.170552</td>\n","    </tr>\n","    <tr>\n","      <th>강북구</th>\n","      <td>748</td>\n","      <td>125.203252</td>\n","      <td>330192.0</td>\n","      <td>326686.0</td>\n","      <td>3506.0</td>\n","      <td>54813.0</td>\n","      <td>1.061806</td>\n","      <td>16.600342</td>\n","      <td>0.226535</td>\n","    </tr>\n","    <tr>\n","      <th>강서구</th>\n","      <td>884</td>\n","      <td>134.793814</td>\n","      <td>603772.0</td>\n","      <td>597248.0</td>\n","      <td>6524.0</td>\n","      <td>72548.0</td>\n","      <td>1.080540</td>\n","      <td>12.015794</td>\n","      <td>0.146413</td>\n","    </tr>\n","    <tr>\n","      <th>관악구</th>\n","      <td>1496</td>\n","      <td>149.290780</td>\n","      <td>525515.0</td>\n","      <td>507203.0</td>\n","      <td>18312.0</td>\n","      <td>68082.0</td>\n","      <td>3.484582</td>\n","      <td>12.955291</td>\n","      <td>0.284673</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f4e5f5d-e9ce-434a-8035-6a2f31908344')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8f4e5f5d-e9ce-434a-8035-6a2f31908344 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8f4e5f5d-e9ce-434a-8035-6a2f31908344');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-497ee59a-8b85-46db-be02-df2b91795f61\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-497ee59a-8b85-46db-be02-df2b91795f61')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-497ee59a-8b85-46db-be02-df2b91795f61 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":95}]},{"cell_type":"code","source":["plt.figure(figsize = (10,20))\n","plt.subplot(121)\n","data_result['CCTV비율'].sort_values().plot(kind = 'barh' , grid = True , figsize = (10,10))\n","plt.subplot(122)\n","data_result['소계'].sort_values().plot(kind = 'barh' , grid = True , figsize = (10,10))\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"IfUztypa8eBD","executionInfo":{"status":"ok","timestamp":1696982648712,"user_tz":-540,"elapsed":810,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"0af72465-163b-4aeb-ad6f-08837374098d"},"execution_count":96,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 49569 (\\N{HANGUL SYLLABLE SONG}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 54028 (\\N{HANGUL SYLLABLE PA}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 48393 (\\N{HANGUL SYLLABLE BONG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 47560 (\\N{HANGUL SYLLABLE MA}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 51473 (\\N{HANGUL SYLLABLE JUNG}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 46993 (\\N{HANGUL SYLLABLE RANG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 46041 (\\N{HANGUL SYLLABLE DONG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 51652 (\\N{HANGUL SYLLABLE JIN}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 45432 (\\N{HANGUL SYLLABLE NO}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 50689 (\\N{HANGUL SYLLABLE YEONG}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 46321 (\\N{HANGUL SYLLABLE DEUNG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 51089 (\\N{HANGUL SYLLABLE JAG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 44288 (\\N{HANGUL SYLLABLE GWAN}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 50501 (\\N{HANGUL SYLLABLE AG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 47928 (\\N{HANGUL SYLLABLE MUN}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 49457 (\\N{HANGUL SYLLABLE SEONG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 47196 (\\N{HANGUL SYLLABLE RO}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 51008 (\\N{HANGUL SYLLABLE EUN}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 44552 (\\N{HANGUL SYLLABLE GEUM}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 50577 (\\N{HANGUL SYLLABLE YANG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 52488 (\\N{HANGUL SYLLABLE CO}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 50857 (\\N{HANGUL SYLLABLE YONG}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-96-7b1323c261e6>:6: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49569 (\\N{HANGUL SYLLABLE SONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54028 (\\N{HANGUL SYLLABLE PA}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 48393 (\\N{HANGUL SYLLABLE BONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 47560 (\\N{HANGUL SYLLABLE MA}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51473 (\\N{HANGUL SYLLABLE JUNG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46993 (\\N{HANGUL SYLLABLE RANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46041 (\\N{HANGUL SYLLABLE DONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51652 (\\N{HANGUL SYLLABLE JIN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 45432 (\\N{HANGUL SYLLABLE NO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50689 (\\N{HANGUL SYLLABLE YEONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46321 (\\N{HANGUL SYLLABLE DEUNG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51089 (\\N{HANGUL SYLLABLE JAG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44288 (\\N{HANGUL SYLLABLE GWAN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50501 (\\N{HANGUL SYLLABLE AG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 47928 (\\N{HANGUL SYLLABLE MUN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49457 (\\N{HANGUL SYLLABLE SEONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 47196 (\\N{HANGUL SYLLABLE RO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51008 (\\N{HANGUL SYLLABLE EUN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44552 (\\N{HANGUL SYLLABLE GEUM}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50577 (\\N{HANGUL SYLLABLE YANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 52488 (\\N{HANGUL SYLLABLE CO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50857 (\\N{HANGUL SYLLABLE YONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":989,"height":990}}}]},{"cell_type":"code","source":["# CCTV 설치 대수와 인구수의 분석 산점도\n","plt.figure(figsize = (10 , 10))\n","plt.scatter(data_result['인구수'] , data_result['소계'] , s = 50)\n","plt.xlabel('인구수')\n","plt.ylabel('CCTV 갯수' , rotation = 0)\n","plt.tight_layout()\n","plt.grid()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"iZI-xbyK-rba","executionInfo":{"status":"ok","timestamp":1696982649698,"user_tz":-540,"elapsed":996,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"33b7539d-4746-461f-964b-b44dc53828cf"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-97-5597b6f1b1f5>:6: UserWarning: Glyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-97-5597b6f1b1f5>:6: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-97-5597b6f1b1f5>:6: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-97-5597b6f1b1f5>:6: UserWarning: Glyph 44079 (\\N{HANGUL SYLLABLE GAES}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44079 (\\N{HANGUL SYLLABLE GAES}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":990,"height":989}}}]},{"cell_type":"code","source":["t = np.arange(0,10,0.01)\n","y = 3 * t + 5"],"metadata":{"id":"oXk3Fo9t_2-b","executionInfo":{"status":"ok","timestamp":1696982649698,"user_tz":-540,"elapsed":26,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":98,"outputs":[]},{"cell_type":"code","source":["y_noise = y + np.random.randn(len(y))\n","\n","plt.scatter(t,y_noise)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"gOWMu0z4Ci6M","executionInfo":{"status":"ok","timestamp":1696982649698,"user_tz":-540,"elapsed":25,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"0612c32e-ebbb-4055-f1c1-3e4f89f7dfcb"},"execution_count":99,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":543,"height":413}}}]},{"cell_type":"code","source":["# np.polyfit(x , y , 1) 함수 : 기울기와 절편을 반환\n","a , b = np.polyfit(t , y_noise , 1)\n","a , b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m8-wR78VClM4","executionInfo":{"status":"ok","timestamp":1696982649698,"user_tz":-540,"elapsed":19,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"6ea4e998-b18c-4da8-8a88-4eb0f32f4a94"},"execution_count":100,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2.9921039058236514, 4.996336449908109)"]},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["plt.scatter(t,y_noise , label = '원본' , color = 'y')\n","plt.plot(t,a*t + b , label = '회귀선' , color = 'r')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"9tIbD7SCEC3u","executionInfo":{"status":"ok","timestamp":1696982649699,"user_tz":-540,"elapsed":18,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"e56822da-f628-4a38-fdc1-3fd224d19211"},"execution_count":101,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 48376 (\\N{HANGUL SYLLABLE BON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54924 (\\N{HANGUL SYLLABLE HOE}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44480 (\\N{HANGUL SYLLABLE GWI}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49440 (\\N{HANGUL SYLLABLE SEON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":543,"height":413}}}]},{"cell_type":"code","source":["a , b = np.polyfit(data_result['인구수'] , data_result['소계'] , 1)\n","a , b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EBpDHgL1E38R","executionInfo":{"status":"ok","timestamp":1696982649699,"user_tz":-540,"elapsed":11,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"7da25e13-a20f-4c5c-861b-f8c44264b434"},"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.0013091641512439564, 645.0664965847212)"]},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["fp1 = np.polyfit(data_result['인구수'] , data_result['소계'] , 1)"],"metadata":{"id":"yo2jH9o8Grpj","executionInfo":{"status":"ok","timestamp":1696982650396,"user_tz":-540,"elapsed":707,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":103,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"SZVesbHxHe33","executionInfo":{"status":"ok","timestamp":1696982650397,"user_tz":-540,"elapsed":28,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":103,"outputs":[]},{"cell_type":"code","source":["f1 = np.poly1d(fp1)\n","\n","data_result['오차'] = np.abs(data_result['소계'] - f1(data_result['인구수']))\n","df_sort = data_result.sort_values('오차' , ascending = False)\n","df_sort.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"CE566x5WG-nl","executionInfo":{"status":"ok","timestamp":1696982650397,"user_tz":-540,"elapsed":28,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"0823b2eb-4525-47c5-9ea9-7d346a3afd15"},"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       소계       최근증가율       인구수       한국인      외국인      고령자     외국인비율  \\\n","구별                                                                      \n","강남구  2780  150.619195  570500.0  565550.0   4950.0  63167.0  0.867660   \n","송파구   618  104.347826  667483.0  660584.0   6899.0  72506.0  1.033584   \n","양천구  2034   34.671731  479978.0  475949.0   4029.0  52975.0  0.839413   \n","서초구  1930   63.371266  450310.0  445994.0   4316.0  51733.0  0.958451   \n","용산구  1624   53.216374  244203.0  229456.0  14747.0  36231.0  6.038828   \n","\n","         고령자비율    CCTV비율           오차  \n","구별                                     \n","강남구  11.072217  0.487292  1388.055355  \n","송파구  10.862599  0.092587   900.911312  \n","양천구  11.036964  0.423769   760.563512  \n","서초구  11.488308  0.428594   695.403794  \n","용산구  14.836427  0.665020   659.231690  "],"text/html":["\n","  <div id=\"df-5ba16db8-7b97-47d5-8e48-dcafe3396946\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>소계</th>\n","      <th>최근증가율</th>\n","      <th>인구수</th>\n","      <th>한국인</th>\n","      <th>외국인</th>\n","      <th>고령자</th>\n","      <th>외국인비율</th>\n","      <th>고령자비율</th>\n","      <th>CCTV비율</th>\n","      <th>오차</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>강남구</th>\n","      <td>2780</td>\n","      <td>150.619195</td>\n","      <td>570500.0</td>\n","      <td>565550.0</td>\n","      <td>4950.0</td>\n","      <td>63167.0</td>\n","      <td>0.867660</td>\n","      <td>11.072217</td>\n","      <td>0.487292</td>\n","      <td>1388.055355</td>\n","    </tr>\n","    <tr>\n","      <th>송파구</th>\n","      <td>618</td>\n","      <td>104.347826</td>\n","      <td>667483.0</td>\n","      <td>660584.0</td>\n","      <td>6899.0</td>\n","      <td>72506.0</td>\n","      <td>1.033584</td>\n","      <td>10.862599</td>\n","      <td>0.092587</td>\n","      <td>900.911312</td>\n","    </tr>\n","    <tr>\n","      <th>양천구</th>\n","      <td>2034</td>\n","      <td>34.671731</td>\n","      <td>479978.0</td>\n","      <td>475949.0</td>\n","      <td>4029.0</td>\n","      <td>52975.0</td>\n","      <td>0.839413</td>\n","      <td>11.036964</td>\n","      <td>0.423769</td>\n","      <td>760.563512</td>\n","    </tr>\n","    <tr>\n","      <th>서초구</th>\n","      <td>1930</td>\n","      <td>63.371266</td>\n","      <td>450310.0</td>\n","      <td>445994.0</td>\n","      <td>4316.0</td>\n","      <td>51733.0</td>\n","      <td>0.958451</td>\n","      <td>11.488308</td>\n","      <td>0.428594</td>\n","      <td>695.403794</td>\n","    </tr>\n","    <tr>\n","      <th>용산구</th>\n","      <td>1624</td>\n","      <td>53.216374</td>\n","      <td>244203.0</td>\n","      <td>229456.0</td>\n","      <td>14747.0</td>\n","      <td>36231.0</td>\n","      <td>6.038828</td>\n","      <td>14.836427</td>\n","      <td>0.665020</td>\n","      <td>659.231690</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ba16db8-7b97-47d5-8e48-dcafe3396946')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5ba16db8-7b97-47d5-8e48-dcafe3396946 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5ba16db8-7b97-47d5-8e48-dcafe3396946');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a64d0fd-cdad-4fbc-b35a-b9c44dfaf3fe\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a64d0fd-cdad-4fbc-b35a-b9c44dfaf3fe')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a64d0fd-cdad-4fbc-b35a-b9c44dfaf3fe button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["plt.figure(figsize = (5,5))\n","plt.scatter(data_result['인구수'] , data_result['소계'] , s = 50 , label = '원본' , color = 'y')\n","plt.xlabel('인구수')\n","plt.ylabel('CCTV 갯수' , rotation = 0)\n","plt.tight_layout()\n","plt.grid()\n","plt.plot(data_result['인구수'] , data_result['인구수'] * a + b , label = '회귀선' , color = 'r')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"2FI2a3zGEegS","executionInfo":{"status":"ok","timestamp":1696982650397,"user_tz":-540,"elapsed":27,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"dc845114-2b6d-4cbb-c64c-f7cc48404843"},"execution_count":105,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-105-ce2d544be4cb>:5: UserWarning: Glyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-105-ce2d544be4cb>:5: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-105-ce2d544be4cb>:5: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-105-ce2d544be4cb>:5: UserWarning: Glyph 44079 (\\N{HANGUL SYLLABLE GAES}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44079 (\\N{HANGUL SYLLABLE GAES}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 48376 (\\N{HANGUL SYLLABLE BON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54924 (\\N{HANGUL SYLLABLE HOE}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44480 (\\N{HANGUL SYLLABLE GWI}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49440 (\\N{HANGUL SYLLABLE SEON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":490,"height":490}}}]},{"cell_type":"code","source":["plt.figure(figsize = (9,9))\n","plt.scatter(data_result['인구수'] , data_result['소계'] , s = 50 , label = '원본' , c = data_result['오차'])\n","plt.xlabel('인구수')\n","plt.ylabel('CCTV 갯수' , rotation = 0)\n","plt.tight_layout()\n","plt.grid()\n","plt.plot(data_result['인구수'] , data_result['인구수'] * a + b , label = '회귀선' , color = 'r')\n","plt.legend()\n","for n in range(10):\n","  plt.text(df_sort['인구수'][n]*1.02 , df_sort['소계'][n]*0.98 , df_sort.index[n] , fontsize = 15)\n","plt.colorbar()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"YeckGuPjFSfo","executionInfo":{"status":"ok","timestamp":1696982651327,"user_tz":-540,"elapsed":944,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"6e9703b4-9aae-4921-ecdb-6f1a9a3fcbc7"},"execution_count":106,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-106-5262a7952cd8>:5: UserWarning: Glyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-106-5262a7952cd8>:5: UserWarning: Glyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from current font.\n","  plt.tight_layout()\n","<ipython-input-106-5262a7952cd8>:5: UserWarning: Glyph 49688 (\\N{HANGUL SYLLABLE SU}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","<ipython-input-106-5262a7952cd8>:5: UserWarning: Glyph 44079 (\\N{HANGUL SYLLABLE GAES}) missing from current font.\n","  plt.tight_layout()\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49569 (\\N{HANGUL SYLLABLE SONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54028 (\\N{HANGUL SYLLABLE PA}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50577 (\\N{HANGUL SYLLABLE YANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 52488 (\\N{HANGUL SYLLABLE CO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50857 (\\N{HANGUL SYLLABLE YONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 48393 (\\N{HANGUL SYLLABLE BONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 47560 (\\N{HANGUL SYLLABLE MA}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54252 (\\N{HANGUL SYLLABLE PO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51008 (\\N{HANGUL SYLLABLE EUN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 51473 (\\N{HANGUL SYLLABLE JUNG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46993 (\\N{HANGUL SYLLABLE RANG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 900x900 with 2 Axes>"],"image/png":"\n"},"metadata":{"image/png":{"width":858,"height":889}}}]},{"cell_type":"code","source":["df_sort['인구수'][0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ujvZPLgbyTP","executionInfo":{"status":"ok","timestamp":1696982651327,"user_tz":-540,"elapsed":10,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"b034cfd4-c353-41b9-974c-ce48834d9b7e"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["570500.0"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["crime_in_Seoul = pd.read_csv('crime_in_Seoul.csv' , thousands = ',' , encoding = 'euc-kr')\n","crime_in_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"m04Fo6IdcSbG","executionInfo":{"status":"ok","timestamp":1696982651327,"user_tz":-540,"elapsed":8,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"00a68025-f86e-42a2-8f60-da14c1b9ff11"},"execution_count":108,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    관서명  살인 발생  살인 검거  강도 발생  강도 검거  강간 발생  강간 검거  절도 발생  절도 검거  폭력 발생  폭력 검거\n","0   중부서      2      2      3      2    105     65   1395    477   1355   1170\n","1   종로서      3      3      6      5    115     98   1070    413   1278   1070\n","2  남대문서      1      0      6      4     65     46   1153    382    869    794\n","3  서대문서      2      2      5      4    154    124   1812    738   2056   1711\n","4   혜화서      3      2      5      4     96     63   1114    424   1015    861"],"text/html":["\n","  <div id=\"df-a0a8f2d7-65b9-4ec5-918e-1488509b4c07\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>관서명</th>\n","      <th>살인 발생</th>\n","      <th>살인 검거</th>\n","      <th>강도 발생</th>\n","      <th>강도 검거</th>\n","      <th>강간 발생</th>\n","      <th>강간 검거</th>\n","      <th>절도 발생</th>\n","      <th>절도 검거</th>\n","      <th>폭력 발생</th>\n","      <th>폭력 검거</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>중부서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>105</td>\n","      <td>65</td>\n","      <td>1395</td>\n","      <td>477</td>\n","      <td>1355</td>\n","      <td>1170</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>종로서</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>115</td>\n","      <td>98</td>\n","      <td>1070</td>\n","      <td>413</td>\n","      <td>1278</td>\n","      <td>1070</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>남대문서</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>65</td>\n","      <td>46</td>\n","      <td>1153</td>\n","      <td>382</td>\n","      <td>869</td>\n","      <td>794</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>서대문서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>154</td>\n","      <td>124</td>\n","      <td>1812</td>\n","      <td>738</td>\n","      <td>2056</td>\n","      <td>1711</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>혜화서</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>96</td>\n","      <td>63</td>\n","      <td>1114</td>\n","      <td>424</td>\n","      <td>1015</td>\n","      <td>861</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0a8f2d7-65b9-4ec5-918e-1488509b4c07')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a0a8f2d7-65b9-4ec5-918e-1488509b4c07 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a0a8f2d7-65b9-4ec5-918e-1488509b4c07');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dcadf93c-ca48-4b0c-bf9f-99ded98a9590\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dcadf93c-ca48-4b0c-bf9f-99ded98a9590')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dcadf93c-ca48-4b0c-bf9f-99ded98a9590 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["crime_in_Seoul['관서명']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lfG2F8gBfA1N","executionInfo":{"status":"ok","timestamp":1696982651327,"user_tz":-540,"elapsed":7,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"0ee58832-48d3-42fd-eb7a-ea48eae7fd9a"},"execution_count":109,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      중부서\n","1      종로서\n","2     남대문서\n","3     서대문서\n","4      혜화서\n","5      용산서\n","6      성북서\n","7     동대문서\n","8      마포서\n","9     영등포서\n","10     성동서\n","11     동작서\n","12     광진서\n","13     서부서\n","14     강북서\n","15     금천서\n","16     중랑서\n","17     강남서\n","18     관악서\n","19     강서서\n","20     강동서\n","21     종암서\n","22     구로서\n","23     서초서\n","24     양천서\n","25     송파서\n","26     노원서\n","27     방배서\n","28     은평서\n","29     도봉서\n","30     수서서\n","Name: 관서명, dtype: object"]},"metadata":{},"execution_count":109}]},{"cell_type":"markdown","source":["- AIzaSyCVl274DWadd4ZPck1ePV2_-DKLTtmj70Y"],"metadata":{"id":"IwDlqKzGgAAI"}},{"cell_type":"code","source":["!pip install googlemaps"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OfSjFE40gB7n","executionInfo":{"status":"ok","timestamp":1696982655487,"user_tz":-540,"elapsed":4165,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"b1b58c1a-e812-45f3-c9c2-16fb7c177189"},"execution_count":110,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting googlemaps\n","  Downloading googlemaps-4.10.0.tar.gz (33 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: requests<3.0,>=2.20.0 in /usr/local/lib/python3.10/dist-packages (from googlemaps) (2.31.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (3.3.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (2.0.6)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (2023.7.22)\n","Building wheels for collected packages: googlemaps\n","  Building wheel for googlemaps (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for googlemaps: filename=googlemaps-4.10.0-py3-none-any.whl size=40713 sha256=41451d709112040c70f77dc41c8b52d634d25e714919b5cf1ee7292542720ef3\n","  Stored in directory: /root/.cache/pip/wheels/17/f8/79/999d5d37118fd35d7219ef57933eb9d09886c4c4503a800f84\n","Successfully built googlemaps\n","Installing collected packages: googlemaps\n","Successfully installed googlemaps-4.10.0\n"]}]},{"cell_type":"code","source":["import googlemaps"],"metadata":{"id":"iXhcpaSXgIJk","executionInfo":{"status":"ok","timestamp":1696982655955,"user_tz":-540,"elapsed":487,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":111,"outputs":[]},{"cell_type":"code","source":["gmaps_key = 'AIzaSyCVl274DWadd4ZPck1ePV2_-DKLTtmj70Y'\n","gmaps = googlemaps.Client(key = gmaps_key)"],"metadata":{"id":"n4KF7ijDgM_9","executionInfo":{"status":"ok","timestamp":1696982655955,"user_tz":-540,"elapsed":8,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":112,"outputs":[]},{"cell_type":"code","source":["gmaps.geocode('서울중부경찰서' , language = 'ko')[0].get('formatted_address')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"hAWw5DP1gTau","executionInfo":{"status":"ok","timestamp":1696982655955,"user_tz":-540,"elapsed":8,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"97207831-489d-4a5a-8d03-517c28449502"},"execution_count":113,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'대한민국 서울특별시 중구 수표로 27'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["station_name = []\n","for i in crime_in_Seoul['관서명'].tolist():\n","  station_name.append('서울'+str(i[:-1]) + '경찰서')\n","station_name"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bEN_j0m_gdgY","executionInfo":{"status":"ok","timestamp":1696982655955,"user_tz":-540,"elapsed":7,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"c16dbe5c-f403-4da9-9eca-120b5b6b415a"},"execution_count":114,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['서울중부경찰서',\n"," '서울종로경찰서',\n"," '서울남대문경찰서',\n"," '서울서대문경찰서',\n"," '서울혜화경찰서',\n"," '서울용산경찰서',\n"," '서울성북경찰서',\n"," '서울동대문경찰서',\n"," '서울마포경찰서',\n"," '서울영등포경찰서',\n"," '서울성동경찰서',\n"," '서울동작경찰서',\n"," '서울광진경찰서',\n"," '서울서부경찰서',\n"," '서울강북경찰서',\n"," '서울금천경찰서',\n"," '서울중랑경찰서',\n"," '서울강남경찰서',\n"," '서울관악경찰서',\n"," '서울강서경찰서',\n"," '서울강동경찰서',\n"," '서울종암경찰서',\n"," '서울구로경찰서',\n"," '서울서초경찰서',\n"," '서울양천경찰서',\n"," '서울송파경찰서',\n"," '서울노원경찰서',\n"," '서울방배경찰서',\n"," '서울은평경찰서',\n"," '서울도봉경찰서',\n"," '서울수서경찰서']"]},"metadata":{},"execution_count":114}]},{"cell_type":"code","source":["station_address = []\n","station_lat = []\n","station_lng = []\n","\n","for i in station_name:\n","  tmp = gmaps.geocode(i , language = 'ko')\n","  station_address.append(tmp[0].get('formatted_address'))\n","\n","  tmp_loc = tmp[0].get('geometry')\n","  station_lat.append(tmp_loc['location']['lat'])\n","  station_lng.append(tmp_loc['location']['lng'])\n","\n","  print(i + '-->' + tmp[0].get('formatted_address'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9aBY8ly2hjFa","executionInfo":{"status":"ok","timestamp":1696982658955,"user_tz":-540,"elapsed":3005,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"865775d7-34b2-461a-8616-424aa1b9e84b"},"execution_count":115,"outputs":[{"output_type":"stream","name":"stdout","text":["서울중부경찰서-->대한민국 서울특별시 중구 수표로 27\n","서울종로경찰서-->대한민국 서울특별시 종로구 인사동5길 41\n","서울남대문경찰서-->대한민국 서울특별시 중구 한강대로 410\n","서울서대문경찰서-->대한민국 서울특별시 서대문구\n","서울혜화경찰서-->대한민국 서울특별시 종로구 창경궁로 112-16\n","서울용산경찰서-->대한민국 서울특별시 용산구 원효로89길 24\n","서울성북경찰서-->대한민국 서울특별시 성북구\n","서울동대문경찰서-->대한민국 서울특별시 동대문구 약령시로21길 29\n","서울마포경찰서-->대한민국 서울특별시\n","서울영등포경찰서-->대한민국 서울특별시 영등포구 국회대로 608\n","서울성동경찰서-->대한민국 서울특별시 성동구\n","서울동작경찰서-->대한민국 서울특별시 동작구\n","서울광진경찰서-->대한민국 서울특별시 광진구 구의동 자양로 167\n","서울서부경찰서-->대한민국 서울특별시 은평구 진흥로 58\n","서울강북경찰서-->대한민국 서울특별시 강북구 오패산로 406\n","서울금천경찰서-->대한민국 서울특별시 금천구\n","서울중랑경찰서-->대한민국 서울특별시 중랑구 묵제2동 249-2\n","서울강남경찰서-->대한민국 서울특별시 강남구 테헤란로114길 11\n","서울관악경찰서-->대한민국 서울특별시\n","서울강서경찰서-->대한민국 서울특별시 양천구 신월동 화곡로 73\n","서울강동경찰서-->대한민국 서울특별시 강동구 성내로 57\n","서울종암경찰서-->대한민국 서울특별시 성북구 월곡제2동 94-5\n","서울구로경찰서-->대한민국 서울특별시 구로구\n","서울서초경찰서-->대한민국 서울특별시 서초구 서초3동 반포대로 179\n","서울양천경찰서-->대한민국 서울특별시 양천구 목동동로 99\n","서울송파경찰서-->대한민국 서울특별시 송파구\n","서울노원경찰서-->대한민국 서울특별시 노원경찰서\n","서울방배경찰서-->대한민국 서울특별시 서초구 방배동\n","서울은평경찰서-->대한민국 서울특별시 은평구\n","서울도봉경찰서-->대한민국 서울특별시 도봉구 노해로 403\n","서울수서경찰서-->대한민국 서울특별시 강남구 개포로 617\n"]}]},{"cell_type":"code","source":["station_address[8] = station_address[8] + ' 마포구'\n","station_address[18] = station_address[18] + ' 관악구'\n","station_address[26] = station_address[26] + ' 노원구'\n","station_address"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nodH9AlQjoBu","executionInfo":{"status":"ok","timestamp":1696982658955,"user_tz":-540,"elapsed":19,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"788ad482-b7cd-4d64-b631-3ff20b217972"},"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['대한민국 서울특별시 중구 수표로 27',\n"," '대한민국 서울특별시 종로구 인사동5길 41',\n"," '대한민국 서울특별시 중구 한강대로 410',\n"," '대한민국 서울특별시 서대문구',\n"," '대한민국 서울특별시 종로구 창경궁로 112-16',\n"," '대한민국 서울특별시 용산구 원효로89길 24',\n"," '대한민국 서울특별시 성북구',\n"," '대한민국 서울특별시 동대문구 약령시로21길 29',\n"," '대한민국 서울특별시 마포구',\n"," '대한민국 서울특별시 영등포구 국회대로 608',\n"," '대한민국 서울특별시 성동구',\n"," '대한민국 서울특별시 동작구',\n"," '대한민국 서울특별시 광진구 구의동 자양로 167',\n"," '대한민국 서울특별시 은평구 진흥로 58',\n"," '대한민국 서울특별시 강북구 오패산로 406',\n"," '대한민국 서울특별시 금천구',\n"," '대한민국 서울특별시 중랑구 묵제2동 249-2',\n"," '대한민국 서울특별시 강남구 테헤란로114길 11',\n"," '대한민국 서울특별시 관악구',\n"," '대한민국 서울특별시 양천구 신월동 화곡로 73',\n"," '대한민국 서울특별시 강동구 성내로 57',\n"," '대한민국 서울특별시 성북구 월곡제2동 94-5',\n"," '대한민국 서울특별시 구로구',\n"," '대한민국 서울특별시 서초구 서초3동 반포대로 179',\n"," '대한민국 서울특별시 양천구 목동동로 99',\n"," '대한민국 서울특별시 송파구',\n"," '대한민국 서울특별시 노원경찰서 노원구',\n"," '대한민국 서울특별시 서초구 방배동',\n"," '대한민국 서울특별시 은평구',\n"," '대한민국 서울특별시 도봉구 노해로 403',\n"," '대한민국 서울특별시 강남구 개포로 617']"]},"metadata":{},"execution_count":116}]},{"cell_type":"code","source":["result = []\n","for i in station_address:\n","  for j in i.split():\n","    if j[-1] == '구':\n","      result.append(j)\n","result\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iNGtJcabkhJI","executionInfo":{"status":"ok","timestamp":1696982658955,"user_tz":-540,"elapsed":15,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"d88a96ba-91b8-4112-88c9-a7fd9f2a21b9"},"execution_count":117,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['중구',\n"," '종로구',\n"," '중구',\n"," '서대문구',\n"," '종로구',\n"," '용산구',\n"," '성북구',\n"," '동대문구',\n"," '마포구',\n"," '영등포구',\n"," '성동구',\n"," '동작구',\n"," '광진구',\n"," '은평구',\n"," '강북구',\n"," '금천구',\n"," '중랑구',\n"," '강남구',\n"," '관악구',\n"," '양천구',\n"," '강동구',\n"," '성북구',\n"," '구로구',\n"," '서초구',\n"," '양천구',\n"," '송파구',\n"," '노원구',\n"," '서초구',\n"," '은평구',\n"," '도봉구',\n"," '강남구']"]},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["crime_in_Seoul['구별'] = result\n","crime_in_Seoul"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"-IgBpAy4l25o","executionInfo":{"status":"ok","timestamp":1696982658955,"user_tz":-540,"elapsed":11,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"a6fdf536-019c-4208-afa0-7ffce3cb8f16"},"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     관서명  살인 발생  살인 검거  강도 발생  강도 검거  강간 발생  강간 검거  절도 발생  절도 검거  폭력 발생  \\\n","0    중부서      2      2      3      2    105     65   1395    477   1355   \n","1    종로서      3      3      6      5    115     98   1070    413   1278   \n","2   남대문서      1      0      6      4     65     46   1153    382    869   \n","3   서대문서      2      2      5      4    154    124   1812    738   2056   \n","4    혜화서      3      2      5      4     96     63   1114    424   1015   \n","5    용산서      5      5     14     14    194    173   1557    587   2050   \n","6    성북서      2      2      2      1     86     71    953    409   1194   \n","7   동대문서      5      5     13     13    173    146   1981    814   2548   \n","8    마포서      8      8     14     10    294    247   2555    813   2983   \n","9   영등포서     14     12     22     20    295    183   2964    978   3572   \n","10   성동서      4      4      9      8    126    119   1607    597   1612   \n","11   동작서      5      5      9      5    285    139   1865    661   1910   \n","12   광진서      4      4     14     26    240    220   3026   1277   2625   \n","13   서부서      2      2      2      1     70     59    819    293   1192   \n","14   강북서      7      8     14     13    153    126   1434    618   2649   \n","15   금천서      3      4      6      6    151    122   1567    888   2054   \n","16   중랑서     13     12     11      9    187    148   2135    829   2847   \n","17   강남서      3      3     15     12    300    225   2411    984   2465   \n","18   관악서      9      8     12     14    320    221   2706    827   3298   \n","19   강서서      7      8     13     13    262    191   2096   1260   3207   \n","20   강동서      4      3      6      8    156    123   2366    789   2712   \n","21   종암서      3      3      3      3     64     53    832    332   1015   \n","22   구로서      8      6     15     11    281    164   2335    889   3007   \n","23   서초서      7      4      8      5    334    193   1982    905   1852   \n","24   양천서      3      5      6      3    120    105   1890    672   2509   \n","25   송파서     11     10     13     10    220    178   3239   1129   3295   \n","26   노원서     10     10      7      7    197    121   2193    801   2723   \n","27   방배서      1      2      1      1     59     56    653    186    547   \n","28   은평서      1      1      7      5     96     82   1095    418   1461   \n","29   도봉서      3      3      9     10    102    106   1063    478   1487   \n","30   수서서     10      7      6      6    149    124   1439    666   1819   \n","\n","    폭력 검거    구별  \n","0    1170    중구  \n","1    1070   종로구  \n","2     794    중구  \n","3    1711  서대문구  \n","4     861   종로구  \n","5    1704   용산구  \n","6    1015   성북구  \n","7    2227  동대문구  \n","8    2519   마포구  \n","9    2961  영등포구  \n","10   1395   성동구  \n","11   1587   동작구  \n","12   2180   광진구  \n","13   1038   은평구  \n","14   2348   강북구  \n","15   1776   금천구  \n","16   2407   중랑구  \n","17   2146   강남구  \n","18   2642   관악구  \n","19   2718   양천구  \n","20   2248   강동구  \n","21    840   성북구  \n","22   2432   구로구  \n","23   1607   서초구  \n","24   2030   양천구  \n","25   2786   송파구  \n","26   2329   노원구  \n","27    491   서초구  \n","28   1268   은평구  \n","29   1303   도봉구  \n","30   1559   강남구  "],"text/html":["\n","  <div id=\"df-68ae67b0-9896-416d-93f4-819456e7f385\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>관서명</th>\n","      <th>살인 발생</th>\n","      <th>살인 검거</th>\n","      <th>강도 발생</th>\n","      <th>강도 검거</th>\n","      <th>강간 발생</th>\n","      <th>강간 검거</th>\n","      <th>절도 발생</th>\n","      <th>절도 검거</th>\n","      <th>폭력 발생</th>\n","      <th>폭력 검거</th>\n","      <th>구별</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>중부서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>105</td>\n","      <td>65</td>\n","      <td>1395</td>\n","      <td>477</td>\n","      <td>1355</td>\n","      <td>1170</td>\n","      <td>중구</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>종로서</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>115</td>\n","      <td>98</td>\n","      <td>1070</td>\n","      <td>413</td>\n","      <td>1278</td>\n","      <td>1070</td>\n","      <td>종로구</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>남대문서</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>65</td>\n","      <td>46</td>\n","      <td>1153</td>\n","      <td>382</td>\n","      <td>869</td>\n","      <td>794</td>\n","      <td>중구</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>서대문서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>154</td>\n","      <td>124</td>\n","      <td>1812</td>\n","      <td>738</td>\n","      <td>2056</td>\n","      <td>1711</td>\n","      <td>서대문구</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>혜화서</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>96</td>\n","      <td>63</td>\n","      <td>1114</td>\n","      <td>424</td>\n","      <td>1015</td>\n","      <td>861</td>\n","      <td>종로구</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>용산서</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>14</td>\n","      <td>14</td>\n","      <td>194</td>\n","      <td>173</td>\n","      <td>1557</td>\n","      <td>587</td>\n","      <td>2050</td>\n","      <td>1704</td>\n","      <td>용산구</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>성북서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>86</td>\n","      <td>71</td>\n","      <td>953</td>\n","      <td>409</td>\n","      <td>1194</td>\n","      <td>1015</td>\n","      <td>성북구</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>동대문서</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>173</td>\n","      <td>146</td>\n","      <td>1981</td>\n","      <td>814</td>\n","      <td>2548</td>\n","      <td>2227</td>\n","      <td>동대문구</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>마포서</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>294</td>\n","      <td>247</td>\n","      <td>2555</td>\n","      <td>813</td>\n","      <td>2983</td>\n","      <td>2519</td>\n","      <td>마포구</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>영등포서</td>\n","      <td>14</td>\n","      <td>12</td>\n","      <td>22</td>\n","      <td>20</td>\n","      <td>295</td>\n","      <td>183</td>\n","      <td>2964</td>\n","      <td>978</td>\n","      <td>3572</td>\n","      <td>2961</td>\n","      <td>영등포구</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>성동서</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>126</td>\n","      <td>119</td>\n","      <td>1607</td>\n","      <td>597</td>\n","      <td>1612</td>\n","      <td>1395</td>\n","      <td>성동구</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>동작서</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>285</td>\n","      <td>139</td>\n","      <td>1865</td>\n","      <td>661</td>\n","      <td>1910</td>\n","      <td>1587</td>\n","      <td>동작구</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>광진서</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>14</td>\n","      <td>26</td>\n","      <td>240</td>\n","      <td>220</td>\n","      <td>3026</td>\n","      <td>1277</td>\n","      <td>2625</td>\n","      <td>2180</td>\n","      <td>광진구</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>서부서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>70</td>\n","      <td>59</td>\n","      <td>819</td>\n","      <td>293</td>\n","      <td>1192</td>\n","      <td>1038</td>\n","      <td>은평구</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>강북서</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>13</td>\n","      <td>153</td>\n","      <td>126</td>\n","      <td>1434</td>\n","      <td>618</td>\n","      <td>2649</td>\n","      <td>2348</td>\n","      <td>강북구</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>금천서</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>151</td>\n","      <td>122</td>\n","      <td>1567</td>\n","      <td>888</td>\n","      <td>2054</td>\n","      <td>1776</td>\n","      <td>금천구</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>중랑서</td>\n","      <td>13</td>\n","      <td>12</td>\n","      <td>11</td>\n","      <td>9</td>\n","      <td>187</td>\n","      <td>148</td>\n","      <td>2135</td>\n","      <td>829</td>\n","      <td>2847</td>\n","      <td>2407</td>\n","      <td>중랑구</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>강남서</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>300</td>\n","      <td>225</td>\n","      <td>2411</td>\n","      <td>984</td>\n","      <td>2465</td>\n","      <td>2146</td>\n","      <td>강남구</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>관악서</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>320</td>\n","      <td>221</td>\n","      <td>2706</td>\n","      <td>827</td>\n","      <td>3298</td>\n","      <td>2642</td>\n","      <td>관악구</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>강서서</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>262</td>\n","      <td>191</td>\n","      <td>2096</td>\n","      <td>1260</td>\n","      <td>3207</td>\n","      <td>2718</td>\n","      <td>양천구</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>강동서</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>156</td>\n","      <td>123</td>\n","      <td>2366</td>\n","      <td>789</td>\n","      <td>2712</td>\n","      <td>2248</td>\n","      <td>강동구</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>종암서</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>64</td>\n","      <td>53</td>\n","      <td>832</td>\n","      <td>332</td>\n","      <td>1015</td>\n","      <td>840</td>\n","      <td>성북구</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>구로서</td>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>15</td>\n","      <td>11</td>\n","      <td>281</td>\n","      <td>164</td>\n","      <td>2335</td>\n","      <td>889</td>\n","      <td>3007</td>\n","      <td>2432</td>\n","      <td>구로구</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>서초서</td>\n","      <td>7</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>334</td>\n","      <td>193</td>\n","      <td>1982</td>\n","      <td>905</td>\n","      <td>1852</td>\n","      <td>1607</td>\n","      <td>서초구</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>양천서</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>120</td>\n","      <td>105</td>\n","      <td>1890</td>\n","      <td>672</td>\n","      <td>2509</td>\n","      <td>2030</td>\n","      <td>양천구</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>송파서</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>10</td>\n","      <td>220</td>\n","      <td>178</td>\n","      <td>3239</td>\n","      <td>1129</td>\n","      <td>3295</td>\n","      <td>2786</td>\n","      <td>송파구</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>노원서</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>197</td>\n","      <td>121</td>\n","      <td>2193</td>\n","      <td>801</td>\n","      <td>2723</td>\n","      <td>2329</td>\n","      <td>노원구</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>방배서</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>59</td>\n","      <td>56</td>\n","      <td>653</td>\n","      <td>186</td>\n","      <td>547</td>\n","      <td>491</td>\n","      <td>서초구</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>은평서</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>96</td>\n","      <td>82</td>\n","      <td>1095</td>\n","      <td>418</td>\n","      <td>1461</td>\n","      <td>1268</td>\n","      <td>은평구</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>도봉서</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>102</td>\n","      <td>106</td>\n","      <td>1063</td>\n","      <td>478</td>\n","      <td>1487</td>\n","      <td>1303</td>\n","      <td>도봉구</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>수서서</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>149</td>\n","      <td>124</td>\n","      <td>1439</td>\n","      <td>666</td>\n","      <td>1819</td>\n","      <td>1559</td>\n","      <td>강남구</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68ae67b0-9896-416d-93f4-819456e7f385')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-68ae67b0-9896-416d-93f4-819456e7f385 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-68ae67b0-9896-416d-93f4-819456e7f385');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-21d47175-a16d-475a-bb30-0da6250ddeca\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-21d47175-a16d-475a-bb30-0da6250ddeca')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-21d47175-a16d-475a-bb30-0da6250ddeca button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":118}]},{"cell_type":"code","source":["df = pd.read_excel('sales-funnel.xlsx')\n","df"],"metadata":{"id":"px59zGkXmXwb","colab":{"base_uri":"https://localhost:8080/","height":582},"executionInfo":{"status":"ok","timestamp":1696982684039,"user_tz":-540,"elapsed":745,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"921c615c-d103-4618-8e52-1da98ef36a1a"},"execution_count":120,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Account                          Name            Rep        Manager  \\\n","0    714466               Trantow-Barrows   Craig Booker   Debra Henley   \n","1    714466               Trantow-Barrows   Craig Booker   Debra Henley   \n","2    714466               Trantow-Barrows   Craig Booker   Debra Henley   \n","3    737550  Fritsch, Russel and Anderson   Craig Booker   Debra Henley   \n","4    146832                  Kiehn-Spinka  Daniel Hilton   Debra Henley   \n","5    218895                     Kulas Inc  Daniel Hilton   Debra Henley   \n","6    218895                     Kulas Inc  Daniel Hilton   Debra Henley   \n","7    412290                 Jerde-Hilpert     John Smith   Debra Henley   \n","8    740150                    Barton LLC     John Smith   Debra Henley   \n","9    141962                    Herman LLC    Cedric Moss  Fred Anderson   \n","10   163416                   Purdy-Kunde    Cedric Moss  Fred Anderson   \n","11   239344                    Stokes LLC    Cedric Moss  Fred Anderson   \n","12   239344                    Stokes LLC    Cedric Moss  Fred Anderson   \n","13   307599   Kassulke, Ondricka and Metz     Wendy Yule  Fred Anderson   \n","14   688981                   Keeling LLC     Wendy Yule  Fred Anderson   \n","15   729833                     Koepp Ltd     Wendy Yule  Fred Anderson   \n","16   729833                     Koepp Ltd     Wendy Yule  Fred Anderson   \n","\n","        Product  Quantity   Price     Status  \n","0           CPU         1   30000  presented  \n","1      Software         1   10000  presented  \n","2   Maintenance         2    5000    pending  \n","3           CPU         1   35000   declined  \n","4           CPU         2   65000        won  \n","5           CPU         2   40000    pending  \n","6      Software         1   10000  presented  \n","7   Maintenance         2    5000    pending  \n","8           CPU         1   35000   declined  \n","9           CPU         2   65000        won  \n","10          CPU         1   30000  presented  \n","11  Maintenance         1    5000    pending  \n","12     Software         1   10000  presented  \n","13  Maintenance         3    7000        won  \n","14          CPU         5  100000        won  \n","15          CPU         2   65000   declined  \n","16      Monitor         2    5000  presented  "],"text/html":["\n","  <div id=\"df-d9c32e0c-2e83-489c-8e31-ab8e770a5faa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Account</th>\n","      <th>Name</th>\n","      <th>Rep</th>\n","      <th>Manager</th>\n","      <th>Product</th>\n","      <th>Quantity</th>\n","      <th>Price</th>\n","      <th>Status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>714466</td>\n","      <td>Trantow-Barrows</td>\n","      <td>Craig Booker</td>\n","      <td>Debra Henley</td>\n","      <td>CPU</td>\n","      <td>1</td>\n","      <td>30000</td>\n","      <td>presented</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>714466</td>\n","      <td>Trantow-Barrows</td>\n","      <td>Craig Booker</td>\n","      <td>Debra Henley</td>\n","      <td>Software</td>\n","      <td>1</td>\n","      <td>10000</td>\n","      <td>presented</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>714466</td>\n","      <td>Trantow-Barrows</td>\n","      <td>Craig Booker</td>\n","      <td>Debra Henley</td>\n","      <td>Maintenance</td>\n","      <td>2</td>\n","      <td>5000</td>\n","      <td>pending</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>737550</td>\n","      <td>Fritsch, Russel and Anderson</td>\n","      <td>Craig Booker</td>\n","      <td>Debra Henley</td>\n","      <td>CPU</td>\n","      <td>1</td>\n","      <td>35000</td>\n","      <td>declined</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>146832</td>\n","      <td>Kiehn-Spinka</td>\n","      <td>Daniel Hilton</td>\n","      <td>Debra Henley</td>\n","      <td>CPU</td>\n","      <td>2</td>\n","      <td>65000</td>\n","      <td>won</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>218895</td>\n","      <td>Kulas Inc</td>\n","      <td>Daniel Hilton</td>\n","      <td>Debra Henley</td>\n","      <td>CPU</td>\n","      <td>2</td>\n","      <td>40000</td>\n","      <td>pending</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>218895</td>\n","      <td>Kulas Inc</td>\n","      <td>Daniel Hilton</td>\n","      <td>Debra Henley</td>\n","      <td>Software</td>\n","      <td>1</td>\n","      <td>10000</td>\n","      <td>presented</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>412290</td>\n","      <td>Jerde-Hilpert</td>\n","      <td>John Smith</td>\n","      <td>Debra Henley</td>\n","      <td>Maintenance</td>\n","      <td>2</td>\n","      <td>5000</td>\n","      <td>pending</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>740150</td>\n","      <td>Barton LLC</td>\n","      <td>John Smith</td>\n","      <td>Debra Henley</td>\n","      <td>CPU</td>\n","      <td>1</td>\n","      <td>35000</td>\n","      <td>declined</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>141962</td>\n","      <td>Herman LLC</td>\n","      <td>Cedric Moss</td>\n","      <td>Fred Anderson</td>\n","      <td>CPU</td>\n","      <td>2</td>\n","      <td>65000</td>\n","      <td>won</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>163416</td>\n","      <td>Purdy-Kunde</td>\n","      <td>Cedric Moss</td>\n","      <td>Fred Anderson</td>\n","      <td>CPU</td>\n","      <td>1</td>\n","      <td>30000</td>\n","      <td>presented</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>239344</td>\n","      <td>Stokes LLC</td>\n","      <td>Cedric Moss</td>\n","      <td>Fred Anderson</td>\n","      <td>Maintenance</td>\n","      <td>1</td>\n","      <td>5000</td>\n","      <td>pending</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>239344</td>\n","      <td>Stokes LLC</td>\n","      <td>Cedric Moss</td>\n","      <td>Fred Anderson</td>\n","      <td>Software</td>\n","      <td>1</td>\n","      <td>10000</td>\n","      <td>presented</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>307599</td>\n","      <td>Kassulke, Ondricka and Metz</td>\n","      <td>Wendy Yule</td>\n","      <td>Fred Anderson</td>\n","      <td>Maintenance</td>\n","      <td>3</td>\n","      <td>7000</td>\n","      <td>won</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>688981</td>\n","      <td>Keeling LLC</td>\n","      <td>Wendy Yule</td>\n","      <td>Fred Anderson</td>\n","      <td>CPU</td>\n","      <td>5</td>\n","      <td>100000</td>\n","      <td>won</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>729833</td>\n","      <td>Koepp Ltd</td>\n","      <td>Wendy Yule</td>\n","      <td>Fred Anderson</td>\n","      <td>CPU</td>\n","      <td>2</td>\n","      <td>65000</td>\n","      <td>declined</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>729833</td>\n","      <td>Koepp Ltd</td>\n","      <td>Wendy Yule</td>\n","      <td>Fred Anderson</td>\n","      <td>Monitor</td>\n","      <td>2</td>\n","      <td>5000</td>\n","      <td>presented</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9c32e0c-2e83-489c-8e31-ab8e770a5faa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d9c32e0c-2e83-489c-8e31-ab8e770a5faa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d9c32e0c-2e83-489c-8e31-ab8e770a5faa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8661d9b0-9ee0-44ff-b4d0-ccfdc723958f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8661d9b0-9ee0-44ff-b4d0-ccfdc723958f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8661d9b0-9ee0-44ff-b4d0-ccfdc723958f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["pd.pivot_table(df , index = ['Name'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"5bYTcRhPqCcE","executionInfo":{"status":"ok","timestamp":1696982685783,"user_tz":-540,"elapsed":603,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"75f56cb1-4776-498e-b107-c4b4db0fe6a2"},"execution_count":121,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-121-edb7c27a9ba5>:1: FutureWarning: pivot_table dropped a column because it failed to aggregate. This behavior is deprecated and will raise in a future version of pandas. Select only the columns that can be aggregated.\n","  pd.pivot_table(df , index = ['Name'])\n"]},{"output_type":"execute_result","data":{"text/plain":["                              Account   Price  Quantity\n","Name                                                   \n","Barton LLC                     740150   35000  1.000000\n","Fritsch, Russel and Anderson   737550   35000  1.000000\n","Herman LLC                     141962   65000  2.000000\n","Jerde-Hilpert                  412290    5000  2.000000\n","Kassulke, Ondricka and Metz    307599    7000  3.000000\n","Keeling LLC                    688981  100000  5.000000\n","Kiehn-Spinka                   146832   65000  2.000000\n","Koepp Ltd                      729833   35000  2.000000\n","Kulas Inc                      218895   25000  1.500000\n","Purdy-Kunde                    163416   30000  1.000000\n","Stokes LLC                     239344    7500  1.000000\n","Trantow-Barrows                714466   15000  1.333333"],"text/html":["\n","  <div id=\"df-e979c410-a1af-48d9-aabe-a93ba5ae48a9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Account</th>\n","      <th>Price</th>\n","      <th>Quantity</th>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Barton LLC</th>\n","      <td>740150</td>\n","      <td>35000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Fritsch, Russel and Anderson</th>\n","      <td>737550</td>\n","      <td>35000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Herman LLC</th>\n","      <td>141962</td>\n","      <td>65000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Jerde-Hilpert</th>\n","      <td>412290</td>\n","      <td>5000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Kassulke, Ondricka and Metz</th>\n","      <td>307599</td>\n","      <td>7000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Keeling LLC</th>\n","      <td>688981</td>\n","      <td>100000</td>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Kiehn-Spinka</th>\n","      <td>146832</td>\n","      <td>65000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Koepp Ltd</th>\n","      <td>729833</td>\n","      <td>35000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Kulas Inc</th>\n","      <td>218895</td>\n","      <td>25000</td>\n","      <td>1.500000</td>\n","    </tr>\n","    <tr>\n","      <th>Purdy-Kunde</th>\n","      <td>163416</td>\n","      <td>30000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Stokes LLC</th>\n","      <td>239344</td>\n","      <td>7500</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Trantow-Barrows</th>\n","      <td>714466</td>\n","      <td>15000</td>\n","      <td>1.333333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e979c410-a1af-48d9-aabe-a93ba5ae48a9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e979c410-a1af-48d9-aabe-a93ba5ae48a9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e979c410-a1af-48d9-aabe-a93ba5ae48a9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5e081973-7bbe-4316-8a48-98e8011b23c8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e081973-7bbe-4316-8a48-98e8011b23c8')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5e081973-7bbe-4316-8a48-98e8011b23c8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"UMip4k3YqOVG","executionInfo":{"status":"ok","timestamp":1696982685783,"user_tz":-540,"elapsed":5,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"1a0f8f8d-a0b6-46a8-b978-4e6aa88847cb"},"execution_count":122,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Account                          Name            Rep       Manager  \\\n","0   714466               Trantow-Barrows   Craig Booker  Debra Henley   \n","1   714466               Trantow-Barrows   Craig Booker  Debra Henley   \n","2   714466               Trantow-Barrows   Craig Booker  Debra Henley   \n","3   737550  Fritsch, Russel and Anderson   Craig Booker  Debra Henley   \n","4   146832                  Kiehn-Spinka  Daniel Hilton  Debra Henley   \n","\n","       Product  Quantity  Price     Status  \n","0          CPU         1  30000  presented  \n","1     Software         1  10000  presented  \n","2  Maintenance         2   5000    pending  \n","3          CPU         1  35000   declined  \n","4          CPU         2  65000        won  "],"text/html":["\n","  <div id=\"df-10f5f084-bf42-4a0b-9108-231906660ba3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Account</th>\n","      <th>Name</th>\n","      <th>Rep</th>\n","      <th>Manager</th>\n","      <th>Product</th>\n","      <th>Quantity</th>\n","      <th>Price</th>\n","      <th>Status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>714466</td>\n","      <td>Trantow-Barrows</td>\n","      <td>Craig Booker</td>\n","      <td>Debra Henley</td>\n","      <td>CPU</td>\n","      <td>1</td>\n","      <td>30000</td>\n","      <td>presented</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>714466</td>\n","      <td>Trantow-Barrows</td>\n","      <td>Craig Booker</td>\n","      <td>Debra Henley</td>\n","      <td>Software</td>\n","      <td>1</td>\n","      <td>10000</td>\n","      <td>presented</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>714466</td>\n","      <td>Trantow-Barrows</td>\n","      <td>Craig Booker</td>\n","      <td>Debra Henley</td>\n","      <td>Maintenance</td>\n","      <td>2</td>\n","      <td>5000</td>\n","      <td>pending</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>737550</td>\n","      <td>Fritsch, Russel and Anderson</td>\n","      <td>Craig Booker</td>\n","      <td>Debra Henley</td>\n","      <td>CPU</td>\n","      <td>1</td>\n","      <td>35000</td>\n","      <td>declined</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>146832</td>\n","      <td>Kiehn-Spinka</td>\n","      <td>Daniel Hilton</td>\n","      <td>Debra Henley</td>\n","      <td>CPU</td>\n","      <td>2</td>\n","      <td>65000</td>\n","      <td>won</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10f5f084-bf42-4a0b-9108-231906660ba3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-10f5f084-bf42-4a0b-9108-231906660ba3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-10f5f084-bf42-4a0b-9108-231906660ba3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-73dd9acb-eb00-4dd3-a28a-5650557e079a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73dd9acb-eb00-4dd3-a28a-5650557e079a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-73dd9acb-eb00-4dd3-a28a-5650557e079a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["pd.pivot_table(df , index = ['Name','Rep','Manager'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"jO3jaAldqZHU","executionInfo":{"status":"ok","timestamp":1696982686254,"user_tz":-540,"elapsed":8,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"25a1125c-ccbb-4194-efa7-1a6fc8b7e173"},"execution_count":123,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-123-50cd8708b7d8>:1: FutureWarning: pivot_table dropped a column because it failed to aggregate. This behavior is deprecated and will raise in a future version of pandas. Select only the columns that can be aggregated.\n","  pd.pivot_table(df , index = ['Name','Rep','Manager'])\n"]},{"output_type":"execute_result","data":{"text/plain":["                                                          Account   Price  \\\n","Name                         Rep           Manager                          \n","Barton LLC                   John Smith    Debra Henley    740150   35000   \n","Fritsch, Russel and Anderson Craig Booker  Debra Henley    737550   35000   \n","Herman LLC                   Cedric Moss   Fred Anderson   141962   65000   \n","Jerde-Hilpert                John Smith    Debra Henley    412290    5000   \n","Kassulke, Ondricka and Metz  Wendy Yule    Fred Anderson   307599    7000   \n","Keeling LLC                  Wendy Yule    Fred Anderson   688981  100000   \n","Kiehn-Spinka                 Daniel Hilton Debra Henley    146832   65000   \n","Koepp Ltd                    Wendy Yule    Fred Anderson   729833   35000   \n","Kulas Inc                    Daniel Hilton Debra Henley    218895   25000   \n","Purdy-Kunde                  Cedric Moss   Fred Anderson   163416   30000   \n","Stokes LLC                   Cedric Moss   Fred Anderson   239344    7500   \n","Trantow-Barrows              Craig Booker  Debra Henley    714466   15000   \n","\n","                                                          Quantity  \n","Name                         Rep           Manager                  \n","Barton LLC                   John Smith    Debra Henley   1.000000  \n","Fritsch, Russel and Anderson Craig Booker  Debra Henley   1.000000  \n","Herman LLC                   Cedric Moss   Fred Anderson  2.000000  \n","Jerde-Hilpert                John Smith    Debra Henley   2.000000  \n","Kassulke, Ondricka and Metz  Wendy Yule    Fred Anderson  3.000000  \n","Keeling LLC                  Wendy Yule    Fred Anderson  5.000000  \n","Kiehn-Spinka                 Daniel Hilton Debra Henley   2.000000  \n","Koepp Ltd                    Wendy Yule    Fred Anderson  2.000000  \n","Kulas Inc                    Daniel Hilton Debra Henley   1.500000  \n","Purdy-Kunde                  Cedric Moss   Fred Anderson  1.000000  \n","Stokes LLC                   Cedric Moss   Fred Anderson  1.000000  \n","Trantow-Barrows              Craig Booker  Debra Henley   1.333333  "],"text/html":["\n","  <div id=\"df-146433c0-cad2-4f67-bf48-a65ef3eb7a9f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th>Account</th>\n","      <th>Price</th>\n","      <th>Quantity</th>\n","    </tr>\n","    <tr>\n","      <th>Name</th>\n","      <th>Rep</th>\n","      <th>Manager</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Barton LLC</th>\n","      <th>John Smith</th>\n","      <th>Debra Henley</th>\n","      <td>740150</td>\n","      <td>35000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Fritsch, Russel and Anderson</th>\n","      <th>Craig Booker</th>\n","      <th>Debra Henley</th>\n","      <td>737550</td>\n","      <td>35000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Herman LLC</th>\n","      <th>Cedric Moss</th>\n","      <th>Fred Anderson</th>\n","      <td>141962</td>\n","      <td>65000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Jerde-Hilpert</th>\n","      <th>John Smith</th>\n","      <th>Debra Henley</th>\n","      <td>412290</td>\n","      <td>5000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Kassulke, Ondricka and Metz</th>\n","      <th>Wendy Yule</th>\n","      <th>Fred Anderson</th>\n","      <td>307599</td>\n","      <td>7000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Keeling LLC</th>\n","      <th>Wendy Yule</th>\n","      <th>Fred Anderson</th>\n","      <td>688981</td>\n","      <td>100000</td>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Kiehn-Spinka</th>\n","      <th>Daniel Hilton</th>\n","      <th>Debra Henley</th>\n","      <td>146832</td>\n","      <td>65000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Koepp Ltd</th>\n","      <th>Wendy Yule</th>\n","      <th>Fred Anderson</th>\n","      <td>729833</td>\n","      <td>35000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Kulas Inc</th>\n","      <th>Daniel Hilton</th>\n","      <th>Debra Henley</th>\n","      <td>218895</td>\n","      <td>25000</td>\n","      <td>1.500000</td>\n","    </tr>\n","    <tr>\n","      <th>Purdy-Kunde</th>\n","      <th>Cedric Moss</th>\n","      <th>Fred Anderson</th>\n","      <td>163416</td>\n","      <td>30000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Stokes LLC</th>\n","      <th>Cedric Moss</th>\n","      <th>Fred Anderson</th>\n","      <td>239344</td>\n","      <td>7500</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Trantow-Barrows</th>\n","      <th>Craig Booker</th>\n","      <th>Debra Henley</th>\n","      <td>714466</td>\n","      <td>15000</td>\n","      <td>1.333333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-146433c0-cad2-4f67-bf48-a65ef3eb7a9f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-146433c0-cad2-4f67-bf48-a65ef3eb7a9f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-146433c0-cad2-4f67-bf48-a65ef3eb7a9f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1f3ae077-a4ad-4431-8cd6-85a690c98c25\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1f3ae077-a4ad-4431-8cd6-85a690c98c25')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1f3ae077-a4ad-4431-8cd6-85a690c98c25 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":123}]},{"cell_type":"code","source":["pd.pivot_table(df , index = ['Rep','Manager'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":294},"id":"eeelFbRSqebC","executionInfo":{"status":"ok","timestamp":1696982686255,"user_tz":-540,"elapsed":7,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"25cece4e-5f54-4985-e3cc-16ce816eb59d"},"execution_count":124,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-124-5178662c87cd>:1: FutureWarning: pivot_table dropped a column because it failed to aggregate. This behavior is deprecated and will raise in a future version of pandas. Select only the columns that can be aggregated.\n","  pd.pivot_table(df , index = ['Rep','Manager'])\n"]},{"output_type":"execute_result","data":{"text/plain":["                              Account         Price  Quantity\n","Rep           Manager                                        \n","Cedric Moss   Fred Anderson  196016.5  27500.000000  1.250000\n","Craig Booker  Debra Henley   720237.0  20000.000000  1.250000\n","Daniel Hilton Debra Henley   194874.0  38333.333333  1.666667\n","John Smith    Debra Henley   576220.0  20000.000000  1.500000\n","Wendy Yule    Fred Anderson  614061.5  44250.000000  3.000000"],"text/html":["\n","  <div id=\"df-b1417fc1-9af7-4f5a-a916-347cbdf5bd68\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Account</th>\n","      <th>Price</th>\n","      <th>Quantity</th>\n","    </tr>\n","    <tr>\n","      <th>Rep</th>\n","      <th>Manager</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Cedric Moss</th>\n","      <th>Fred Anderson</th>\n","      <td>196016.5</td>\n","      <td>27500.000000</td>\n","      <td>1.250000</td>\n","    </tr>\n","    <tr>\n","      <th>Craig Booker</th>\n","      <th>Debra Henley</th>\n","      <td>720237.0</td>\n","      <td>20000.000000</td>\n","      <td>1.250000</td>\n","    </tr>\n","    <tr>\n","      <th>Daniel Hilton</th>\n","      <th>Debra Henley</th>\n","      <td>194874.0</td>\n","      <td>38333.333333</td>\n","      <td>1.666667</td>\n","    </tr>\n","    <tr>\n","      <th>John Smith</th>\n","      <th>Debra Henley</th>\n","      <td>576220.0</td>\n","      <td>20000.000000</td>\n","      <td>1.500000</td>\n","    </tr>\n","    <tr>\n","      <th>Wendy Yule</th>\n","      <th>Fred Anderson</th>\n","      <td>614061.5</td>\n","      <td>44250.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1417fc1-9af7-4f5a-a916-347cbdf5bd68')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b1417fc1-9af7-4f5a-a916-347cbdf5bd68 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b1417fc1-9af7-4f5a-a916-347cbdf5bd68');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b5822502-6bf6-4a35-bd15-aea60fee8ced\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5822502-6bf6-4a35-bd15-aea60fee8ced')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b5822502-6bf6-4a35-bd15-aea60fee8ced button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":124}]},{"cell_type":"code","source":["pd.pivot_table(df , index = ['Rep','Manager'] , values=['Price'] , aggfunc = np.sum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"qc-SmX4oqkhO","executionInfo":{"status":"ok","timestamp":1696982686648,"user_tz":-540,"elapsed":3,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"1de06fd2-da0c-4557-828c-63bcefd1e5cd"},"execution_count":125,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                              Price\n","Rep           Manager              \n","Cedric Moss   Fred Anderson  110000\n","Craig Booker  Debra Henley    80000\n","Daniel Hilton Debra Henley   115000\n","John Smith    Debra Henley    40000\n","Wendy Yule    Fred Anderson  177000"],"text/html":["\n","  <div id=\"df-41af9366-66e8-4b68-b382-9446f784792d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>Price</th>\n","    </tr>\n","    <tr>\n","      <th>Rep</th>\n","      <th>Manager</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Cedric Moss</th>\n","      <th>Fred Anderson</th>\n","      <td>110000</td>\n","    </tr>\n","    <tr>\n","      <th>Craig Booker</th>\n","      <th>Debra Henley</th>\n","      <td>80000</td>\n","    </tr>\n","    <tr>\n","      <th>Daniel Hilton</th>\n","      <th>Debra Henley</th>\n","      <td>115000</td>\n","    </tr>\n","    <tr>\n","      <th>John Smith</th>\n","      <th>Debra Henley</th>\n","      <td>40000</td>\n","    </tr>\n","    <tr>\n","      <th>Wendy Yule</th>\n","      <th>Fred Anderson</th>\n","      <td>177000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41af9366-66e8-4b68-b382-9446f784792d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-41af9366-66e8-4b68-b382-9446f784792d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-41af9366-66e8-4b68-b382-9446f784792d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f982ee08-3605-4e96-8410-2fbefbf4c694\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f982ee08-3605-4e96-8410-2fbefbf4c694')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f982ee08-3605-4e96-8410-2fbefbf4c694 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["pd.pivot_table(df , index = ['Rep','Manager'] , values=['Price'] , aggfunc = [np.mean , len])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"37yHvjK1q_wX","executionInfo":{"status":"ok","timestamp":1696982687005,"user_tz":-540,"elapsed":8,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"0c19369c-e811-4394-ad7f-2d2c4b79ff27"},"execution_count":126,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                     mean   len\n","                                    Price Price\n","Rep           Manager                          \n","Cedric Moss   Fred Anderson  27500.000000     4\n","Craig Booker  Debra Henley   20000.000000     4\n","Daniel Hilton Debra Henley   38333.333333     3\n","John Smith    Debra Henley   20000.000000     2\n","Wendy Yule    Fred Anderson  44250.000000     4"],"text/html":["\n","  <div id=\"df-7605f09a-725c-45c6-afa5-e2c53cf30cd7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th>mean</th>\n","      <th>len</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th>Price</th>\n","      <th>Price</th>\n","    </tr>\n","    <tr>\n","      <th>Rep</th>\n","      <th>Manager</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Cedric Moss</th>\n","      <th>Fred Anderson</th>\n","      <td>27500.000000</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Craig Booker</th>\n","      <th>Debra Henley</th>\n","      <td>20000.000000</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Daniel Hilton</th>\n","      <th>Debra Henley</th>\n","      <td>38333.333333</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>John Smith</th>\n","      <th>Debra Henley</th>\n","      <td>20000.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Wendy Yule</th>\n","      <th>Fred Anderson</th>\n","      <td>44250.000000</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7605f09a-725c-45c6-afa5-e2c53cf30cd7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7605f09a-725c-45c6-afa5-e2c53cf30cd7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7605f09a-725c-45c6-afa5-e2c53cf30cd7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2570be0d-f017-4f09-ab78-684c5ca3a6b9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2570be0d-f017-4f09-ab78-684c5ca3a6b9')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2570be0d-f017-4f09-ab78-684c5ca3a6b9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":["pd.pivot_table(df , index = ['Manager','Rep'] , values = ['Price'] , columns = ['Product'] , fill_value = 0 , margins = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"JrG2UR7TrLBR","executionInfo":{"status":"ok","timestamp":1696982687006,"user_tz":-540,"elapsed":7,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"dfd0e4c9-4269-4022-c7a8-2b4f5d473c43"},"execution_count":127,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                    Price                               \\\n","Product                               CPU Maintenance Monitor Software   \n","Manager       Rep                                                        \n","Debra Henley  Craig Booker   32500.000000        5000       0    10000   \n","              Daniel Hilton  52500.000000           0       0    10000   \n","              John Smith     35000.000000        5000       0        0   \n","Fred Anderson Cedric Moss    47500.000000        5000       0    10000   \n","              Wendy Yule     82500.000000        7000    5000        0   \n","All                          51666.666667        5500    5000    10000   \n","\n","                                           \n","Product                               All  \n","Manager       Rep                          \n","Debra Henley  Craig Booker   20000.000000  \n","              Daniel Hilton  38333.333333  \n","              John Smith     20000.000000  \n","Fred Anderson Cedric Moss    27500.000000  \n","              Wendy Yule     44250.000000  \n","All                          30705.882353  "],"text/html":["\n","  <div id=\"df-b329ffaf-9525-47ca-a5a1-ac9db37b494d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th colspan=\"5\" halign=\"left\">Price</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>Product</th>\n","      <th>CPU</th>\n","      <th>Maintenance</th>\n","      <th>Monitor</th>\n","      <th>Software</th>\n","      <th>All</th>\n","    </tr>\n","    <tr>\n","      <th>Manager</th>\n","      <th>Rep</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">Debra Henley</th>\n","      <th>Craig Booker</th>\n","      <td>32500.000000</td>\n","      <td>5000</td>\n","      <td>0</td>\n","      <td>10000</td>\n","      <td>20000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Daniel Hilton</th>\n","      <td>52500.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10000</td>\n","      <td>38333.333333</td>\n","    </tr>\n","    <tr>\n","      <th>John Smith</th>\n","      <td>35000.000000</td>\n","      <td>5000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20000.000000</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Fred Anderson</th>\n","      <th>Cedric Moss</th>\n","      <td>47500.000000</td>\n","      <td>5000</td>\n","      <td>0</td>\n","      <td>10000</td>\n","      <td>27500.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Wendy Yule</th>\n","      <td>82500.000000</td>\n","      <td>7000</td>\n","      <td>5000</td>\n","      <td>0</td>\n","      <td>44250.000000</td>\n","    </tr>\n","    <tr>\n","      <th>All</th>\n","      <th></th>\n","      <td>51666.666667</td>\n","      <td>5500</td>\n","      <td>5000</td>\n","      <td>10000</td>\n","      <td>30705.882353</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b329ffaf-9525-47ca-a5a1-ac9db37b494d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b329ffaf-9525-47ca-a5a1-ac9db37b494d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b329ffaf-9525-47ca-a5a1-ac9db37b494d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0b8f0a9b-149f-4628-92a9-017d5ed54bb1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0b8f0a9b-149f-4628-92a9-017d5ed54bb1')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0b8f0a9b-149f-4628-92a9-017d5ed54bb1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":127}]},{"cell_type":"code","source":["crime_in_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"t5J8bRQXsBWM","executionInfo":{"status":"ok","timestamp":1696982687373,"user_tz":-540,"elapsed":4,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"b09b2ae0-cde8-4a02-aee9-52d61fa8b0ef"},"execution_count":128,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    관서명  살인 발생  살인 검거  강도 발생  강도 검거  강간 발생  강간 검거  절도 발생  절도 검거  폭력 발생  폭력 검거  \\\n","0   중부서      2      2      3      2    105     65   1395    477   1355   1170   \n","1   종로서      3      3      6      5    115     98   1070    413   1278   1070   \n","2  남대문서      1      0      6      4     65     46   1153    382    869    794   \n","3  서대문서      2      2      5      4    154    124   1812    738   2056   1711   \n","4   혜화서      3      2      5      4     96     63   1114    424   1015    861   \n","\n","     구별  \n","0    중구  \n","1   종로구  \n","2    중구  \n","3  서대문구  \n","4   종로구  "],"text/html":["\n","  <div id=\"df-35666950-4a09-4869-b174-c5dcbdc97a33\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>관서명</th>\n","      <th>살인 발생</th>\n","      <th>살인 검거</th>\n","      <th>강도 발생</th>\n","      <th>강도 검거</th>\n","      <th>강간 발생</th>\n","      <th>강간 검거</th>\n","      <th>절도 발생</th>\n","      <th>절도 검거</th>\n","      <th>폭력 발생</th>\n","      <th>폭력 검거</th>\n","      <th>구별</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>중부서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>105</td>\n","      <td>65</td>\n","      <td>1395</td>\n","      <td>477</td>\n","      <td>1355</td>\n","      <td>1170</td>\n","      <td>중구</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>종로서</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>115</td>\n","      <td>98</td>\n","      <td>1070</td>\n","      <td>413</td>\n","      <td>1278</td>\n","      <td>1070</td>\n","      <td>종로구</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>남대문서</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>65</td>\n","      <td>46</td>\n","      <td>1153</td>\n","      <td>382</td>\n","      <td>869</td>\n","      <td>794</td>\n","      <td>중구</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>서대문서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>154</td>\n","      <td>124</td>\n","      <td>1812</td>\n","      <td>738</td>\n","      <td>2056</td>\n","      <td>1711</td>\n","      <td>서대문구</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>혜화서</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>96</td>\n","      <td>63</td>\n","      <td>1114</td>\n","      <td>424</td>\n","      <td>1015</td>\n","      <td>861</td>\n","      <td>종로구</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-35666950-4a09-4869-b174-c5dcbdc97a33')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-35666950-4a09-4869-b174-c5dcbdc97a33 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-35666950-4a09-4869-b174-c5dcbdc97a33');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0d0622d6-a99b-405d-a7f7-7a0846c85034\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0d0622d6-a99b-405d-a7f7-7a0846c85034')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0d0622d6-a99b-405d-a7f7-7a0846c85034 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":128}]},{"cell_type":"code","source":["crime_in_Seoul.index = crime_in_Seoul['구별']\n","crime_in_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"56DXkTyisiiQ","executionInfo":{"status":"ok","timestamp":1696982688040,"user_tz":-540,"elapsed":7,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"808edb27-5dcf-4ea4-f417-059b4acff0bb"},"execution_count":129,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       관서명  살인 발생  살인 검거  강도 발생  강도 검거  강간 발생  강간 검거  절도 발생  절도 검거  폭력 발생  \\\n","구별                                                                          \n","중구     중부서      2      2      3      2    105     65   1395    477   1355   \n","종로구    종로서      3      3      6      5    115     98   1070    413   1278   \n","중구    남대문서      1      0      6      4     65     46   1153    382    869   \n","서대문구  서대문서      2      2      5      4    154    124   1812    738   2056   \n","종로구    혜화서      3      2      5      4     96     63   1114    424   1015   \n","\n","      폭력 검거    구별  \n","구별                 \n","중구     1170    중구  \n","종로구    1070   종로구  \n","중구      794    중구  \n","서대문구   1711  서대문구  \n","종로구     861   종로구  "],"text/html":["\n","  <div id=\"df-be14e374-7500-4c7a-bf99-4fe6cca69555\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>관서명</th>\n","      <th>살인 발생</th>\n","      <th>살인 검거</th>\n","      <th>강도 발생</th>\n","      <th>강도 검거</th>\n","      <th>강간 발생</th>\n","      <th>강간 검거</th>\n","      <th>절도 발생</th>\n","      <th>절도 검거</th>\n","      <th>폭력 발생</th>\n","      <th>폭력 검거</th>\n","      <th>구별</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>중구</th>\n","      <td>중부서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>105</td>\n","      <td>65</td>\n","      <td>1395</td>\n","      <td>477</td>\n","      <td>1355</td>\n","      <td>1170</td>\n","      <td>중구</td>\n","    </tr>\n","    <tr>\n","      <th>종로구</th>\n","      <td>종로서</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>115</td>\n","      <td>98</td>\n","      <td>1070</td>\n","      <td>413</td>\n","      <td>1278</td>\n","      <td>1070</td>\n","      <td>종로구</td>\n","    </tr>\n","    <tr>\n","      <th>중구</th>\n","      <td>남대문서</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>65</td>\n","      <td>46</td>\n","      <td>1153</td>\n","      <td>382</td>\n","      <td>869</td>\n","      <td>794</td>\n","      <td>중구</td>\n","    </tr>\n","    <tr>\n","      <th>서대문구</th>\n","      <td>서대문서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>154</td>\n","      <td>124</td>\n","      <td>1812</td>\n","      <td>738</td>\n","      <td>2056</td>\n","      <td>1711</td>\n","      <td>서대문구</td>\n","    </tr>\n","    <tr>\n","      <th>종로구</th>\n","      <td>혜화서</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>96</td>\n","      <td>63</td>\n","      <td>1114</td>\n","      <td>424</td>\n","      <td>1015</td>\n","      <td>861</td>\n","      <td>종로구</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be14e374-7500-4c7a-bf99-4fe6cca69555')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-be14e374-7500-4c7a-bf99-4fe6cca69555 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-be14e374-7500-4c7a-bf99-4fe6cca69555');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0dd212ec-081d-406a-a886-6dde595d3228\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0dd212ec-081d-406a-a886-6dde595d3228')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0dd212ec-081d-406a-a886-6dde595d3228 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":129}]},{"cell_type":"code","source":["crime_in_Seoul = crime_in_Seoul.drop(['구별'] , axis = 1)\n","crime_in_Seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"HxxmUX2itAh8","executionInfo":{"status":"ok","timestamp":1696982688718,"user_tz":-540,"elapsed":4,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"5e58670e-75ab-489c-e599-a09fa9c28202"},"execution_count":130,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       관서명  살인 발생  살인 검거  강도 발생  강도 검거  강간 발생  강간 검거  절도 발생  절도 검거  폭력 발생  \\\n","구별                                                                          \n","중구     중부서      2      2      3      2    105     65   1395    477   1355   \n","종로구    종로서      3      3      6      5    115     98   1070    413   1278   \n","중구    남대문서      1      0      6      4     65     46   1153    382    869   \n","서대문구  서대문서      2      2      5      4    154    124   1812    738   2056   \n","종로구    혜화서      3      2      5      4     96     63   1114    424   1015   \n","\n","      폭력 검거  \n","구별           \n","중구     1170  \n","종로구    1070  \n","중구      794  \n","서대문구   1711  \n","종로구     861  "],"text/html":["\n","  <div id=\"df-4e6e9492-5303-4d20-a748-8da2239a1e07\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>관서명</th>\n","      <th>살인 발생</th>\n","      <th>살인 검거</th>\n","      <th>강도 발생</th>\n","      <th>강도 검거</th>\n","      <th>강간 발생</th>\n","      <th>강간 검거</th>\n","      <th>절도 발생</th>\n","      <th>절도 검거</th>\n","      <th>폭력 발생</th>\n","      <th>폭력 검거</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>중구</th>\n","      <td>중부서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>105</td>\n","      <td>65</td>\n","      <td>1395</td>\n","      <td>477</td>\n","      <td>1355</td>\n","      <td>1170</td>\n","    </tr>\n","    <tr>\n","      <th>종로구</th>\n","      <td>종로서</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>115</td>\n","      <td>98</td>\n","      <td>1070</td>\n","      <td>413</td>\n","      <td>1278</td>\n","      <td>1070</td>\n","    </tr>\n","    <tr>\n","      <th>중구</th>\n","      <td>남대문서</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>65</td>\n","      <td>46</td>\n","      <td>1153</td>\n","      <td>382</td>\n","      <td>869</td>\n","      <td>794</td>\n","    </tr>\n","    <tr>\n","      <th>서대문구</th>\n","      <td>서대문서</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>154</td>\n","      <td>124</td>\n","      <td>1812</td>\n","      <td>738</td>\n","      <td>2056</td>\n","      <td>1711</td>\n","    </tr>\n","    <tr>\n","      <th>종로구</th>\n","      <td>혜화서</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>96</td>\n","      <td>63</td>\n","      <td>1114</td>\n","      <td>424</td>\n","      <td>1015</td>\n","      <td>861</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e6e9492-5303-4d20-a748-8da2239a1e07')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4e6e9492-5303-4d20-a748-8da2239a1e07 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4e6e9492-5303-4d20-a748-8da2239a1e07');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1e9bc359-71d8-45a6-b611-772edf468f6c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e9bc359-71d8-45a6-b611-772edf468f6c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1e9bc359-71d8-45a6-b611-772edf468f6c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":130}]},{"cell_type":"code","source":["crime = pd.pivot_table(crime_in_Seoul , index = '구별' , aggfunc = np.sum)\n","crime.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":294},"id":"KRzMPx6MtR4s","executionInfo":{"status":"ok","timestamp":1696982689119,"user_tz":-540,"elapsed":4,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"28bd8a3b-2a91-4389-d6dd-21b429e4b13b"},"execution_count":131,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-131-2e1cd545fd5a>:1: FutureWarning: The operation <function sum at 0x7f151910aef0> failed on a column. If any error is raised, this will raise an exception in a future version of pandas. Drop these columns to avoid this warning.\n","  crime = pd.pivot_table(crime_in_Seoul , index = '구별' , aggfunc = np.sum)\n"]},{"output_type":"execute_result","data":{"text/plain":["     강간 검거  강간 발생  강도 검거  강도 발생  살인 검거  살인 발생  절도 검거  절도 발생  폭력 검거  폭력 발생\n","구별                                                                       \n","강남구    349    449     18     21     10     13   1650   3850   3705   4284\n","강동구    123    156      8      6      3      4    789   2366   2248   2712\n","강북구    126    153     13     14      8      7    618   1434   2348   2649\n","관악구    221    320     14     12      8      9    827   2706   2642   3298\n","광진구    220    240     26     14      4      4   1277   3026   2180   2625"],"text/html":["\n","  <div id=\"df-8776c3c7-e202-48d0-a5a5-f151d8fe4736\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>강간 검거</th>\n","      <th>강간 발생</th>\n","      <th>강도 검거</th>\n","      <th>강도 발생</th>\n","      <th>살인 검거</th>\n","      <th>살인 발생</th>\n","      <th>절도 검거</th>\n","      <th>절도 발생</th>\n","      <th>폭력 검거</th>\n","      <th>폭력 발생</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>강남구</th>\n","      <td>349</td>\n","      <td>449</td>\n","      <td>18</td>\n","      <td>21</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>1650</td>\n","      <td>3850</td>\n","      <td>3705</td>\n","      <td>4284</td>\n","    </tr>\n","    <tr>\n","      <th>강동구</th>\n","      <td>123</td>\n","      <td>156</td>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>789</td>\n","      <td>2366</td>\n","      <td>2248</td>\n","      <td>2712</td>\n","    </tr>\n","    <tr>\n","      <th>강북구</th>\n","      <td>126</td>\n","      <td>153</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>618</td>\n","      <td>1434</td>\n","      <td>2348</td>\n","      <td>2649</td>\n","    </tr>\n","    <tr>\n","      <th>관악구</th>\n","      <td>221</td>\n","      <td>320</td>\n","      <td>14</td>\n","      <td>12</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>827</td>\n","      <td>2706</td>\n","      <td>2642</td>\n","      <td>3298</td>\n","    </tr>\n","    <tr>\n","      <th>광진구</th>\n","      <td>220</td>\n","      <td>240</td>\n","      <td>26</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1277</td>\n","      <td>3026</td>\n","      <td>2180</td>\n","      <td>2625</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8776c3c7-e202-48d0-a5a5-f151d8fe4736')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8776c3c7-e202-48d0-a5a5-f151d8fe4736 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8776c3c7-e202-48d0-a5a5-f151d8fe4736');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d3838e4d-e504-470a-8620-1c0b75ef6b6e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d3838e4d-e504-470a-8620-1c0b75ef6b6e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d3838e4d-e504-470a-8620-1c0b75ef6b6e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":131}]},{"cell_type":"code","source":["crime['강간검거율'] = crime['강간 검거']/crime['강간 발생'] * 100\n","crime['살인검거율'] = crime['살인 검거']/crime['살인 발생'] * 100\n","crime['강도검거율'] = crime['강도 검거']/crime['강도 발생'] * 100\n","crime['절도검거율'] = crime['절도 검거']/crime['절도 발생'] * 100\n","crime['폭력검거율'] = crime['폭력 검거']/crime['폭력 발생'] * 100\n","\n","del crime['강간 검거']\n","del crime['살인 검거']\n","del crime['강도 검거']\n","del crime['절도 검거']\n","del crime['폭력 검거']"],"metadata":{"id":"jWGF64T5tkpE","executionInfo":{"status":"ok","timestamp":1696982689847,"user_tz":-540,"elapsed":2,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":132,"outputs":[]},{"cell_type":"code","source":["crime.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V_8DetNhuDs8","executionInfo":{"status":"ok","timestamp":1696982690188,"user_tz":-540,"elapsed":2,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"32816075-1bc6-41c6-c7b2-3706eddfb10e"},"execution_count":133,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['강간 발생', '강도 발생', '살인 발생', '절도 발생', '폭력 발생', '강간검거율', '살인검거율', '강도검거율',\n","       '절도검거율', '폭력검거율'],\n","      dtype='object')"]},"metadata":{},"execution_count":133}]},{"cell_type":"code","source":["con_list = ['강간검거율','살인검거율','강도검거율','절도검거율','폭력검거율']\n","\n","for i in con_list:\n","  crime.loc[crime[i] >100 , i] = 100\n","crime.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"CC2NJUsnuNkr","executionInfo":{"status":"ok","timestamp":1696982694035,"user_tz":-540,"elapsed":4,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"902bf28e-70e8-4d91-c212-2d7c5a8f7055"},"execution_count":134,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     강간 발생  강도 발생  살인 발생  절도 발생  폭력 발생      강간검거율       살인검거율       강도검거율  \\\n","구별                                                                          \n","강남구    449     21     13   3850   4284  77.728285   76.923077   85.714286   \n","강동구    156      6      4   2366   2712  78.846154   75.000000  100.000000   \n","강북구    153     14      7   1434   2649  82.352941  100.000000   92.857143   \n","관악구    320     12      9   2706   3298  69.062500   88.888889  100.000000   \n","광진구    240     14      4   3026   2625  91.666667  100.000000  100.000000   \n","\n","         절도검거율      폭력검거율  \n","구별                         \n","강남구  42.857143  86.484594  \n","강동구  33.347422  82.890855  \n","강북구  43.096234  88.637222  \n","관악구  30.561715  80.109157  \n","광진구  42.200925  83.047619  "],"text/html":["\n","  <div id=\"df-9011182b-2801-47a4-8917-2cceebc9b167\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>강간 발생</th>\n","      <th>강도 발생</th>\n","      <th>살인 발생</th>\n","      <th>절도 발생</th>\n","      <th>폭력 발생</th>\n","      <th>강간검거율</th>\n","      <th>살인검거율</th>\n","      <th>강도검거율</th>\n","      <th>절도검거율</th>\n","      <th>폭력검거율</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>강남구</th>\n","      <td>449</td>\n","      <td>21</td>\n","      <td>13</td>\n","      <td>3850</td>\n","      <td>4284</td>\n","      <td>77.728285</td>\n","      <td>76.923077</td>\n","      <td>85.714286</td>\n","      <td>42.857143</td>\n","      <td>86.484594</td>\n","    </tr>\n","    <tr>\n","      <th>강동구</th>\n","      <td>156</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>2366</td>\n","      <td>2712</td>\n","      <td>78.846154</td>\n","      <td>75.000000</td>\n","      <td>100.000000</td>\n","      <td>33.347422</td>\n","      <td>82.890855</td>\n","    </tr>\n","    <tr>\n","      <th>강북구</th>\n","      <td>153</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>1434</td>\n","      <td>2649</td>\n","      <td>82.352941</td>\n","      <td>100.000000</td>\n","      <td>92.857143</td>\n","      <td>43.096234</td>\n","      <td>88.637222</td>\n","    </tr>\n","    <tr>\n","      <th>관악구</th>\n","      <td>320</td>\n","      <td>12</td>\n","      <td>9</td>\n","      <td>2706</td>\n","      <td>3298</td>\n","      <td>69.062500</td>\n","      <td>88.888889</td>\n","      <td>100.000000</td>\n","      <td>30.561715</td>\n","      <td>80.109157</td>\n","    </tr>\n","    <tr>\n","      <th>광진구</th>\n","      <td>240</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>3026</td>\n","      <td>2625</td>\n","      <td>91.666667</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>42.200925</td>\n","      <td>83.047619</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9011182b-2801-47a4-8917-2cceebc9b167')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9011182b-2801-47a4-8917-2cceebc9b167 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9011182b-2801-47a4-8917-2cceebc9b167');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d69d2b41-0630-426d-bccd-211030ca7154\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d69d2b41-0630-426d-bccd-211030ca7154')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d69d2b41-0630-426d-bccd-211030ca7154 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["crime.rename(columns = {'강간 발생' : '강간' , '강도 발생' : '강도' , '살인 발생' : '살인' , '절도 발생' : '절도' , '폭력 발생' : '폭력'} , inplace = True)\n","crime.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"KSxaBH5auj0M","executionInfo":{"status":"ok","timestamp":1696982694606,"user_tz":-540,"elapsed":5,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"1c6b1059-5980-4c22-a05a-612e78a1e56b"},"execution_count":135,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      강간  강도  살인    절도    폭력      강간검거율       살인검거율       강도검거율      절도검거율  \\\n","구별                                                                           \n","강남구  449  21  13  3850  4284  77.728285   76.923077   85.714286  42.857143   \n","강동구  156   6   4  2366  2712  78.846154   75.000000  100.000000  33.347422   \n","강북구  153  14   7  1434  2649  82.352941  100.000000   92.857143  43.096234   \n","관악구  320  12   9  2706  3298  69.062500   88.888889  100.000000  30.561715   \n","광진구  240  14   4  3026  2625  91.666667  100.000000  100.000000  42.200925   \n","\n","         폭력검거율  \n","구별              \n","강남구  86.484594  \n","강동구  82.890855  \n","강북구  88.637222  \n","관악구  80.109157  \n","광진구  83.047619  "],"text/html":["\n","  <div id=\"df-871dc025-8f7f-4a81-9573-5936df6c1e6d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>강간</th>\n","      <th>강도</th>\n","      <th>살인</th>\n","      <th>절도</th>\n","      <th>폭력</th>\n","      <th>강간검거율</th>\n","      <th>살인검거율</th>\n","      <th>강도검거율</th>\n","      <th>절도검거율</th>\n","      <th>폭력검거율</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>강남구</th>\n","      <td>449</td>\n","      <td>21</td>\n","      <td>13</td>\n","      <td>3850</td>\n","      <td>4284</td>\n","      <td>77.728285</td>\n","      <td>76.923077</td>\n","      <td>85.714286</td>\n","      <td>42.857143</td>\n","      <td>86.484594</td>\n","    </tr>\n","    <tr>\n","      <th>강동구</th>\n","      <td>156</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>2366</td>\n","      <td>2712</td>\n","      <td>78.846154</td>\n","      <td>75.000000</td>\n","      <td>100.000000</td>\n","      <td>33.347422</td>\n","      <td>82.890855</td>\n","    </tr>\n","    <tr>\n","      <th>강북구</th>\n","      <td>153</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>1434</td>\n","      <td>2649</td>\n","      <td>82.352941</td>\n","      <td>100.000000</td>\n","      <td>92.857143</td>\n","      <td>43.096234</td>\n","      <td>88.637222</td>\n","    </tr>\n","    <tr>\n","      <th>관악구</th>\n","      <td>320</td>\n","      <td>12</td>\n","      <td>9</td>\n","      <td>2706</td>\n","      <td>3298</td>\n","      <td>69.062500</td>\n","      <td>88.888889</td>\n","      <td>100.000000</td>\n","      <td>30.561715</td>\n","      <td>80.109157</td>\n","    </tr>\n","    <tr>\n","      <th>광진구</th>\n","      <td>240</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>3026</td>\n","      <td>2625</td>\n","      <td>91.666667</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>42.200925</td>\n","      <td>83.047619</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-871dc025-8f7f-4a81-9573-5936df6c1e6d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-871dc025-8f7f-4a81-9573-5936df6c1e6d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-871dc025-8f7f-4a81-9573-5936df6c1e6d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-713d8cef-cbeb-4f59-a08d-0f2f8c0795ae\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-713d8cef-cbeb-4f59-a08d-0f2f8c0795ae')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-713d8cef-cbeb-4f59-a08d-0f2f8c0795ae button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":135}]},{"cell_type":"code","source":["from sklearn import preprocessing\n","\n","col = ['강간','강도','살인','절도','폭력']\n","\n","x = crime[col].values\n","min_max_scaler = preprocessing.MinMaxScaler()\n","x_scaled = min_max_scaler.fit_transform(x.astype(float))\n","crime_anal_norm = pd.DataFrame(x_scaled , columns = col , index = crime.index)\n","\n","col2 = ['강간검거율','강도검거율','살인검거율','절도검거율','폭력검거율']\n","crime_anal_norm[col2] = crime[col2]\n","crime_anal_norm.head()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"QTHJX_Ivu7ad","executionInfo":{"status":"ok","timestamp":1696982695213,"user_tz":-540,"elapsed":5,"user":{"displayName":"김경수","userId":"10907451516248175311"}},"outputId":"7966d423-92d4-4a32-f99a-4ef7c711c4ed"},"execution_count":136,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           강간        강도        살인        절도        폭력      강간검거율       강도검거율  \\\n","구별                                                                             \n","강남구  1.000000  0.941176  0.916667  0.953472  0.661386  77.728285   85.714286   \n","강동구  0.155620  0.058824  0.166667  0.445775  0.289667  78.846154  100.000000   \n","강북구  0.146974  0.529412  0.416667  0.126924  0.274769  82.352941   92.857143   \n","관악구  0.628242  0.411765  0.583333  0.562094  0.428234  69.062500  100.000000   \n","광진구  0.397695  0.529412  0.166667  0.671570  0.269094  91.666667  100.000000   \n","\n","          살인검거율      절도검거율      폭력검거율  \n","구별                                     \n","강남구   76.923077  42.857143  86.484594  \n","강동구   75.000000  33.347422  82.890855  \n","강북구  100.000000  43.096234  88.637222  \n","관악구   88.888889  30.561715  80.109157  \n","광진구  100.000000  42.200925  83.047619  "],"text/html":["\n","  <div id=\"df-1cff5d44-c475-48d1-a7f9-1735ef5d57c8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>강간</th>\n","      <th>강도</th>\n","      <th>살인</th>\n","      <th>절도</th>\n","      <th>폭력</th>\n","      <th>강간검거율</th>\n","      <th>강도검거율</th>\n","      <th>살인검거율</th>\n","      <th>절도검거율</th>\n","      <th>폭력검거율</th>\n","    </tr>\n","    <tr>\n","      <th>구별</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>강남구</th>\n","      <td>1.000000</td>\n","      <td>0.941176</td>\n","      <td>0.916667</td>\n","      <td>0.953472</td>\n","      <td>0.661386</td>\n","      <td>77.728285</td>\n","      <td>85.714286</td>\n","      <td>76.923077</td>\n","      <td>42.857143</td>\n","      <td>86.484594</td>\n","    </tr>\n","    <tr>\n","      <th>강동구</th>\n","      <td>0.155620</td>\n","      <td>0.058824</td>\n","      <td>0.166667</td>\n","      <td>0.445775</td>\n","      <td>0.289667</td>\n","      <td>78.846154</td>\n","      <td>100.000000</td>\n","      <td>75.000000</td>\n","      <td>33.347422</td>\n","      <td>82.890855</td>\n","    </tr>\n","    <tr>\n","      <th>강북구</th>\n","      <td>0.146974</td>\n","      <td>0.529412</td>\n","      <td>0.416667</td>\n","      <td>0.126924</td>\n","      <td>0.274769</td>\n","      <td>82.352941</td>\n","      <td>92.857143</td>\n","      <td>100.000000</td>\n","      <td>43.096234</td>\n","      <td>88.637222</td>\n","    </tr>\n","    <tr>\n","      <th>관악구</th>\n","      <td>0.628242</td>\n","      <td>0.411765</td>\n","      <td>0.583333</td>\n","      <td>0.562094</td>\n","      <td>0.428234</td>\n","      <td>69.062500</td>\n","      <td>100.000000</td>\n","      <td>88.888889</td>\n","      <td>30.561715</td>\n","      <td>80.109157</td>\n","    </tr>\n","    <tr>\n","      <th>광진구</th>\n","      <td>0.397695</td>\n","      <td>0.529412</td>\n","      <td>0.166667</td>\n","      <td>0.671570</td>\n","      <td>0.269094</td>\n","      <td>91.666667</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>42.200925</td>\n","      <td>83.047619</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1cff5d44-c475-48d1-a7f9-1735ef5d57c8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1cff5d44-c475-48d1-a7f9-1735ef5d57c8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1cff5d44-c475-48d1-a7f9-1735ef5d57c8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-311575a7-8e21-44aa-b319-d89fe55c6555\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-311575a7-8e21-44aa-b319-d89fe55c6555')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-311575a7-8e21-44aa-b319-d89fe55c6555 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":136}]},{"cell_type":"code","source":["plt.rc('font' , family = 'NanumGothic')\n","mpl.rcParams['axes.unicode_minus'] = False"],"metadata":{"id":"VBA2XjLgw12k","executionInfo":{"status":"ok","timestamp":1696983106215,"user_tz":-540,"elapsed":322,"user":{"displayName":"김경수","userId":"10907451516248175311"}}},"execution_count":140,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"u4-4rc-zF0OT"},"execution_count":null,"outputs":[]}]}